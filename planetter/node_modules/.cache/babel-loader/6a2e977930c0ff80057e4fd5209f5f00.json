{"ast":null,"code":"import _slicedToArray from\"C:/Users/blue_/Desktop/Coding/project/planetter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{Routes,Route,NavLink,useNavigate}from\"react-router-dom\";// import Slider from \"react-slick\";\n// import $ from \"jquery\";\nimport'./App.css';import Login from'./components/Login';import Redirect from'./components/Redirect';import Redirect2 from'./components/Redirect2';import ModalStory from'./components/ModalStory';import Menu from'./components/Menu';import NameOfPlanet from'./components/NameOfPlanet';// function DayCount() {\n//   const [Dday, setDday] = useState('아직 편지 받을 준비가 되지 않았어요.');\n//   function setDDay() {\n//     // Set the date we're counting down to\n//     let today = new Date();\n//     let thatDay = new Date();\n//     thatDay.setDate(today.getDate() + 10);\n//     let DDay = new Date(thatDay).getTime();\n//     // Update the count down every 1 second\n//     let count = setInterval(function () {\n//       // Get today's date and time\n//       let now = new Date().getTime();\n//       // Find the distance between now and the count down date\n//       let distance = DDay - now;\n//       // Time calculations for days, hours, minutes and seconds\n//       let days = Math.floor(distance / (1000 * 60 * 60 * 24));\n//       let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n//       let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n//       let seconds = Math.floor((distance % (1000 * 60)) / 1000);\n//       // Output the result in an element with id=\"Dday\"\n//       setDday(days + '일 ' + hours + '시간 ' + minutes + '분 ' + seconds + '초');\n//       // If the count down is over, write some text\n//       if (distance < 0) {\n//         clearInterval(count);\n//         setDday(\"편지를 열어보세요.\");\n//       }\n//     }, 1000);\n//   };\n//   return (\n//     <React.Fragment>\n//       <button onClick={setDDay}>Start D-day</button>\n//       <h5>{Dday}</h5>\n//     </React.Fragment>\n//   );\n// };\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Main(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),checkStory=_useState2[0],setCheckStory=_useState2[1];var _useState3=useState({\"nickname\":'null',\"openDate\":null}),_useState4=_slicedToArray(_useState3,2),userData=_useState4[0],setUserData=_useState4[1];// const [letterData, setLetterData] = useState(null);\n// Delete Cookie\nfunction delCookie(){var expires=new Date();expires.setDate(expires.getDate()-1);var expiresDate=expires.toUTCString();var setCookie='';setCookie+='planetter=190301;';setCookie+='Expires='+expiresDate;document.cookie=setCookie;};useEffect(function(){var cookieData=document.cookie.split(';');for(var i=0;i<cookieData.length;i++){if(cookieData[i].indexOf('planetter')>-1){}else{setCheckStory(false);}break;};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"main_background\",children:[/*#__PURE__*/_jsx(ModalStory,{props:{checkStory:checkStory,setCheckStory:setCheckStory}}),/*#__PURE__*/_jsx(Menu,{props:userData}),/*#__PURE__*/_jsx(NameOfPlanet,{props:{userData:userData,setUserData:setUserData}}),/*#__PURE__*/_jsx(\"h1\",{style:{position:\"absolute\",right:\"0\",bottom:\"20%\"},children:/*#__PURE__*/_jsx(NavLink,{end:true,to:\"/login\",children:\"login\"})}),/*#__PURE__*/_jsx(\"button\",{style:{position:\"absolute\",right:\"0\",bottom:\"20%\"},onClick:delCookie,children:\"Delete Cookie\"})]});};function App(){var navigater=useNavigate();var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),userID=_useState6[0],setUserID=_useState6[1];useEffect(function(){// Check user device.\nif(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)){}else{alert(\"모바일 환경에 최적화 되어 있습니다.\");};if(userID===null){navigater('/login');}else{};},[navigater,userID]);return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Main,{})}),/*#__PURE__*/_jsx(Route,{path:\"/*\",element:/*#__PURE__*/_jsx(Main,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{props:userID})}),/*#__PURE__*/_jsx(Route,{path:\"/redirect\",element:/*#__PURE__*/_jsx(Redirect,{props:setUserID})}),/*#__PURE__*/_jsx(Route,{path:\"/redirect2\",element:/*#__PURE__*/_jsx(Redirect2,{props:setUserID})})]})});};export default App;","map":{"version":3,"names":["React","useEffect","useState","Routes","Route","NavLink","useNavigate","Login","Redirect","Redirect2","ModalStory","Menu","NameOfPlanet","Main","checkStory","setCheckStory","userData","setUserData","delCookie","expires","Date","setDate","getDate","expiresDate","toUTCString","setCookie","document","cookie","cookieData","split","i","length","indexOf","position","right","bottom","App","navigater","userID","setUserID","test","navigator","userAgent","alert"],"sources":["C:/Users/blue_/Desktop/Coding/project/planetter/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Routes, Route, NavLink, useNavigate } from \"react-router-dom\";\n// import Slider from \"react-slick\";\n// import $ from \"jquery\";\nimport './App.css';\nimport Login from './components/Login';\nimport Redirect from './components/Redirect';\nimport Redirect2 from './components/Redirect2';\nimport ModalStory from './components/ModalStory';\nimport Menu from './components/Menu';\nimport NameOfPlanet from './components/NameOfPlanet';\n\n\n// function DayCount() {\n\n//   const [Dday, setDday] = useState('아직 편지 받을 준비가 되지 않았어요.');\n\n//   function setDDay() {\n//     // Set the date we're counting down to\n//     let today = new Date();\n//     let thatDay = new Date();\n//     thatDay.setDate(today.getDate() + 10);\n//     let DDay = new Date(thatDay).getTime();\n//     // Update the count down every 1 second\n//     let count = setInterval(function () {\n//       // Get today's date and time\n//       let now = new Date().getTime();\n//       // Find the distance between now and the count down date\n//       let distance = DDay - now;\n//       // Time calculations for days, hours, minutes and seconds\n//       let days = Math.floor(distance / (1000 * 60 * 60 * 24));\n//       let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n//       let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n//       let seconds = Math.floor((distance % (1000 * 60)) / 1000);\n//       // Output the result in an element with id=\"Dday\"\n//       setDday(days + '일 ' + hours + '시간 ' + minutes + '분 ' + seconds + '초');\n//       // If the count down is over, write some text\n//       if (distance < 0) {\n//         clearInterval(count);\n//         setDday(\"편지를 열어보세요.\");\n//       }\n//     }, 1000);\n//   };\n\n//   return (\n//     <React.Fragment>\n//       <button onClick={setDDay}>Start D-day</button>\n//       <h5>{Dday}</h5>\n//     </React.Fragment>\n//   );\n// };\n\nfunction Main() {\n\n  const [checkStory, setCheckStory] = useState(true);\n  const [userData, setUserData] = useState({ \"nickname\": 'null', \"openDate\": null });\n  // const [letterData, setLetterData] = useState(null);\n\n  // Delete Cookie\n  function delCookie() {\n    const expires = new Date();\n    expires.setDate(expires.getDate() - 1);\n    const expiresDate = expires.toUTCString();\n    let setCookie = '';\n    setCookie += 'planetter=190301;';\n    setCookie += 'Expires=' + expiresDate;\n    document.cookie = setCookie;\n  };\n\n  useEffect(() => {\n    const cookieData = document.cookie.split(';');\n    for (let i = 0; i < cookieData.length; i++) {\n      if (cookieData[i].indexOf('planetter') > -1) {\n      } else {\n        setCheckStory(false);\n      } break;\n    };\n  }, []);\n\n  return (\n    <div className='main_background'>\n      <ModalStory props={{ checkStory, setCheckStory }}></ModalStory>\n      <Menu props={userData}></Menu>\n      <NameOfPlanet props={{ userData, setUserData }}></NameOfPlanet>\n      <h1 style={{ position: \"absolute\", right: \"0\", bottom: \"20%\" }}><NavLink end to=\"/login\">login</NavLink></h1>\n      <button style={{ position: \"absolute\", right: \"0\", bottom: \"20%\" }} onClick={delCookie}>Delete Cookie</button>\n    </div>\n  );\n};\n\nfunction App() {\n\n  const navigater = useNavigate();\n  const [userID, setUserID] = useState(1);\n\n  useEffect(() => {\n    // Check user device.\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n    } else {\n      alert(\"모바일 환경에 최적화 되어 있습니다.\");\n    };\n    if (userID === null) {\n      navigater('/login');\n    } else {\n    };\n  }, [navigater, userID])\n\n  return (\n    <React.Fragment>\n      <Routes>\n        <Route path=\"/\" element={<Main />}></Route>\n        <Route path=\"/*\" element={<Main />}></Route>\n        <Route path=\"/login\" element={<Login props={userID} />}></Route>\n        <Route path=\"/redirect\" element={<Redirect props={setUserID} />}></Route>\n        <Route path=\"/redirect2\" element={<Redirect2 props={setUserID} />}></Route>\n      </Routes>\n    </React.Fragment>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}