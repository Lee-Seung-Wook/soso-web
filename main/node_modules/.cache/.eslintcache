[{"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\index.js":"1","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\App.js":"2","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\reportWebVitals.js":"3","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\store\\store.js":"4","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Main.js":"5","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Login.js":"6","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Redirect.js":"7","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Redirect2.js":"8","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Send.js":"9","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\ModalStory.js":"10","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\InnerPage.js":"11","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Menu.js":"12","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\ShareBt.js":"13","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Restart.js":"14","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Refresh.js":"15"},{"size":792,"mtime":1684761601717,"results":"16","hashOfConfig":"17"},{"size":2951,"mtime":1688993537495,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1684761601837,"results":"19","hashOfConfig":"17"},{"size":8620,"mtime":1689084843425,"results":"20","hashOfConfig":"17"},{"size":1481,"mtime":1688993459771,"results":"21","hashOfConfig":"17"},{"size":53153,"mtime":1688993464602,"results":"22","hashOfConfig":"17"},{"size":8378,"mtime":1688993440174,"results":"23","hashOfConfig":"17"},{"size":1687,"mtime":1688993435775,"results":"24","hashOfConfig":"17"},{"size":97363,"mtime":1689085708692,"results":"25","hashOfConfig":"17"},{"size":6249,"mtime":1688993444687,"results":"26","hashOfConfig":"17"},{"size":50268,"mtime":1689084882162,"results":"27","hashOfConfig":"17"},{"size":78828,"mtime":1689084404859,"results":"28","hashOfConfig":"17"},{"size":5958,"mtime":1688993178237,"results":"29","hashOfConfig":"17"},{"size":3263,"mtime":1688993164659,"results":"30","hashOfConfig":"17"},{"size":2185,"mtime":1688993429642,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y7gww7",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\index.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\App.js",["78"],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\reportWebVitals.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\store\\store.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Main.js",["79","80","81"],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Login.js",["82"],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Redirect.js",["83"],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Redirect2.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Send.js",["84","85","86","87"],[],"import React, { useState, useRef, useCallback, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Adsense } from '@ctrl/react-adsense';\r\nimport './Send.css'\r\n\r\nfunction Send() {\r\n    // const navigater = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const textareaFocus = useRef('');\r\n    const isSendMain = useSelector((state) => state.isSendMain);\r\n    const [shareUserID, setShareUserID] = useState(null);\r\n    const text = useSelector((state) => state.text);\r\n    const textLength = useSelector((state) => state.textLength);\r\n    const stickerArray = useSelector((state) => state.stickerArray);\r\n    const stickerNumber = useSelector((state) => state.stickerNumber);\r\n    const isThirdInfo = useSelector((state) => state.isThirdInfo);\r\n    // \r\n    const isSendPopUp = useSelector((state) => state.isSendPopUp);\r\n    const isSendPopUpCancel = useSelector((state) => state.isSendPopUpCancel);\r\n    const isSendPopUpCheck = useSelector((state) => state.isSendPopUpCheck);\r\n    const isPreLetterBox = useSelector((state) => state.isPreLetterBox);\r\n    const author = useSelector((state) => state.author);\r\n    const stamp = useSelector((state) => state.stamp);\r\n    const isStamp = useSelector((state) => state.isStamp);\r\n    //\r\n    const isSendingPage = useSelector((state) => state.isSendingPage);\r\n    const isSendingEnd = useSelector((state) => state.isSendingEnd);\r\n    // \r\n    const isLetterOption = useSelector((state) => state.isLetterOption);\r\n    const isFontFamily = useSelector((state) => state.isFontFamily);\r\n    const isRange = useSelector((state) => state.isRange);\r\n    const isColor = useSelector((state) => state.isColor);\r\n    const isLetterPaper = useSelector((state) => state.isLetterPaper);\r\n    const isSticker = useSelector((state) => state.isSticker);\r\n    // \r\n    const [stickerNUM, setStickerNUM] = useState([]);\r\n    //\r\n    const [userNickName, setUserNickName] = useState(null);\r\n    const [openUserOpenDate, setOpenUserOpenDate] = useState(null);\r\n    const [userLetterCount, setUserLetterCount] = useState(null);\r\n    // 편지 기본 설정 값\r\n    const [styleLetter, setStyleLetter] = useState({ \"fontSize\": \"0.875rem\", \"fontFamily\": \"SpoqaHanSansNeo-Regular\", \"color\": \"black\", \"textAlign\": \"left\", \"backgroundImage\": \"url('https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_white.gif?raw=true')\" });\r\n    // \r\n    const [letterMenu, setLetterMenu] = useState({\r\n        font: false,\r\n        range: false,\r\n        color: false,\r\n        paper: false,\r\n        sticker: false\r\n    });\r\n    const [fontItem, setFontItem] = useState({\r\n        a: true,\r\n        b: false,\r\n        c: false,\r\n        d: false,\r\n        e: false,\r\n        f: false\r\n    });\r\n    const [rangeItem, setRangeItem] = useState({\r\n        left: true,\r\n        center: false,\r\n        right: false\r\n    });\r\n    const [colorItem, setColorItem] = useState({\r\n        a: true,\r\n        b: false,\r\n        c: false,\r\n        d: false,\r\n        e: false,\r\n        f: false,\r\n        g: false,\r\n        h: false,\r\n        i: false,\r\n        j: false\r\n    });\r\n    const [paperItem, setPaperItem] = useState({\r\n        a: false,\r\n        b: false,\r\n        c: false,\r\n        d: true,\r\n        e: false,\r\n        f: false,\r\n        g: false,\r\n        h: false,\r\n        i: false,\r\n        j: false,\r\n        k: false,\r\n        l: false,\r\n        m: false,\r\n        n: false,\r\n        o: false,\r\n        p: false,\r\n        q: false,\r\n        r: false,\r\n        s: false,\r\n        t: false,\r\n        u: false,\r\n        v: false,\r\n        w: false,\r\n        x: false,\r\n        y: false,\r\n        z: false,\r\n        a1: false,\r\n        b1: false,\r\n        c1: false,\r\n        d1: false,\r\n        e1: false,\r\n        f1: false,\r\n        g1: false\r\n    });\r\n    //\r\n    const [completion, setCompletion] = useState(false);\r\n    // 편지 내용 선별 DB\r\n    const bad_word = ['<', '>', '씨발', '시발', '♡년', '병신', '개새끼', '강간', '따먹', '로리', '쇼타', '씹', '앰창', '엠창', '좆', '창남', '창녀', '창놈', '창년', '걸레', '갈보', '멍청도', '보전깨', '빨통', '쌍놈', '쌍년', '썅년', '썅놈', '자살', '자해', '육변기', '느갭', '미친년', '미친놈', '염병', '♡빻', '재기', '젖', '성괴', '호로년', '호로잡년', '조건만남', '장애년', '좆창년', '♡련', '쪽바리', '니애미', '느금마', '니애비', '피싸개', '도태남', '부랄발작', '헤으응', '한남충', '한녀', '성매매', '장애인년', '니미', '사지절단', '엿', '맘충', '짱깨', '예수쟁이', '개독교', '똥꼬충', '소추', '두창', '죽어라', '떡치', '지년', '박고', '박아', '받이'];\r\n\r\n    // 스티커 옵션 생성 기능\r\n    useEffect(() => {\r\n        let stickerBox = document.querySelector('#stickerBox').innerHTML;\r\n        const origin = 65;\r\n        let newstickerNUM = [...stickerNUM];\r\n        if (stickerBox === '') {\r\n            for (let i = 0; i < origin; i++) {\r\n                newstickerNUM.push(i);\r\n            };\r\n            setStickerNUM(newstickerNUM);\r\n        };\r\n    }, [])\r\n    const stickerArrayOption = stickerNUM.map(function (i) {\r\n        return <button className={`send_item_sticker_` + i} key={i} onClick={() => { createEl(stickerNumber, i) }}></button>\r\n    });\r\n\r\n    // (팝업) 모바일 사용 권유\r\n    function ThirdInfo() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={isThirdInfo ? \"isFirstIngo_wrap\" : \"isFirstIngo_fade\"}>\r\n                    <div className='isFirstIngo_outContainer'>\r\n                        <p className='isFirstIngo_title'>모바일로 접속해 주세요.</p>\r\n                        <p className='isFirstIngo_p'>PL@TER는 모바일에 최적화 되어 있어요.</p>\r\n                        <p className='isFirstIngo_p'>PC 등으로 접속 시 오류가 발생할 수 있어요.</p>\r\n                        <div className='isFirstIngo_button_confirm' onClick={() => { dispatch({ type: 'CHANGE_ISTHIRDINFO', data: !isThirdInfo }); }}>확인</div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    // (팝업) 편지 작성 페이지 첫 안내 \r\n    function SendPopUp() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={isSendPopUp ? \"isSendPopUp\" : \"isSendPopUp_fade\"}>\r\n                    <div className='isSendPopUp_outContainer'>\r\n                        <p className='isSendPopUp_title'>〈 {userNickName}님의 행성 〉</p>\r\n                        <p className='isSendPopUp_p'>어서오세요! 이곳은</p>\r\n                        <p className='isSendPopUp_p'>{userNickName}님의 행성입니다.</p>\r\n                        <div className='isSendPopUp_innerBox'>\r\n                            <div className='isSendPopUp_button_signOut' onClick={() => {\r\n                                window.location.replace('/web/main');\r\n                            }}>행성 개설하기</div>\r\n                            <div className='isSendPopUp_button_cancel' onClick={() => {\r\n                                dispatch({ type: 'CHANGE_ISSENDPOPUP', data: !isSendPopUp });\r\n                                textareaFocus.current.focus();\r\n                            }}>편지 작성하기</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    // (팝업) 편지 작성 취소\r\n    function SendPopUpCancel() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={isSendPopUpCancel ? \"isSendPopUpCancel\" : \"isSendPopUpCancel_fade\"}>\r\n                    <div className='isSendPopUpCancel_outContainer'>\r\n                        <p className='isSendPopUpCancel_title'>작성을 취소하겠습니까?</p>\r\n                        <p className='isSendPopUpCancel_p'>작성을 취소하면 작성 중이던</p>\r\n                        <p className='isSendPopUpCancel_p'>내용은 모두 삭제됩니다.</p>\r\n                        <div className='isSendPopUpCancel_innerBox'>\r\n                            <div className='isSendPopUpCancel_button_signOut' onClick={() => {\r\n                                window.location.replace('/web/main');\r\n                            }}>작성 취소</div>\r\n                            <div className='isSendPopUpCancel_button_cancel' onClick={() => {\r\n                                dispatch({ type: 'CHANGE_ISSENDPOPUPCANCEL', data: !isSendPopUpCancel });\r\n                            }}>편지 작성하기</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    // (팝업) 편지 내용이 없는 경우\r\n    function SendPopUpCheck() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={isSendPopUpCheck ? \"isSendPopUpCheck\" : \"isSendPopUpCheck_fade\"}>\r\n                    <div className='isSendPopUpCheck_outContainer'>\r\n                        <p className='isSendPopUpCheck_title'>편지가 비어 있습니다.</p>\r\n                        <p className='isSendPopUpCheck_p'>당신의 소중한 이야기를 들려주세요.</p>\r\n                        <div className='isSendPopUpCheck_button_cancel' onClick={() => {\r\n                            dispatch({ type: 'CHANGE_ISSENDPOPUPCHECK', data: !isSendPopUpCheck });\r\n                        }}>계속 작성하기</div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    // 편지 미리보기 Component\r\n    function PreLetter() {\r\n        const [preAuthor, setPreAuthor] = useState(author);\r\n        const [preIsStamp, setPreIsStamp] = useState(isStamp);\r\n        const [stampNum, setStampNum] = useState(stamp);\r\n\r\n        // 작성자 변경 기능\r\n        function changeAuthor(props) {\r\n            dispatch({ type: 'CHANGE_AUTHOR', data: props });\r\n        };\r\n\r\n        // 우표 선택 기능(표현)\r\n        function changeStamp() {\r\n            dispatch({ type: 'CHANGE_ISSTAMP', data: preIsStamp });\r\n            dispatch({ type: 'CHANGE_STAMP', data: stampNum });\r\n        };\r\n\r\n        // 우표 선택하는 기능\r\n        function selectStamp(props) {\r\n            let newStampItem = { ...preIsStamp };\r\n            switch (props) {\r\n                case 'stamp_1':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['a'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_2':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['b'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_3':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['c'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_4':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['d'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_5':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['e'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_6':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['f'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_7':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['g'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_8':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['h'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_9':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['i'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_10':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['j'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_11':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['k'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_12':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['l'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                default:\r\n                    break;\r\n            };\r\n        };\r\n\r\n        // 편지 내용 선별 기능\r\n        function filter() {\r\n            let compare_data = text;\r\n            for (let i = 0; i < bad_word.length; i++) {\r\n                for (let j = 0; j < compare_data.length; j++) {\r\n                    if (bad_word[i] === compare_data.substring(j, j + bad_word[i].length)) {\r\n                        compare_data = compare_data.replace(compare_data.substring(j, j + bad_word[i].length), '♡')\r\n                    };\r\n                };\r\n            };\r\n            dispatch({ type: 'CHANGE_TEXT', data: compare_data });\r\n        };\r\n\r\n        useEffect(() => {\r\n            makeLetter();\r\n        }, []);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className={isPreLetterBox ? 'pre_letter_outBox_active' : 'pre_letter_outBox'}>\r\n                    <div className='pre_letter_wrap'>\r\n                        <section className='section_shootingStar'>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                        </section>\r\n                        <div className='send_top_menu' style={{ 'marginBottom': '0.5rem' }}>\r\n                            <img alt='backIMG' src='https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/icon/back.png?raw=true' onClick={() => {\r\n                                changeAuthor(preAuthor);\r\n                                changeStamp();\r\n                                dispatch({ type: 'CHANGE_ISPRELETTERBOX', data: !isPreLetterBox });\r\n                                dispatch({ type: 'CHANGE_ISSENDMAIN', data: !isSendMain });\r\n                            }}></img>\r\n                            <h3>수정하기</h3>\r\n                            <span onClick={() => {\r\n                                changeAuthor(preAuthor);\r\n                                changeStamp();\r\n                                filter();\r\n                                dispatch({ type: 'CHANGE_ISPRELETTERBOX', data: !isPreLetterBox });\r\n                                dispatch({ type: 'CHANGE_ISSENDINGPAGE', data: !isSendingPage });\r\n                            }}>보내기</span>\r\n                        </div>\r\n                        <div className='pre_letter_outContainer'>\r\n                            <textarea style={styleLetter} className='send_pre_textbox' readOnly></textarea>\r\n                        </div>\r\n                        <div className='pre_letter_author_outContainer'>\r\n                            <p className='pre_letter_autho_title'>발신자 명</p>\r\n                            <div className='pre_letter_author_input_div'>\r\n                                <span className='pre_letter_author_input_title'>from.</span>\r\n                                <input className='pre_letter_author_input' type='text' maxLength={10} placeholder={author} onChange={(e) => {\r\n                                    setPreAuthor(e.target.value);\r\n                                }}></input><span className='pre_letter_author_input_length'>{preAuthor.length}/10</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='pre_letter_author_outContainer'>\r\n                            <p className='pre_letter_autho_title' style={{ marginTop: '1.0rem' }}>우표</p>\r\n                            <div className='pre_letter_stamp_outContainer'>\r\n                                <div id='pre_letter_stamp_img_1' className={preIsStamp.a ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                    selectStamp('stamp_1');\r\n                                    setStampNum(0);\r\n                                }}></div>\r\n                                <div id='pre_letter_stamp_img_2' className={preIsStamp.b ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                    selectStamp('stamp_2');\r\n                                    setStampNum(1);\r\n                                }}></div>\r\n                                <div id='pre_letter_stamp_img_3' className={preIsStamp.c ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                    selectStamp('stamp_3');\r\n                                    setStampNum(2);\r\n                                }}></div>\r\n                                <div id='pre_letter_stamp_img_4' className={preIsStamp.d ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                    selectStamp('stamp_4');\r\n                                    setStampNum(3);\r\n                                }}></div>\r\n                                <div id='pre_letter_stamp_img_5' className={preIsStamp.e ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                    selectStamp('stamp_5');\r\n                                    setStampNum(4);\r\n                                }}></div>\r\n                                <div id='pre_letter_stamp_img_6' className={preIsStamp.f ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                    selectStamp('stamp_6');\r\n                                    setStampNum(5);\r\n                                }}></div>\r\n                                <div id='pre_letter_stamp_img_7' className={preIsStamp.g ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                    selectStamp('stamp_7');\r\n                                    setStampNum(6);\r\n                                }}></div>\r\n                                <div id='pre_letter_stamp_img_8' className={preIsStamp.h ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                    selectStamp('stamp_8');\r\n                                    setStampNum(7);\r\n                                }}></div>\r\n                                <div id='pre_letter_stamp_img_9' className={preIsStamp.i ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                    selectStamp('stamp_9');\r\n                                    setStampNum(8);\r\n                                }}></div>\r\n                                <div id='pre_letter_stamp_img_10' className={preIsStamp.j ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                    selectStamp('stamp_10');\r\n                                    setStampNum(9);\r\n                                }}></div>\r\n                                <div id='pre_letter_stamp_img_11' className={preIsStamp.k ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                    selectStamp('stamp_11');\r\n                                    setStampNum(10);\r\n                                }}></div>\r\n                                <div id='pre_letter_stamp_img_12' className={preIsStamp.l ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                    selectStamp('stamp_12');\r\n                                    setStampNum(11);\r\n                                }}></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    // 미리보기 편지 제작 기능\r\n    function makeLetter() {\r\n        let copyStickerArray = stickerArray;\r\n        for (let i = 0; i < copyStickerArray.length; i++) {\r\n            let item = document.createElement('div');\r\n            let stage = document.querySelector('.pre_letter_outContainer');\r\n            item.setAttribute('id', '_' + copyStickerArray[i].id);\r\n            item.setAttribute('class', 'send_item_sticker' + copyStickerArray[i].stickerIcon);\r\n            stage.appendChild(item);\r\n            setTranslate(Math.round(Number(copyStickerArray[i].stickerX)), Math.round((Number(copyStickerArray[i].stickerY))), item);\r\n        };\r\n        // 스티커 미리보기 기능\r\n        function setTranslate(xPos, yPos, el) {\r\n            el.style.transform = \"translate3d(\" + xPos + \"px, \" + yPos + \"px, 0)\";\r\n        };\r\n        // 편지 내용 삽입 기능\r\n        let copyText = text;\r\n        let enterText = document.querySelector('.send_pre_textbox');\r\n        enterText.value = copyText;\r\n    };\r\n\r\n    // 편지 보내는 중 Component(수정 중)\r\n    function SendingPage() {\r\n        // 최종 사용자 정보 확인 기능(open, count)\r\n        async function finalCheck(letterData) {\r\n            await fetch(`${process.env.REACT_APP_USER_DATA_SHARE}${shareUserID}`, {\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then((res) => {\r\n                    if (!res.ok) {\r\n                        throw new Error();\r\n                    };\r\n                    return res.json();\r\n                })\r\n                .then((data) => {\r\n                    let now = new Date().getTime();\r\n                    let distance = Number(data.userOpenDate) - now;\r\n                    if (distance > 0) {\r\n                        // if (distance >= 0) {\r\n                        fetch(`${process.env.REACT_APP_LETTER_COUNT_SHARE}${shareUserID}`, {\r\n                            method: 'GET',\r\n                            mode: 'cors',\r\n                            cache: 'no-cache',\r\n                            credentials: 'same-origin',\r\n                            headers: {\r\n                                'Content-Type': 'application/json'\r\n                            }\r\n                        })\r\n                            .then((res) => {\r\n                                if (!res.ok) {\r\n                                    throw new Error();\r\n                                };\r\n                                return res.json();\r\n                            })\r\n                            .then((data) => {\r\n                                if (Number(data) >= 36) {\r\n                                    alert('방금 전에 행성이 편지로 가득찼습니다. Pl@ter 페이지로 이동합니다.');\r\n                                    window.location.replace('/web/main');\r\n                                } else {\r\n                                    sendLetterFunc(letterData);\r\n                                };\r\n                            })\r\n                            .catch((error) => {\r\n                                alert('정상적으로 편지 발송에 실패했습니다. 잠시 후 다시 편지를 보내주세요.');\r\n                                dispatch({ type: 'CHANGE_ISSENDINGPAGE', data: !isSendingPage });\r\n                                dispatch({ type: 'CHANGE_ISPRELETTERBOX', data: !isPreLetterBox });\r\n                            })\r\n                    } else {\r\n                        alert('방금 전에 행성이 만료되었습니다. Pl@ter 페이지로 이동합니다.');\r\n                        window.location.replace('/web/main');\r\n                    };\r\n                })\r\n                .catch((error) => {\r\n                    alert('정상적으로 편지 발송에 실패했습니다. 잠시 후 다시 편지를 보내주세요.');\r\n                    dispatch({ type: 'CHANGE_ISSENDINGPAGE', data: !isSendingPage });\r\n                    dispatch({ type: 'CHANGE_ISPRELETTERBOX', data: !isPreLetterBox });\r\n                });\r\n        };\r\n        // 편지 보내기 기능\r\n        async function sendLetterFunc(props) {\r\n            await fetch(`${process.env.REACT_APP_REGISTER_LETTER}`, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(props)\r\n            })\r\n                .then(res => {\r\n                    if (!res.ok) {\r\n                        throw new Error();\r\n                    };\r\n                    return res.json();\r\n                })\r\n                .then((data) => {\r\n                    dispatch({ type: 'CHANGE_ISSENDINGEND', data: !isSendingEnd });\r\n                    dispatch({ type: 'CHANGE_ISSENDINGPAGE', data: !isSendingPage });\r\n                })\r\n                .catch((error) => {\r\n                    alert('서버가 불안정 하여 편지가 정상적으로 발송되지 않았습니다. 잠시 후 다시 시도해주세요.');\r\n                    dispatch({ type: 'CHANGE_ISSENDINGPAGE', data: !isSendingPage });\r\n                    dispatch({ type: 'CHANGE_ISPRELETTERBOX', data: !isPreLetterBox });\r\n                });\r\n        };\r\n        // 편지 내용 취합 기능\r\n        function checkLetterData() {\r\n            let sticker = [...stickerArray];\r\n            for (let i = 0; i < sticker.length; i++) {\r\n                delete sticker[i].id;\r\n            };\r\n            let letterData = {\r\n                'letter': {\r\n                    'userId': String(shareUserID),\r\n                    'letterContent': String(text),\r\n                    'letterFont': String(styleLetter['fontFamily']),\r\n                    'letterTextAlign': String(styleLetter['textAlign']),\r\n                    'letterFontSize': String(styleLetter['fontSize']),\r\n                    'letterFontColor': String(styleLetter['color']),\r\n                    'letterPaper': String(styleLetter['backgroundImage']),\r\n                    'letterWriter': String(author),\r\n                    'letterIcon': String(stamp)\r\n                },\r\n                sticker\r\n            };\r\n            finalCheck(letterData);\r\n        };\r\n\r\n        useEffect(() => {\r\n            setTimeout(() => {\r\n                checkLetterData();\r\n            }, 3000);\r\n        }, []);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className={isSendingPage ? 'sending_page_outBox_active' : 'sending_page_outBox'}>\r\n                    <div className='sending_page_wrap'>\r\n                        <section className='section_shootingStar'>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                        </section>\r\n                        <div className='sending_page_gif'></div>\r\n                        <h3 className='sending_page_h3'>편지 보내는 중...</h3>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    // 편지 발송 완료 Component(수정 중)\r\n    function SendingEnd() {\r\n        const [whenDay, setWhenDay] = useState('');\r\n        // 편지 도착 일자 안내 기능(확인 필요)\r\n        function noticeDay() {\r\n            let goal = openUserOpenDate;\r\n            let now = new Date();\r\n            let originTime = Math.abs(goal - now.getTime());\r\n            let originDay = Math.ceil(originTime / (1000 * 60 * 60 * 24));\r\n            if (originDay < 1) {\r\n                setWhenDay('잠시 후');\r\n            } else if (originDay === 1) {\r\n                setWhenDay('내일');\r\n            } else {\r\n                setWhenDay(Number(originDay) + '일 후에');\r\n            };\r\n        };\r\n        // 카카오 애드 관련 기능\r\n        useEffect(() => {\r\n            noticeDay();\r\n            let ins = document.createElement('ins');\r\n            let scr = document.createElement('script');\r\n            ins.className = 'kakao_ad_area';\r\n            ins.style = \"display:none; width:100%;\";\r\n            scr.async = 'true';\r\n            scr.type = \"text/javascript\";\r\n            scr.src = \"//t1.daumcdn.net/kas/static/ba.min.js\";\r\n            ins.setAttribute('data-ad-width', '320');\r\n            ins.setAttribute('data-ad-height', '100');\r\n            ins.setAttribute('data-ad-unit', 'DAN-wwtMTOs6oLrop9iK');\r\n            document.querySelector('.adfit').appendChild(ins);\r\n            document.querySelector('.adfit').appendChild(scr);\r\n        }, [])\r\n        return (\r\n            <React.Fragment>\r\n                <div className={isSendingEnd ? 'sending_end_active' : 'sending_end'}>\r\n                    <div className='sending_end_wrap'>\r\n                        <section className='section_shootingStar'>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                        </section>\r\n                        <div className='sending_end_img'></div>\r\n                        <p className='sending_end_p'>발송을 완료했어요!</p>\r\n                        <p className='sending_end_p2'>당신의 소중한 편지는 {whenDay} 도착합니다.</p>\r\n                        <div className='sending_end_div' onClick={() => {\r\n                            window.location.replace('/web/main');\r\n                        }}>나도 행성 개설하기</div>\r\n                        <br></br>\r\n                        <div className=\"adfit\"></div>\r\n                        <div className='googleAdsense'>\r\n                            <Adsense\r\n                                client={process.env.REACT_APP_GOOGLE_ADSENSE}\r\n                                slot={process.env.REACT_APP_GOOGLE_ADSENSE_SLOT}\r\n                                style={{ display: 'block' }}\r\n                                layout=\"in-article\"\r\n                                format=\"fluid\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    // 편지 내용 여부 확인 기능(랜더링 직후)\r\n    useEffect(() => {\r\n        if (text === \"\") {\r\n            setCompletion(false);\r\n        } else {\r\n            setCompletion(true);\r\n        };\r\n    }, [text]);\r\n\r\n    // 사용자 정보 요청 기능\r\n    function requireUserCheckData(props) {\r\n        fetch(`${process.env.REACT_APP_USER_DATA_SHARE}${props}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error();\r\n                };\r\n                return res.json();\r\n            })\r\n            .then((userData) => {\r\n                setUserNickName(String(userData.userNickName));\r\n                setOpenUserOpenDate(Number(userData.userOpenDate));\r\n                fetch(`${process.env.REACT_APP_LETTER_COUNT_SHARE}${props}`, {\r\n                    method: 'GET',\r\n                    mode: 'cors',\r\n                    cache: 'no-cache',\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                })\r\n                    .then(res => {\r\n                        if (!res.ok) {\r\n                            throw new Error();\r\n                        };\r\n                        return res.json();\r\n                    })\r\n                    .then((letterCount) => {\r\n                        setUserLetterCount(Number(letterCount));\r\n                    })\r\n                    .catch((error) => {\r\n                        alert('서버로부터 행성 개설자의 편지함 정보를 받아오지 못했습니다. 잠시 후 다시 시도해주세요.');\r\n                        // window.location.replace('/web/main');\r\n                    });\r\n            })\r\n            .catch((error) => {\r\n                alert('서버로부터 행성 개설자 정보를 받아오지 못했습니다. 잠시 후 다시 시도해주세요.');\r\n                // window.location.replace('/web/main');\r\n            });\r\n    };\r\n\r\n    // 최초 사용자 정보 확인 기능(open, count)\r\n    function firstCheck() {\r\n        if (openUserOpenDate !== null && userLetterCount !== null) {\r\n            let now = new Date().getTime();\r\n            let distance = openUserOpenDate - now;\r\n            if (distance >= 0) {\r\n                if (userLetterCount >= 36) {\r\n                    alert('행성이 편지로 가득찼습니다. Pl@ter 페이지로 이동합니다.');\r\n                    // window.location.replace('/web/main');\r\n                };\r\n            } else {\r\n                alert('행성이 만료되었습니다. Pl@ter 페이지로 이동합니다.');\r\n                // window.location.replace('/web/main');\r\n            };\r\n        };\r\n    };\r\n\r\n    // 사용자 공유 아이디 확인 기능(?userID=userID)\r\n    const get_query = useCallback(() => {\r\n        const url = document.location.href;\r\n        const qs = url.substring(url.indexOf('?') + 1).split('&');\r\n        const result = {};\r\n        for (let i = 0; i < qs.length; i++) {\r\n            qs[i] = qs[i].split('='); result[qs[i][0]] = decodeURIComponent(qs[i][1]);\r\n        };\r\n        setShareUserID(qs[0][1]);\r\n        if (qs[0][1] !== undefined) {\r\n            requireUserCheckData(qs[0][1]);\r\n        } else {\r\n            alert('정상적인 접근 방법이 아닙니다. Pl@ter 페이지로 이동합니다.');\r\n            // window.location.replace('/web/main');\r\n        };\r\n    }, []);\r\n\r\n    // 최초 사용자 정보 확인 기능(랜더링 직후)\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            dispatch({ type: 'CHANGE_ISSENDPOPUP', data: true });\r\n            firstCheck();\r\n        }, 500);\r\n        // firstCheck();\r\n    }, [openUserOpenDate, userLetterCount])\r\n\r\n    // 사용자 공유 아이디 확인 기능(랜더링 직후) + 서버로 log 정보 보내는 기능(랜더링 직후)\r\n    useEffect(() => {\r\n        // 사용자 기기 확인 기능\r\n        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n        } else {\r\n            dispatch({ type: 'CHANGE_ISTHIRDINFO', data: !isThirdInfo });\r\n        };\r\n        get_query();\r\n        fetch(`${process.env.REACT_APP_REGISTER_LOG}send`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(() => {\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }, [get_query]);\r\n\r\n    // (편지 작성) 스티커 배열 추가 기능\r\n    function locationData(data, id, X, Y, num) {\r\n        if (id === '') {\r\n        } else {\r\n            if (data.length === 0) {\r\n                data.push({ 'id': id, 'stickerX': Math.round(X), 'stickerY': Math.round(Y), 'stickerIcon': num });\r\n                dispatch({ type: 'CHANGE_STICKER', data: data });\r\n            } else {\r\n                if (data.some((e) => e.id === id)) {\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        if (data[i].id === id) {\r\n                            data[i] = { 'id': id, 'stickerX': Math.round(X), 'stickerY': Math.round(Y), 'stickerIcon': num };\r\n                            dispatch({ type: 'CHANGE_STICKER', data: data });\r\n                        };\r\n                    };\r\n                } else {\r\n                    data.push({ 'id': id, 'stickerX': Math.round(X), 'stickerY': Math.round(Y), 'stickerIcon': num });\r\n                    dispatch({ type: 'CHANGE_STICKER', data: data });\r\n                };\r\n            };\r\n        };\r\n    };\r\n\r\n    // (편지 작성) 스티커 삭제(배열 포함) 기능\r\n    function remove(props) {\r\n        let newData = stickerArray;\r\n        let item = document.querySelector('#id' + props);\r\n        for (let i = 0; i < newData.length; i++) {\r\n            if (newData[i].id === 'id' + props) {\r\n                newData.splice(i, 1);\r\n                dispatch({ type: 'CHANGE_STICKER', data: newData });\r\n            };\r\n        };\r\n        item.remove();\r\n    };\r\n\r\n    // 스티커 추가 기능\r\n    function createEl(props, num) {\r\n        // Creating elements\r\n        let item = document.createElement('div');\r\n        let itemClose = document.createElement('div');\r\n        let stage = document.querySelector('#send_textarea');\r\n        item.setAttribute('id', 'id' + props);\r\n        item.setAttribute('class', 'send_item_sticker' + num);\r\n        itemClose.setAttribute('class', 'send_close');\r\n        itemClose.addEventListener('click', () => { remove(props) });\r\n        stage.appendChild(item);\r\n        let stageClose = document.querySelector('#id' + props);\r\n        stageClose.appendChild(itemClose);\r\n        dispatch({ type: 'CHANGE_STICKER_NUMBER', data: stickerNumber + 1 });\r\n        // Function to move elements\r\n        let dragItem = document.querySelector(\"#id\" + props);\r\n        let active = false;\r\n        let currentX;\r\n        let currentY;\r\n        let initialX;\r\n        let initialY;\r\n        let xOffset = 0;\r\n        let yOffset = 0;\r\n        dragItem.addEventListener(\"touchstart\", dragStart, false);\r\n        dragItem.addEventListener(\"touchend\", dragEnd, false);\r\n        dragItem.addEventListener(\"touchmove\", drag, false);\r\n        dragItem.addEventListener(\"mousedown\", dragStart, false);\r\n        dragItem.addEventListener(\"mouseup\", dragEnd, false);\r\n        dragItem.addEventListener(\"mousemove\", drag, false);\r\n        // 스티커 이동 기능(1)\r\n        function dragStart(e) {\r\n            if (e.type === \"touchstart\") {\r\n                initialX = e.touches[0].clientX - xOffset;\r\n                initialY = e.touches[0].clientY - yOffset;\r\n            } else {\r\n                initialX = e.clientX - xOffset;\r\n                initialY = e.clientY - yOffset;\r\n            };\r\n            if (e.target === dragItem) {\r\n                active = true;\r\n            };\r\n        };\r\n        // 스티커 이동 기능(2)\r\n        function drag(e) {\r\n            if (active) {\r\n                e.preventDefault();\r\n                if (e.type === \"touchmove\") {\r\n                    currentX = e.touches[0].clientX - initialX;\r\n                    currentY = e.touches[0].clientY - initialY;\r\n                } else {\r\n                    currentX = e.clientX - initialX;\r\n                    currentY = e.clientY - initialY;\r\n                };\r\n                xOffset = currentX;\r\n                yOffset = currentY;\r\n                if (currentX >= 140 || currentY >= 165 || currentX <= -140 || currentY <= -165) {\r\n                    setTranslate(Math.round(currentX), Math.round(currentY), dragItem);\r\n                    dragEnd(e);\r\n                    alert('편지지 안쪽에 스티커를 붙여주세요.');\r\n                } else {\r\n                    setTranslate(Math.round(currentX), Math.round(currentY), dragItem);\r\n                };\r\n            };\r\n        };\r\n        // 스티커 이동 기능(3)\r\n        function setTranslate(xPos, yPos, el) {\r\n            el.style.transform = \"translate3d(\" + xPos + \"px, \" + yPos + \"px, 0)\";\r\n            el.style.position = \"relative\";\r\n        };\r\n        // 스티커 이동 기능(4)\r\n        function dragEnd(e) {\r\n            locationData(stickerArray, e.target.id, currentX, currentY, num);\r\n            active = false;\r\n            dragItem.style.position = \"absolute\";\r\n        };\r\n    };\r\n\r\n    // (편지 작성) 편지 꾸미기 옵션 활성화 기능\r\n    function activeLetterOption() {\r\n        if (isLetterOption === false) {\r\n            dispatch({ type: 'CHANGE_ISLETTEROPTION', data: true });\r\n            dispatch({ type: 'CHANGE_ISFONTFAMILY', data: true });\r\n        };\r\n    };\r\n\r\n    // (편지 작성) 편지 꾸미기 옵션 비활성화 기능\r\n    function inactiveLetterOption() {\r\n        if (isLetterOption === true) {\r\n            dispatch({ type: 'CHANGE_ISLETTEROPTION', data: false });\r\n            dispatch({ type: 'CHANGE_ISFONTFAMILY', data: false });\r\n            dispatch({ type: 'CHANGE_ISRANGE', data: false });\r\n            dispatch({ type: 'CHANGE_ISCOLOR', data: false });\r\n            dispatch({ type: 'CHANGE_ISLETTERPAPER', data: false });\r\n            dispatch({ type: 'CHANGE_ISSTICKER', data: false });\r\n        };\r\n    };\r\n\r\n    // (편지 작성) 편지 꾸미기 상세 옵션 선택 기능\r\n    function changeLetterOption(props) {\r\n        switch (props) {\r\n            case 'CHANGE_ISFONTFAMILY':\r\n                dispatch({ type: 'CHANGE_ISFONTFAMILY', data: true });\r\n                dispatch({ type: 'CHANGE_ISRANGE', data: false });\r\n                dispatch({ type: 'CHANGE_ISCOLOR', data: false });\r\n                dispatch({ type: 'CHANGE_ISLETTERPAPER', data: false });\r\n                dispatch({ type: 'CHANGE_ISSTICKER', data: false });\r\n                break;\r\n            case 'CHANGE_ISRANGE':\r\n                dispatch({ type: 'CHANGE_ISFONTFAMILY', data: false });\r\n                dispatch({ type: 'CHANGE_ISRANGE', data: true });\r\n                dispatch({ type: 'CHANGE_ISCOLOR', data: false });\r\n                dispatch({ type: 'CHANGE_ISLETTERPAPER', data: false });\r\n                dispatch({ type: 'CHANGE_ISSTICKER', data: false });\r\n                break;\r\n            case 'CHANGE_ISCOLOR':\r\n                dispatch({ type: 'CHANGE_ISFONTFAMILY', data: false });\r\n                dispatch({ type: 'CHANGE_ISRANGE', data: false });\r\n                dispatch({ type: 'CHANGE_ISCOLOR', data: true });\r\n                dispatch({ type: 'CHANGE_ISLETTERPAPER', data: false });\r\n                dispatch({ type: 'CHANGE_ISSTICKER', data: false });\r\n\r\n                break;\r\n            case 'CHANGE_ISLETTERPAPER':\r\n                dispatch({ type: 'CHANGE_ISFONTFAMILY', data: false });\r\n                dispatch({ type: 'CHANGE_ISRANGE', data: false });\r\n                dispatch({ type: 'CHANGE_ISCOLOR', data: false });\r\n                dispatch({ type: 'CHANGE_ISLETTERPAPER', data: true });\r\n                dispatch({ type: 'CHANGE_ISSTICKER', data: false });\r\n                break;\r\n            case 'CHANGE_ISSTICKER':\r\n                dispatch({ type: 'CHANGE_ISFONTFAMILY', data: false });\r\n                dispatch({ type: 'CHANGE_ISRANGE', data: false });\r\n                dispatch({ type: 'CHANGE_ISCOLOR', data: false });\r\n                dispatch({ type: 'CHANGE_ISLETTERPAPER', data: false });\r\n                dispatch({ type: 'CHANGE_ISSTICKER', data: true });\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n    };\r\n\r\n    // (편지 작성) 폰트 변경 기능\r\n    function setFontFamily(props, size) {\r\n        let newStyle = { ...styleLetter };\r\n        newStyle['fontFamily'] = props;\r\n        newStyle['fontSize'] = size;\r\n        setStyleLetter(newStyle);\r\n    };\r\n\r\n    // (편지 작성) 정렬 변경 기능\r\n    function setRange(props) {\r\n        let newStyle = { ...styleLetter };\r\n        newStyle['textAlign'] = props;\r\n        setStyleLetter(newStyle);\r\n    };\r\n\r\n    // (편지 작성) 색상 변경 기능\r\n    function setColor(props) {\r\n        let newStyle = { ...styleLetter };\r\n        newStyle['color'] = props;\r\n        setStyleLetter(newStyle);\r\n    };\r\n\r\n    // (편지 작성) 편지지 변경 기능\r\n    function setPaper(props) {\r\n        let newStyle = { ...styleLetter };\r\n        newStyle['backgroundImage'] = props;\r\n        setStyleLetter(newStyle);\r\n    };\r\n\r\n    // (편지 작성) 편지 꾸미기 상세 옵션 선택 기능(표현)\r\n    function selectLetterMenu(props) {\r\n        let newLetterMenu = { ...letterMenu };\r\n        switch (props) {\r\n            case 'font':\r\n                Object.keys(newLetterMenu).forEach(key => {\r\n                    newLetterMenu[key] = false;\r\n                });\r\n                newLetterMenu['font'] = true;\r\n                setLetterMenu(newLetterMenu);\r\n                break;\r\n            case 'range':\r\n                Object.keys(newLetterMenu).forEach(key => {\r\n                    newLetterMenu[key] = false;\r\n                });\r\n                newLetterMenu['range'] = true;\r\n                setLetterMenu(newLetterMenu);\r\n                break;\r\n            case 'color':\r\n                Object.keys(newLetterMenu).forEach(key => {\r\n                    newLetterMenu[key] = false;\r\n                });\r\n                newLetterMenu['color'] = true;\r\n                setLetterMenu(newLetterMenu);\r\n                break;\r\n            case 'paper':\r\n                Object.keys(newLetterMenu).forEach(key => {\r\n                    newLetterMenu[key] = false;\r\n                });\r\n                newLetterMenu['paper'] = true;\r\n                setLetterMenu(newLetterMenu);\r\n                break;\r\n            case 'sticker':\r\n                Object.keys(newLetterMenu).forEach(key => {\r\n                    newLetterMenu[key] = false;\r\n                });\r\n                newLetterMenu['sticker'] = true;\r\n                setLetterMenu(newLetterMenu);\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n    };\r\n\r\n    // (편지 작성) 폰트 변경 기능(표현)\r\n    function selectFontItem(props) {\r\n        let newFontItem = { ...fontItem };\r\n        switch (props) {\r\n            case 'fontItem_1':\r\n                Object.keys(newFontItem).forEach(key => {\r\n                    newFontItem[key] = false;\r\n                });\r\n                newFontItem['a'] = true;\r\n                setFontItem(newFontItem);\r\n                break;\r\n            case 'fontItem_2':\r\n                Object.keys(newFontItem).forEach(key => {\r\n                    newFontItem[key] = false;\r\n                });\r\n                newFontItem['b'] = true;\r\n                setFontItem(newFontItem);\r\n                break;\r\n            case 'fontItem_3':\r\n                Object.keys(newFontItem).forEach(key => {\r\n                    newFontItem[key] = false;\r\n                });\r\n                newFontItem['c'] = true;\r\n                setFontItem(newFontItem);\r\n                break;\r\n            case 'fontItem_4':\r\n                Object.keys(newFontItem).forEach(key => {\r\n                    newFontItem[key] = false;\r\n                });\r\n                newFontItem['d'] = true;\r\n                setFontItem(newFontItem);\r\n                break;\r\n            case 'fontItem_5':\r\n                Object.keys(newFontItem).forEach(key => {\r\n                    newFontItem[key] = false;\r\n                });\r\n                newFontItem['e'] = true;\r\n                setFontItem(newFontItem);\r\n                break;\r\n            case 'fontItem_6':\r\n                Object.keys(newFontItem).forEach(key => {\r\n                    newFontItem[key] = false;\r\n                });\r\n                newFontItem['f'] = true;\r\n                setFontItem(newFontItem);\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n    };\r\n\r\n    // (편지 작성) 정렬 변경 기능(표현)\r\n    function selectRangeItem(props) {\r\n        let newRangeItem = { ...rangeItem };\r\n        switch (props) {\r\n            case 'left':\r\n                Object.keys(newRangeItem).forEach(key => {\r\n                    newRangeItem[key] = false;\r\n                });\r\n                newRangeItem['left'] = true;\r\n                setRangeItem(newRangeItem);\r\n                break;\r\n            case 'center':\r\n                Object.keys(newRangeItem).forEach(key => {\r\n                    newRangeItem[key] = false;\r\n                });\r\n                newRangeItem['center'] = true;\r\n                setRangeItem(newRangeItem);\r\n                break;\r\n            case 'right':\r\n                Object.keys(newRangeItem).forEach(key => {\r\n                    newRangeItem[key] = false;\r\n                });\r\n                newRangeItem['right'] = true;\r\n                setRangeItem(newRangeItem);\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n    };\r\n\r\n    // (편지 작성) 색상 변경 기능(표현)\r\n    function selectColorItem(props) {\r\n        let newColorItem = { ...colorItem };\r\n        switch (props) {\r\n            case 'color_1':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['a'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_2':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['b'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_3':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['c'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_4':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['d'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_5':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['e'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_6':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['f'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_7':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['g'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_8':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['h'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_9':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['i'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_10':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['j'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n    };\r\n\r\n    // (편지 작성) 편지지 변경 기능(표현)\r\n    function selectPaperItem(props) {\r\n        let newPaperItem = { ...paperItem };\r\n        switch (props) {\r\n            case 'paper_1':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['a'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_2':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['b'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_3':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['c'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_4':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['d'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_5':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['e'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_6':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['f'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_7':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['g'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_8':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['h'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_9':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['i'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_10':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['j'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_11':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['k'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_12':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['l'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_13':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['m'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_14':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['n'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_15':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['o'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_16':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['p'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_17':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['q'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_18':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['r'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_19':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['s'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_20':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['t'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_21':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['u'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_22':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['v'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_23':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['w'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_24':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['x'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_25':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['y'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_26':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['z'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_27':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['a1'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_28':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['b1'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_29':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['c1'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_30':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['d1'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_31':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['e1'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_32':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['f1'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_33':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['g1'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n    };\r\n\r\n    // 스티커 배열, 스티커 숫자, 스티커 아이템 초기화 및 삭제 for Template\r\n    async function initialzation() {\r\n        let content = document.querySelector('#send_textarea').childNodes;\r\n        delItem(content);\r\n        function delItem(props) {\r\n            let newData = stickerArray;\r\n            newData.length = 0;\r\n            let number = Number(props.length);\r\n            dispatch({ type: 'CHANGE_STICKER', data: newData.length });\r\n            dispatch({ type: 'CHANGE_STICKER_NUMBER', data: 0 });\r\n            if (number > 1) {\r\n                for (let i = 0; i < number - 1; i++) {\r\n                    props[1].remove();\r\n                };\r\n            };\r\n        };\r\n    };\r\n\r\n    // 스티커 추가 기능 for Template\r\n    function stickerSetting(props) {\r\n        for (let i = 0; i < props.length; i++) {\r\n            createEl2(props[i].templateNum, props[i].templateIcon, props[i].templateXpos, props[i].templateYpos);\r\n            let dragItem = document.querySelector(\"#id\" + i);\r\n            let active = false;\r\n            setTranslate2(props[i].templateXpos, props[i].templateYpos, dragItem);\r\n            dragEnd2(i, props[i].templateXpos, props[i].templateYpos, props[i].templateIcon, dragItem, active);\r\n        };\r\n        // 스티커 이동 기능(4)\r\n        function dragEnd2(i, currentX, currentY, num, dragItem, active) {\r\n            locationData(stickerArray, 'id' + i, currentX, currentY, num, dragItem);\r\n            active = false;\r\n            dragItem.style.position = \"absolute\";\r\n        };\r\n        // 스티커 이동 기능(3)\r\n        function setTranslate2(xPos, yPos, el) {\r\n            el.style.transform = \"translate3d(\" + xPos + \"px, \" + yPos + \"px, 0)\";\r\n            el.style.position = \"relative\";\r\n        };\r\n        // 스티커 추가 기능\r\n        function createEl2(props, num, xPos, yPos) {\r\n            // Creating elements\r\n            let item = document.createElement('div');\r\n            let itemClose = document.createElement('div');\r\n            let stage = document.querySelector('#send_textarea');\r\n            item.setAttribute('id', 'id' + props);\r\n            item.setAttribute('class', 'send_item_sticker' + num);\r\n            itemClose.setAttribute('class', 'send_close');\r\n            itemClose.addEventListener('click', () => { remove(props) });\r\n            stage.appendChild(item);\r\n            let stageClose = document.querySelector('#id' + props);\r\n            stageClose.appendChild(itemClose);\r\n            dispatch({ type: 'CHANGE_STICKER_NUMBER', data: props + 1 });\r\n            // Function to move elements\r\n            let dragItem = document.querySelector(\"#id\" + props);\r\n            let active = false;\r\n            let currentX = xPos;\r\n            let currentY = yPos;\r\n            let initialX = xPos;\r\n            let initialY = yPos;\r\n            let xOffset = xPos;\r\n            let yOffset = yPos;\r\n            dragItem.addEventListener(\"touchstart\", dragStart, false);\r\n            dragItem.addEventListener(\"touchend\", dragEnd, false);\r\n            dragItem.addEventListener(\"touchmove\", drag, false);\r\n            dragItem.addEventListener(\"mousedown\", dragStart, false);\r\n            dragItem.addEventListener(\"mouseup\", dragEnd, false);\r\n            dragItem.addEventListener(\"mousemove\", drag, false);\r\n            // 스티커 이동 기능(1)\r\n            function dragStart(e) {\r\n                if (e.type === \"touchstart\") {\r\n                    initialX = e.touches[0].clientX - xOffset;\r\n                    initialY = e.touches[0].clientY - yOffset;\r\n                } else {\r\n                    initialX = e.clientX - xOffset;\r\n                    initialY = e.clientY - yOffset;\r\n                };\r\n                if (e.target === dragItem) {\r\n                    active = true;\r\n                };\r\n            };\r\n            // 스티커 이동 기능(2)\r\n            function drag(e) {\r\n                if (active) {\r\n                    e.preventDefault();\r\n                    if (e.type === \"touchmove\") {\r\n                        currentX = e.touches[0].clientX - initialX;\r\n                        currentY = e.touches[0].clientY - initialY;\r\n                    } else {\r\n                        currentX = e.clientX - initialX;\r\n                        currentY = e.clientY - initialY;\r\n                    };\r\n                    xOffset = currentX;\r\n                    yOffset = currentY;\r\n                    if (currentX >= 140 || currentY >= 165 || currentX <= -140 || currentY <= -165) {\r\n                        setTranslate(Math.round(currentX), Math.round(currentY), dragItem);\r\n                        dragEnd(e);\r\n                        alert('편지지 안쪽에 스티커를 붙여주세요.');\r\n                    } else {\r\n                        setTranslate(Math.round(currentX), Math.round(currentY), dragItem);\r\n                    };\r\n                };\r\n            };\r\n            // 스티커 이동 기능(3)\r\n            function setTranslate(xPos, yPos, el) {\r\n                el.style.transform = \"translate3d(\" + xPos + \"px, \" + yPos + \"px, 0)\";\r\n                el.style.position = \"relative\";\r\n            };\r\n            // 스티커 이동 기능(4)\r\n            function dragEnd(e) {\r\n                locationData(stickerArray, e.target.id, currentX, currentY, num);\r\n                active = false;\r\n                dragItem.style.position = \"absolute\";\r\n            };\r\n        };\r\n    };\r\n\r\n    // 템플릿 설정 기능(수정 중)\r\n    async function template() {\r\n        let templateArraySticker = [\r\n            { templateNum: 0, templateIcon: 0, templateXpos: 50, templateYpos: 50 },\r\n            { templateNum: 1, templateIcon: 1, templateXpos: -50, templateYpos: -50 }\r\n        ];\r\n        let templateStyle = { fontSize: 0.875, fontFamily: 'GyeonggiBatang', color: 'red', textAlign: 'center', backgroundImage: \"url('https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_mint.gif?raw=true')\" };\r\n\r\n        let newStyle = { ...styleLetter };\r\n        newStyle['fontSize'] = templateStyle.fontSize + 'rem';\r\n        newStyle['fontFamily'] = templateStyle.fontFamily;\r\n        newStyle['color'] = templateStyle.color;\r\n        newStyle['textAlign'] = templateStyle.textAlign;\r\n        newStyle['backgroundImage'] = templateStyle.backgroundImage;\r\n        setStyleLetter(newStyle);\r\n        await initialzation();\r\n        stickerSetting(templateArraySticker);\r\n    };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <SendingEnd></SendingEnd>\r\n            {isSendingPage ? <SendingPage></SendingPage> : ''}\r\n            <PreLetter></PreLetter>\r\n            <SendPopUp></SendPopUp>\r\n            <SendPopUpCancel></SendPopUpCancel>\r\n            <SendPopUpCheck></SendPopUpCheck>\r\n            <ThirdInfo></ThirdInfo>\r\n            <div className={isSendMain ? 'send_main_fade' : 'send_main_active'}>\r\n                <section className='section_shootingStar'>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                </section>\r\n                <div className='send_top_menu'>\r\n                    <img alt='backIMG' src='https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/icon/back.png?raw=true' onClick={() => {\r\n                        dispatch({ type: 'CHANGE_ISSENDPOPUPCANCEL', data: !isSendPopUpCancel });\r\n                    }}></img>\r\n                    <h3>To. {userNickName}</h3>\r\n                    <span className={completion ? 'set_top_menu_completion_active' : 'set_top_menu_completion'} onClick={() => {\r\n                        if (text === '') {\r\n                            dispatch({ type: 'CHANGE_ISSENDPOPUPCHECK', data: !isSendPopUpCheck });\r\n                        } else {\r\n                            dispatch({ type: 'CHANGE_ISPRELETTERBOX', data: !isPreLetterBox });\r\n                            inactiveLetterOption();\r\n                            dispatch({ type: 'CHANGE_ISSENDMAIN', data: !isSendMain });\r\n                        };\r\n                    }}>완성하기</span>\r\n                </div>\r\n                <div>\r\n                    <div id=\"send_textarea\">\r\n                        <textarea style={styleLetter} ref={textareaFocus} className=\"send_textbox\" maxLength={240} placeholder='※ 편지를 작성해주세요.&#13;&#10;※ 240자 또는 1쪽 이내' onChange={(e) => {\r\n                            inactiveLetterOption();\r\n                            if (e.target.scrollHeight > 320) {\r\n                                alert('아직 쪽을 넘겨서 작성하면 편지가 올바르게 전달되지 않습니다.');\r\n                                let modifiedText = e.target.value.slice(0, -1);\r\n                                e.target.value = modifiedText;\r\n                            };\r\n                            dispatch({ type: 'CHANGE_TEXTLENGTH', data: e.target.value.length });\r\n                            dispatch({ type: 'CHANGE_TEXT', data: e.target.value });\r\n                        }} onFocus={() => {\r\n                            inactiveLetterOption();\r\n                        }}\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n                    <div className='send_textLength'>{textLength}/240</div>\r\n                </div>\r\n                {/*  */}\r\n                <div style={{ color: \"white\", position: \"inherit\", right: \"0\", marginRight: \"10rem\" }} onClick={() => { template() }}>template1</div>\r\n                {/*  */}\r\n                <div className='send_option_button_div'>\r\n                    <div className='send_option_button' onClick={() => {\r\n                        activeLetterOption();\r\n                        selectLetterMenu('font');\r\n                    }}></div>\r\n                </div>\r\n                <div className={isLetterOption ? 'send_letter_option_active' : 'send_letter_option'} >\r\n                    <img className='send_letter_menu_close' alt='option_closed' src='https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/etc/send/closed_btn.png?raw=true' onClick={() => {\r\n                        inactiveLetterOption();\r\n                        selectLetterMenu('font');\r\n                    }}></img>\r\n                    <div className='send_letter_option_innerContainer'>\r\n                        <div className='send_letter_option_menu'>\r\n                            <div className={letterMenu.font ? 'send_letter_menu_active' : 'send_letter_menu'} onClick={() => {\r\n                                changeLetterOption('CHANGE_ISFONTFAMILY');\r\n                                selectLetterMenu('font');\r\n                            }}>글꼴</div>\r\n                            <div className={letterMenu.range ? 'send_letter_menu_active' : 'send_letter_menu'} onClick={() => {\r\n                                changeLetterOption('CHANGE_ISRANGE');\r\n                                selectLetterMenu('range');\r\n                            }}>정렬</div>\r\n                            <div className={letterMenu.color ? 'send_letter_menu_active' : 'send_letter_menu'} onClick={() => {\r\n                                changeLetterOption('CHANGE_ISCOLOR');\r\n                                selectLetterMenu('color');\r\n                            }}>색상</div>\r\n                            <div className={letterMenu.paper ? 'send_letter_menu_active' : 'send_letter_menu'} onClick={() => {\r\n                                changeLetterOption('CHANGE_ISLETTERPAPER');\r\n                                selectLetterMenu('paper');\r\n                            }}>편지지</div>\r\n                            <div className={letterMenu.sticker ? 'send_letter_menu_active' : 'send_letter_menu'} onClick={() => {\r\n                                changeLetterOption('CHANGE_ISSTICKER');\r\n                                selectLetterMenu('sticker');\r\n                            }}>스티커</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={isFontFamily ? 'send_font_active' : 'send_font'}>\r\n                        <div className={fontItem.a ? 'send_item_font_active' : 'send_item_font'} style={{ fontFamily: 'SpoqaHanSansNeo-Regular' }} onClick={() => {\r\n                            setFontFamily('SpoqaHanSansNeo-Regular', '0.875rem');\r\n                            selectFontItem('fontItem_1');\r\n                        }}>\r\n                            <div className='send_item_font_title'>Spoqa Han Sans Neo R</div>\r\n                            <div className='send_item_font_content'>안녕, 플래터</div>\r\n                        </div>\r\n                        <div className={fontItem.b ? 'send_item_font_active' : 'send_item_font'} style={{ fontFamily: 'GyeonggiBatang' }} onClick={() => {\r\n                            setFontFamily('GyeonggiBatang', '0.875rem');\r\n                            selectFontItem('fontItem_2');\r\n                        }}>\r\n                            <div className='send_item_font_title'>경기천년바탕 R</div>\r\n                            <div className='send_item_font_content'>안녕, 플래터</div>\r\n                        </div>\r\n                        <div className={fontItem.c ? 'send_item_font_active' : 'send_item_font'} style={{ fontFamily: 'NeoDunggeunmo' }} onClick={() => {\r\n                            setFontFamily('NeoDunggeunmo', '0.8125rem');\r\n                            selectFontItem('fontItem_3');\r\n                        }}>\r\n                            <div className='send_item_font_title'>Neo 둥근모</div>\r\n                            <div className='send_item_font_content'>안녕, 플래터</div>\r\n                        </div>\r\n                        <div className={fontItem.d ? 'send_item_font_active' : 'send_item_font'} style={{ fontFamily: 'Saying_tobe_strong' }} onClick={() => {\r\n                            setFontFamily('Saying_tobe_strong', '1.20rem');\r\n                            selectFontItem('fontItem_4');\r\n                        }}>\r\n                            <div className='send_item_font_title'>힘내라는 말보단</div>\r\n                            <div className='send_item_font_content'>안녕, 플래터</div>\r\n                        </div>\r\n                        <div className={fontItem.e ? 'send_item_font_active' : 'send_item_font'} style={{ fontFamily: 'ROEHOE-CHAN' }} onClick={() => {\r\n                            setFontFamily('ROEHOE-CHAN', '0.98rem');\r\n                            selectFontItem('fontItem_5');\r\n                        }}>\r\n                            <div className='send_item_font_title'>노회찬체</div>\r\n                            <div className='send_item_font_content'>안녕, 플래터</div>\r\n                        </div>\r\n                        <div className={fontItem.f ? 'send_item_font_active' : 'send_item_font'} style={{ fontFamily: 'SBAggroB' }} onClick={() => {\r\n                            setFontFamily('SBAggroB', '0.84rem');\r\n                            selectFontItem('fontItem_6');\r\n                        }}>\r\n                            <div className='send_item_font_title'>어그로체 L</div>\r\n                            <div className='send_item_font_content'>안녕, 플래터</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={isRange ? 'send_range_active' : 'send_range'}>\r\n                        <div className={rangeItem.left ? 'send_item_range_active' : 'send_item_range'} onClick={() => {\r\n                            setRange('left');\r\n                            selectRangeItem('left');\r\n                        }}><div className='send_item_range_left'></div></div>\r\n                        <div className={rangeItem.center ? 'send_item_range_active' : 'send_item_range'} onClick={() => {\r\n                            setRange('center');\r\n                            selectRangeItem('center');\r\n                        }}><div className='send_item_range_center'></div></div>\r\n                        <div className={rangeItem.right ? 'send_item_range_active' : 'send_item_range'} onClick={() => {\r\n                            setRange('right');\r\n                            selectRangeItem('right');\r\n                        }}><div className='send_item_range_right'></div></div>\r\n                    </div>\r\n                    <div className={isColor ? 'send_color_active' : 'send_color'}>\r\n                        <div id='color_1' className={colorItem.a ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(6 18 42)');\r\n                            selectColorItem('color_1');\r\n                        }}></div>\r\n                        <div id='color_2' className={colorItem.b ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(169 19 25)');\r\n                            selectColorItem('color_2');\r\n                        }}></div>\r\n                        <div id='color_3' className={colorItem.c ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(242 202 22)');\r\n                            selectColorItem('color_3');\r\n                        }}></div>\r\n                        <div id='color_4' className={colorItem.d ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(77 168 77)');\r\n                            selectColorItem('color_4');\r\n                        }}></div>\r\n                        <div id='color_5' className={colorItem.e ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(8 160 222)');\r\n                            selectColorItem('color_5');\r\n                        }}></div>\r\n                        <div id='color_6' className={colorItem.f ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(76 76 253)');\r\n                            selectColorItem('color_6');\r\n                        }}></div>\r\n                        <div id='color_7' className={colorItem.g ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(221 79 136)');\r\n                            selectColorItem('color_7');\r\n                        }}></div>\r\n                        <div id='color_8' className={colorItem.h ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(73 36 25)');\r\n                            selectColorItem('color_8');\r\n                        }}></div>\r\n                        <div id='color_9' className={colorItem.i ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(1 124 136)');\r\n                            selectColorItem('color_9');\r\n                        }}></div>\r\n                        <div id='color_10' className={colorItem.j ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(220 233 243)');\r\n                            selectColorItem('color_10');\r\n                        }}></div>\r\n                    </div>\r\n                    <div className={isLetterPaper ? 'send_paper_active' : 'send_paper'}>\r\n                        <div id='paper_4' className={paperItem.d ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_white.gif?raw=true\\')');\r\n                            selectPaperItem('paper_4');\r\n                        }}><div className='send_item_paper_title'>하얀 편지지</div></div>\r\n                        <div id='paper_7' className={paperItem.g ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_blue.gif?raw=true\\')');\r\n                            selectPaperItem('paper_7');\r\n                        }}><div className='send_item_paper_title'>파랑 편지지</div></div>\r\n                        <div id='paper_33' className={paperItem.g1 ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/papre_green.gif?raw=true\\')');\r\n                            selectPaperItem('paper_33');\r\n                        }}><div className='send_item_paper_title'>초록 편지지</div></div>\r\n                        <div id='paper_17' className={paperItem.q ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_orange.gif?raw=true\\')');\r\n                            selectPaperItem('paper_17');\r\n                        }}><div className='send_item_paper_title'>주황 편지지</div></div>\r\n                        <div id='paper_25' className={paperItem.y ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_red.gif?raw=true\\')');\r\n                            selectPaperItem('paper_25');\r\n                        }}><div className='send_item_paper_title'>붉은 편지지</div></div>\r\n                        <div id='paper_22' className={paperItem.v ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_purple.gif?raw=true\\')');\r\n                            selectPaperItem('paper_22');\r\n                        }}><div className='send_item_paper_title'>보라 편지지</div></div>\r\n                        <div id='paper_16' className={paperItem.p ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_mint.gif?raw=true\\')');\r\n                            selectPaperItem('paper_16');\r\n                        }}><div className='send_item_paper_title'>민트 편지지</div></div>\r\n                        <div id='paper_15' className={paperItem.o ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_magenta.gif?raw=true\\')');\r\n                            selectPaperItem('paper_15');\r\n                        }}><div className='send_item_paper_title'>자홍 편지지</div></div>\r\n                        <div id='paper_32' className={paperItem.f1 ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_yellow.gif?raw=true\\')');\r\n                            selectPaperItem('paper_32');\r\n                        }}><div className='send_item_paper_title'>노란 편지지</div></div>\r\n                        <div id='paper_11' className={paperItem.k ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_flower.gif?raw=true\\')');\r\n                            selectPaperItem('paper_11');\r\n                        }}><div className='send_item_paper_title'>목화 편지지</div></div>\r\n                        <div id='paper_23' className={paperItem.w ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_purple_pastel.gif?raw=true\\')');\r\n                            selectPaperItem('paper_23');\r\n                        }}><div className='send_item_paper_title'>모란 편지지</div></div>\r\n                        <div id='paper_8' className={paperItem.h ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_blue_pastel.gif?raw=true\\')');\r\n                            selectPaperItem('paper_8');\r\n                        }}><div className='send_item_paper_title'>푸른 편지지</div></div>\r\n                        <div id='paper_13' className={paperItem.m ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_green_pastel.gif?raw=true\\')');\r\n                            selectPaperItem('paper_13');\r\n                        }}><div className='send_item_paper_title'>누런 편지지</div></div>\r\n                        <div id='paper_26' className={paperItem.z ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_red_pastel.gif?raw=true\\')');\r\n                            selectPaperItem('paper_26');\r\n                        }}><div className='send_item_paper_title'>분홍 편지지</div></div>\r\n                        <div id='paper_18' className={paperItem.r ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_mint_pastel.gif?raw=true\\')');\r\n                            selectPaperItem('paper_18');\r\n                        }}><div className='send_item_paper_title'>녹색 편지지</div></div>\r\n                        <div id='paper_19' className={paperItem.s ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_pastel.gif?raw=true\\')');\r\n                            selectPaperItem('paper_19');\r\n                        }}><div className='send_item_paper_title'>파스텔샤워 편지지</div></div>\r\n                        <div id='paper_12' className={paperItem.l ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_green_donut.gif?raw=true\\')');\r\n                            selectPaperItem('paper_12');\r\n                        }}><div className='send_item_paper_title'>도넛 편지지</div></div>\r\n                        <div id='paper_28' className={paperItem.b1 ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_stripe.gif?raw=true\\')');\r\n                            selectPaperItem('paper_28');\r\n                        }}><div className='send_item_paper_title'>줄무늬 편지지</div></div>\r\n                        <div id='paper_20' className={paperItem.t ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_pink_cloud.gif?raw=true\\')');\r\n                            selectPaperItem('paper_20');\r\n                        }}><div className='send_item_paper_title'>구름 편지지</div></div>\r\n                        <div id='paper_27' className={paperItem.a1 ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_sprout.gif?raw=true\\')');\r\n                            selectPaperItem('paper_27');\r\n                        }}><div className='send_item_paper_title'>새싹 편지지</div></div>\r\n                        <div id='paper_14' className={paperItem.n ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_little_flower.gif?raw=true\\')');\r\n                            selectPaperItem('paper_14');\r\n                        }}><div className='send_item_paper_title'>들꽃 편지지</div></div>\r\n                        <div id='paper_5' className={paperItem.e ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_birthday.gif?raw=true\\')');\r\n                            selectPaperItem('paper_5');\r\n                        }}><div className='send_item_paper_title'>생일 편지지</div></div>\r\n                        <div id='paper_6' className={paperItem.f ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_birthday_2.gif?raw=true\\')');\r\n                            selectPaperItem('paper_6');\r\n                        }}><div className='send_item_paper_title'>생일 편지지2</div></div>\r\n                        <div id='paper_30' className={paperItem.d1 ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_white_room.gif?raw=true\\')');\r\n                            selectPaperItem('paper_30');\r\n                        }}><div className='send_item_paper_title'>하얀방 편지지</div></div>\r\n                        <div id='paper_9' className={paperItem.i ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_cheese.gif?raw=true\\')');\r\n                            selectPaperItem('paper_9');\r\n                        }}><div className='send_item_paper_title'>치즈 편지지</div></div>\r\n                        <div id='paper_1' className={paperItem.a ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_city.gif?raw=true\\')');\r\n                            selectPaperItem('paper_1');\r\n                        }}><div className='send_item_paper_title'>도시 편지지</div></div>\r\n                        <div id='paper_3' className={paperItem.c ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_space.gif?raw=true\\')');\r\n                            selectPaperItem('paper_3');\r\n                        }}><div className='send_item_paper_title'>우주 편지지</div></div>\r\n                        <div id='paper_10' className={paperItem.j ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_error.gif?raw=true\\')');\r\n                            selectPaperItem('paper_10');\r\n                        }}><div className='send_item_paper_title'>오류 편지지</div></div>\r\n                        <div id='paper_21' className={paperItem.u ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_postit.gif?raw=true\\')');\r\n                            selectPaperItem('paper_21');\r\n                        }}><div className='send_item_paper_title'>쪽지 편지지</div></div>\r\n                        <div id='paper_2' className={paperItem.b ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_curce.gif?raw=true\\')');\r\n                            selectPaperItem('paper_2');\r\n                        }}><div className='send_item_paper_title'>저주 편지지</div></div>\r\n                        <div id='paper_31' className={paperItem.e1 ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_wrinkle.gif?raw=true\\')');\r\n                            selectPaperItem('paper_31');\r\n                        }}><div className='send_item_paper_title'>구겨진 편지지</div></div>\r\n                        <div id='paper_29' className={paperItem.c1 ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_vivid.gif?raw=true\\')');\r\n                            selectPaperItem('paper_29');\r\n                        }}><div className='send_item_paper_title'>비비드 편지지</div></div>\r\n                        <div id='paper_24' className={paperItem.x ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_rainbow.gif?raw=true\\')');\r\n                            selectPaperItem('paper_24');\r\n                        }}><div className='send_item_paper_title'>무지개 편지지</div></div>\r\n                    </div>\r\n                    <div id='stickerBox' className={isSticker ? 'send_sticker_active' : 'send_sticker'}>\r\n                        {stickerArrayOption}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Send;","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\ModalStory.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\InnerPage.js",["88","89","90"],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Menu.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\ShareBt.js",["91"],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Restart.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Refresh.js",[],[],{"ruleId":"92","severity":1,"message":"93","line":51,"column":6,"nodeType":"94","endLine":51,"endColumn":25,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":10,"column":10,"nodeType":"98","messageId":"99","endLine":10,"endColumn":17},{"ruleId":"96","severity":1,"message":"100","line":10,"column":19,"nodeType":"98","messageId":"99","endLine":10,"endColumn":29},{"ruleId":"92","severity":1,"message":"101","line":39,"column":6,"nodeType":"94","endLine":39,"endColumn":16,"suggestions":"102"},{"ruleId":"92","severity":1,"message":"103","line":53,"column":8,"nodeType":"94","endLine":53,"endColumn":27,"suggestions":"104"},{"ruleId":"92","severity":1,"message":"105","line":193,"column":8,"nodeType":"94","endLine":193,"endColumn":10,"suggestions":"106"},{"ruleId":"92","severity":1,"message":"107","line":127,"column":8,"nodeType":"94","endLine":127,"endColumn":10,"suggestions":"108"},{"ruleId":"92","severity":1,"message":"109","line":575,"column":12,"nodeType":"94","endLine":575,"endColumn":14,"suggestions":"110"},{"ruleId":"92","severity":1,"message":"111","line":760,"column":8,"nodeType":"94","endLine":760,"endColumn":43,"suggestions":"112"},{"ruleId":"92","severity":1,"message":"113","line":783,"column":8,"nodeType":"94","endLine":783,"endColumn":19,"suggestions":"114"},{"ruleId":"92","severity":1,"message":"115","line":460,"column":12,"nodeType":"94","endLine":460,"endColumn":14,"suggestions":"116"},{"ruleId":"96","severity":1,"message":"117","line":591,"column":25,"nodeType":"98","messageId":"99","endLine":591,"endColumn":39},{"ruleId":"92","severity":1,"message":"118","line":834,"column":12,"nodeType":"94","endLine":834,"endColumn":14,"suggestions":"119"},{"ruleId":"92","severity":1,"message":"120","line":18,"column":8,"nodeType":"94","endLine":18,"endColumn":37,"suggestions":"121"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'isFirstInfo'. Either include them or remove the dependency array.","ArrayExpression",["122"],"no-unused-vars","'render1' is assigned a value but never used.","Identifier","unusedVar","'setRender1' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isStory', 'navigater', and 'userID'. Either include them or remove the dependency array.",["123"],"React Hook useEffect has missing dependencies: 'dispatch' and 'isSecondInfo'. Either include them or remove the dependency array.",["124"],"React Hook useEffect has missing dependencies: 'RequestUserData', 'dispatch', 'name', 'nameErro', and 'navigater'. Either include them or remove the dependency array.",["125"],"React Hook useEffect has a missing dependency: 'stickerNUM'. Either include it or remove the dependency array.",["126"],"React Hook useEffect has a missing dependency: 'checkLetterData'. Either include it or remove the dependency array.",["127"],"React Hook useEffect has missing dependencies: 'dispatch' and 'firstCheck'. Either include them or remove the dependency array.",["128"],"React Hook useEffect has missing dependencies: 'dispatch' and 'isThirdInfo'. Either include them or remove the dependency array.",["129"],"React Hook useEffect has a missing dependency: 'setDDay'. Either include it or remove the dependency array.",["130"],"'arraySplitData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'openLetter'. Either include it or remove the dependency array.",["131"],"React Hook useEffect has a missing dependency: 'isShare'. Either include it or remove the dependency array.",["132"],{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [dispatch, isFirstInfo, navigater, userID]",{"range":"155","text":"156"},"Update the dependencies array to be: [dispatch, isStory, navigater, userID]",{"range":"157","text":"158"},"Update the dependencies array to be: [dispatch, isSecondInfo, navigater, userID]",{"range":"159","text":"160"},"Update the dependencies array to be: [RequestUserData, dispatch, name, nameErro, navigater]",{"range":"161","text":"162"},"Update the dependencies array to be: [stickerNUM]",{"range":"163","text":"164"},"Update the dependencies array to be: [checkLetterData]",{"range":"165","text":"166"},"Update the dependencies array to be: [dispatch, firstCheck, openUserOpenDate, userLetterCount]",{"range":"167","text":"168"},"Update the dependencies array to be: [dispatch, get_query, isThirdInfo]",{"range":"169","text":"170"},"Update the dependencies array to be: [setDDay]",{"range":"171","text":"172"},"Update the dependencies array to be: [openLetter]",{"range":"173","text":"174"},"Update the dependencies array to be: [dispatch, isShare, userData.openDate]",{"range":"175","text":"176"},[1930,1949],"[dispatch, isFirstInfo, navigater, userID]",[1237,1247],"[dispatch, isStory, navigater, userID]",[2091,2110],"[dispatch, isSecondInfo, navigater, userID]",[7137,7139],"[RequestUserData, dispatch, name, nameErro, navigater]",[4797,4799],"[stickerNUM]",[27410,27412],"[checkLetterData]",[34885,34920],"[dispatch, firstCheck, openUserOpenDate, userLetterCount]",[35661,35672],"[dispatch, get_query, isThirdInfo]",[22996,22998],"[setDDay]",[42215,42217],"[openLetter]",[763,792],"[dispatch, isShare, userData.openDate]"]