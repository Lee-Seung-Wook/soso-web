[{"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\index.js":"1","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\App.js":"2","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\reportWebVitals.js":"3","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\store\\store.js":"4","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Main.js":"5","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Login.js":"6","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Redirect.js":"7","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Redirect2.js":"8","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Send.js":"9","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\ModalStory.js":"10","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\InnerPage.js":"11","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Menu.js":"12","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\ShareBt.js":"13","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Restart.js":"14","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Refresh.js":"15"},{"size":770,"mtime":1680182611605,"results":"16","hashOfConfig":"17"},{"size":2768,"mtime":1680183985797,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1669628232649,"results":"19","hashOfConfig":"17"},{"size":22522,"mtime":1680004224500,"results":"20","hashOfConfig":"17"},{"size":3566,"mtime":1680093572246,"results":"21","hashOfConfig":"17"},{"size":51680,"mtime":1679916146501,"results":"22","hashOfConfig":"17"},{"size":6802,"mtime":1680170375687,"results":"23","hashOfConfig":"17"},{"size":1658,"mtime":1679225666159,"results":"24","hashOfConfig":"17"},{"size":93790,"mtime":1680183976776,"results":"25","hashOfConfig":"17"},{"size":4660,"mtime":1679225707362,"results":"26","hashOfConfig":"17"},{"size":44682,"mtime":1680182614024,"results":"27","hashOfConfig":"17"},{"size":70948,"mtime":1679225779707,"results":"28","hashOfConfig":"17"},{"size":5844,"mtime":1679225418596,"results":"29","hashOfConfig":"17"},{"size":952,"mtime":1680004249903,"results":"30","hashOfConfig":"17"},{"size":1711,"mtime":1680182384417,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y7gww7",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\index.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\App.js",["86"],[],"import React, { useEffect } from 'react';\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport './App.css';\nimport Main from './components/Main';\nimport Login from './components/Login';\nimport Redirect from './components/Redirect';\nimport Redirect2 from './components/Redirect2';\nimport Send from './components/Send';\n\n// set PORT=33381 && => package.json Script for Start\n\nfunction App() {\n  const navigater = useNavigate();\n  const dispatch = useDispatch();\n  const userID = useSelector((state) => state.userID);\n  const isFirstInfo = useSelector((state) => state.isFirstInfo);\n  \n  let vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n\n  function FirstInfo() {\n    return (\n      <React.Fragment>\n        <div className={isFirstInfo ? \"isFirstIngo_wrap\" : \"isFirstIngo_fade\"}>\n          <div className='isFirstIngo_outContainer'>\n            <p className='isFirstIngo_title'>모바일로 접속해 주세요.</p>\n            <p className='isFirstIngo_p'>PL@TER는 모바일에 최적화 되어 있어요.</p>\n            <p className='isFirstIngo_p'>PC 등으로 접속 시 오류가 발생할 수 있어요.</p>\n            <div className='isFirstIngo_button_confirm' onClick={() => { dispatch({ type: 'CHANGE_ISFIRSTINFO', data: !isFirstInfo }); }}>확인</div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  useEffect(() => {\n    // resize\n    window.addEventListener(\"resize\", () => {\n      let vh = window.innerHeight * 0.01;\n      document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n    });\n    // Check user device.\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n    } else {\n      dispatch({ type: 'CHANGE_ISFIRSTINFO', data: !isFirstInfo });\n    };\n    if (userID === null) {\n      navigater('/login');\n    } else {\n    };\n  }, [navigater, userID])\n\n  return (\n    <React.Fragment>\n      <div className='all_background_img'></div>\n      <section className='section_shootingStar'>\n        <span className='shootingStar'></span>\n        <span className='shootingStar'></span>\n        <span className='shootingStar'></span>\n        <span className='shootingStar'></span>\n      </section>\n      <FirstInfo></FirstInfo>\n      <Routes>\n        <Route path=\"/\" element={<Main />}></Route>\n        <Route path=\"/*\" element={<Main />}></Route>\n        <Route path=\"/login\" element={<Login />}></Route>\n        <Route path=\"/redirect\" element={<Redirect />}></Route>\n        <Route path=\"/redirect2\" element={<Redirect2 />}></Route>\n        <Route path=\"/send\" element={<Send />}></Route>\n      </Routes>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\store\\store.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Main.js",["87"],[],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport './Main.css';\r\nimport ModalStory from './ModalStory';\r\nimport Menu from './Menu';\r\nimport InnerPage from './InnerPage';\r\n\r\nfunction Main() {\r\n  const [render1, setRender1] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const isStory = useSelector((state) => state.isStory);\r\n\r\n  useEffect(() => {\r\n    const cookieData = document.cookie.split(';');\r\n    for (let i = 0; i < cookieData.length; i++) {\r\n      if (cookieData[i].indexOf('plater') > -1) {\r\n        dispatch({ type: 'CHANGE_ISSTORY', data: !isStory });\r\n      } else break;\r\n    };\r\n    fetch('https://plater.kr/api/request/log?/web/main', {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(() => {\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [dispatch]);\r\n\r\n  // Delete Cookie\r\n  function delCookie() {\r\n    alert('사용자의 쿠키 중 plater를 삭제했습니다.');\r\n    const expires = new Date();\r\n    expires.setDate(expires.getDate() - 1);\r\n    const expiresDate = expires.toUTCString();\r\n    let setCookie = '';\r\n    setCookie += 'plater=190301;';\r\n    setCookie += 'Expires=' + expiresDate;\r\n    document.cookie = setCookie;\r\n  };\r\n\r\n  // Setting Time\r\n  function settingTime() {\r\n    alert('사용자의 openDate를 11일 전으로 설정했습니다.');\r\n    const now = new Date();\r\n    now.setDate(now.getDate() - 11);\r\n    dispatch({ type: 'CHANGE_OPENDATE', data: Number(now.getTime()) });\r\n    setRender1(render1 + 1);\r\n  };\r\n\r\n  function checkLetter() {\r\n    fetch('https://plater.kr/api/letter/userid/kD8yXnOdq9MSJSM2BHLOHa7rsbewMSJSM3DMSJSM3D', {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        alert(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className='main_background'>\r\n      <ModalStory></ModalStory>\r\n      <Menu></Menu>\r\n      <InnerPage></InnerPage>\r\n      <NavLink end to=\"/send?userID=fpLNLOhMU4cElWo6FpMSJSM2BLMSJSM2FQMSJSM3DMSJSM3D\" onClick={() => {\r\n      }}><img style={{ width: \"10%\", position: \"absolute\", top: \"50%\", left: \"85%\" }} alt='login' src='https://cdn-icons-png.flaticon.com/512/9072/9072392.png'></img></NavLink>\r\n      <img onClick={settingTime} style={{ width: \"10%\", position: \"absolute\", top: \"60%\", left: \"85%\" }} alt='cookie' src='https://cdn-icons-png.flaticon.com/512/896/896266.png'></img>\r\n      <img onClick={delCookie} style={{ width: \"10%\", position: \"absolute\", top: \"80%\", left: \"85%\" }} alt='cookie' src='https://cdn-icons-png.flaticon.com/512/1330/1330387.png'></img>\r\n      <NavLink end to=\"/login\" onClick={() => {\r\n        dispatch({ type: 'CHANGE_USERID', data: null });\r\n      }}><img style={{ width: \"10%\", position: \"absolute\", top: \"70%\", left: \"85%\" }} alt='login' src='https://cdn-icons-png.flaticon.com/512/295/295128.png'></img></NavLink>\r\n      <img onClick={checkLetter} style={{ width: \"10%\", position: \"absolute\", top: \"40%\", left: \"85%\" }} alt='cookie' src='https://cdn-icons-png.flaticon.com/512/4426/4426138.png'></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Login.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Redirect.js",["88"],[],"import React, { useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport './Redirect.css';\r\n\r\nfunction Redirect() {\r\n    const navigater = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const urlParams = new URL(window.location.href).searchParams;\r\n    const name = urlParams.get('code');\r\n    const urlParamsErro = new URL(window.location.href).searchParams;\r\n    const nameErro = urlParamsErro.get('error_description');\r\n\r\n    // function requestToken() {\r\n    //     const body = {\r\n    //         grant_type: \"authorization_code\",\r\n    //         client_id: process.env.REACT_APP_REST_API_KEY,\r\n    //         redirect_uri: \"\",\r\n    //         code: name\r\n    //     };\r\n    //     const queryStringBody = Object.keys(body)\r\n    //         .map(k => encodeURIComponent(k) + \"=\" + encodeURI(body[k]))\r\n    //         .join(\"&\");\r\n    //     fetch(\"https://kauth.kakao.com/oauth/token\", {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n    //         },\r\n    //         body: queryStringBody\r\n    //     })\r\n    //         .then(res => res.json())\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //             console.log(data.access_token);\r\n    //             usertoken = data.access_token;\r\n    //         });\r\n    // };\r\n\r\n    function RequestLetterArray(userId) {\r\n        fetch('https://plater.kr/api/letter/userid/' + userId, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                dispatch({ type: 'CHANGE_LETTERDATA', data: data });\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n                alert('정상적으로 사용자 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            });\r\n    };\r\n\r\n    function RequestUserData(userId) {\r\n        fetch('https://plater.kr/api/member/' + userId, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then((userData) => {\r\n                console.log(userData);\r\n                dispatch({ type: 'CHANGE_USERNICKNAME', data: String(userData.userNickName) });\r\n                dispatch({ type: 'CHANGE_OPENDATE', data: Number(userData.userOpenDate) });\r\n                RequestLetterArray(userId);\r\n            })\r\n            .catch((userDate_error) => {\r\n                console.log(userDate_error);\r\n                alert('정상적으로 사용자 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (nameErro === 'User denied access') {\r\n                alert('로그인에 실패하였습니다.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            };\r\n            const code = { code: name };\r\n            console.log(code);\r\n            const queryStringBody = Object.keys(code)\r\n                .map(k => encodeURIComponent(k) + \"=\" + encodeURI(code[k]))\r\n                .join(\"&\");\r\n            fetch('https://plater.kr/api/kakao/', {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n                },\r\n                body: queryStringBody\r\n            })\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    console.log('암호화된 ID: ' + data);\r\n                    fetch('https://plater.kr/api/member/', {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        cache: 'no-cache',\r\n                        credentials: 'same-origin',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify(data)\r\n                    })\r\n                        .then(plus_res => plus_res.json())\r\n                        .then((plus_data) => {\r\n                            console.log('비암호화된 ID: ' + plus_data);\r\n                            dispatch({ type: 'CHANGE_USERID', data: plus_data });\r\n                            RequestUserData(plus_data);\r\n                            navigater('/main');\r\n                        })\r\n                        .catch((plus_error) => {\r\n                            console.log('비암호화된 ID 오류: ' + plus_error);\r\n                            alert('서버가 불안정 하여 비암호화된 사용자 ID를 받아오지 못했습니다.');\r\n                            dispatch({ type: 'CHANGE_USERID', data: null });\r\n                            navigater('/login');\r\n                        })\r\n                })\r\n                .catch((error) => {\r\n                    console.log('암호화된 ID 오류: ' + error);\r\n                    alert('서버가 불안정 하여 로그인에 실패했습니다.');\r\n                    dispatch({ type: 'CHANGE_USERID', data: null });\r\n                    navigater('/login');\r\n                });\r\n        }, 500);\r\n    }, []);\r\n    // }, [name, nameErro, navigater, dispatch]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='redirect_outContainer'>\r\n                <section className='section_shootingStar'>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                </section>\r\n                <div className='redirect_gif'></div>\r\n                <h3 className='redirect_h3'>로그인 중입니다...</h3>\r\n                <h4 className='redirect_h4'>[리빙포인트] 달에는 토끼가 떡을 만들고 있다.</h4>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Redirect;","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Redirect2.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Send.js",["89","90"],[],"import React, { useState, useRef, useCallback, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Adsense } from '@ctrl/react-adsense';\r\n// import { useNavigate } from \"react-router-dom\";\r\nimport Slider from \"react-slick\";\r\nimport './Send.css'\r\n\r\nfunction Send() {\r\n    // const navigater = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const textareaFocus = useRef('');\r\n    const isSendMain = useSelector((state) => state.isSendMain);\r\n    const [shareUserID, setShareUserID] = useState(null);\r\n    const text = useSelector((state) => state.text);\r\n    const textLength = useSelector((state) => state.textLength);\r\n    const stickerArray = useSelector((state) => state.stickerArray);\r\n    const stickerNumber = useSelector((state) => state.stickerNumber);\r\n    // \r\n    const isSendPopUp = useSelector((state) => state.isSendPopUp);\r\n    const isSendPopUpCancel = useSelector((state) => state.isSendPopUpCancel);\r\n    const isSendPopUpCheck = useSelector((state) => state.isSendPopUpCheck);\r\n    const isPreLetterBox = useSelector((state) => state.isPreLetterBox);\r\n    const author = useSelector((state) => state.author);\r\n    const stamp = useSelector((state) => state.stamp);\r\n    const isStamp = useSelector((state) => state.isStamp);\r\n    //\r\n    const isSendingPage = useSelector((state) => state.isSendingPage);\r\n    const isSendingEnd = useSelector((state) => state.isSendingEnd);\r\n    // \r\n    const isLetterOption = useSelector((state) => state.isLetterOption);\r\n    const isFontFamily = useSelector((state) => state.isFontFamily);\r\n    const isRange = useSelector((state) => state.isRange);\r\n    const isColor = useSelector((state) => state.isColor);\r\n    const isLetterPaper = useSelector((state) => state.isLetterPaper);\r\n    const isSticker = useSelector((state) => state.isSticker);\r\n    //\r\n    const [userNickName, setUserNickName] = useState(null);\r\n    const [openUserOpenDate, setOpenUserOpenDate] = useState(null);\r\n    const [userLetterCount, setUserLetterCount] = useState(null);\r\n    // \r\n    const [styleLetter, setStyleLetter] = useState({ \"fontSize\": \"0.875rem\", \"fontFamily\": \"SpoqaHanSansNeo-Regular\", \"color\": \"black\", \"textAlign\": \"left\", \"backgroundImage\": \"url('https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_white.gif?raw=true')\" });\r\n    // \r\n    const [letterMenu, setLetterMenu] = useState({\r\n        font: false,\r\n        range: false,\r\n        color: false,\r\n        paper: false,\r\n        sticker: false\r\n    });\r\n    const [fontItem, setFontItem] = useState({\r\n        a: true,\r\n        b: false,\r\n        c: false,\r\n        d: false,\r\n        e: false,\r\n        f: false\r\n    });\r\n    const [rangeItem, setRangeItem] = useState({\r\n        left: true,\r\n        center: false,\r\n        right: false\r\n    });\r\n    const [colorItem, setColorItem] = useState({\r\n        a: true,\r\n        b: false,\r\n        c: false,\r\n        d: false,\r\n        e: false,\r\n        f: false,\r\n        g: false,\r\n        h: false,\r\n        i: false,\r\n        j: false\r\n    });\r\n    const [paperItem, setPaperItem] = useState({\r\n        a: false,\r\n        b: false,\r\n        c: false,\r\n        d: true,\r\n        e: false,\r\n        f: false,\r\n        g: false,\r\n        h: false,\r\n        i: false,\r\n        j: false,\r\n        k: false,\r\n        l: false,\r\n        m: false,\r\n        n: false,\r\n        o: false,\r\n        p: false,\r\n        q: false,\r\n        r: false,\r\n        s: false,\r\n        t: false,\r\n        u: false,\r\n        v: false,\r\n        w: false,\r\n        x: false,\r\n        y: false,\r\n        z: false,\r\n        a1: false,\r\n        b1: false,\r\n        c1: false,\r\n        d1: false,\r\n        e1: false,\r\n        f1: false,\r\n        g1: false\r\n    });\r\n    //\r\n    const [completion, setCompletion] = useState(false);\r\n    // \r\n    const bad_word = ['<', '>', '씨발', '시발', '♡년', '병신', '개새끼', '강간', '따먹', '로리', '쇼타', '씹', '앰창', '엠창', '좆', '창남', '창녀', '창놈', '창년', '걸레', '갈보', '멍청도', '보전깨', '빨통', '쌍놈', '쌍년', '썅년', '썅놈', '자살', '자해', '육변기', '느갭', '미친년', '미친놈', '염병', '♡빻', '재기', '젖', '성괴', '호로년', '호로잡년', '조건만남', '장애년', '좆창년', '♡련', '쪽바리', '니애미', '느금마', '니애비', '피싸개', '도태남', '부랄발작', '헤으응', '한남충', '한녀', '성매매', '장애인년', '니미', '사지절단', '엿', '맘충', '짱깨', '예수쟁이', '개독교', '똥꼬충', '소추', '두창', '죽어라', '떡치', '지년', '박고', '박아', '받이'];\r\n    //\r\n    function SendPopUp() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={isSendPopUp ? \"isSendPopUp\" : \"isSendPopUp_fade\"}>\r\n                    <div className='isSendPopUp_outContainer'>\r\n                        <p className='isSendPopUp_title'>〈 {userNickName}님의 행성 〉</p>\r\n                        <p className='isSendPopUp_p'>어서오세요! 이곳은</p>\r\n                        <p className='isSendPopUp_p'>{userNickName}님의 행성입니다.</p>\r\n                        <div className='isSendPopUp_innerBox'>\r\n                            <div className='isSendPopUp_button_signOut' onClick={() => {\r\n                                window.location.replace('/main');\r\n                            }}>행성 개설하기</div>\r\n                            <div className='isSendPopUp_button_cancel' onClick={() => {\r\n                                dispatch({ type: 'CHANGE_ISSENDPOPUP', data: !isSendPopUp });\r\n                                textareaFocus.current.focus();\r\n                            }}>편지 작성하기</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    function SendPopUpCancel() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={isSendPopUpCancel ? \"isSendPopUpCancel\" : \"isSendPopUpCancel_fade\"}>\r\n                    <div className='isSendPopUpCancel_outContainer'>\r\n                        <p className='isSendPopUpCancel_title'>작성을 취소하겠습니까?</p>\r\n                        <p className='isSendPopUpCancel_p'>작성을 취소하면 작성 중이던</p>\r\n                        <p className='isSendPopUpCancel_p'>내용은 모두 삭제됩니다.</p>\r\n                        <div className='isSendPopUpCancel_innerBox'>\r\n                            <div className='isSendPopUpCancel_button_signOut' onClick={() => {\r\n                                window.location.replace('/main');\r\n                            }}>작성 취소</div>\r\n                            <div className='isSendPopUpCancel_button_cancel' onClick={() => {\r\n                                dispatch({ type: 'CHANGE_ISSENDPOPUPCANCEL', data: !isSendPopUpCancel });\r\n                            }}>편지 작성하기</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    function SendPopUpCheck() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={isSendPopUpCheck ? \"isSendPopUpCheck\" : \"isSendPopUpCheck_fade\"}>\r\n                    <div className='isSendPopUpCheck_outContainer'>\r\n                        <p className='isSendPopUpCheck_title'>편지가 비어 있습니다.</p>\r\n                        <p className='isSendPopUpCheck_p'>당신의 소중한 이야기를 들려주세요.</p>\r\n                        <div className='isSendPopUpCheck_button_cancel' onClick={() => {\r\n                            dispatch({ type: 'CHANGE_ISSENDPOPUPCHECK', data: !isSendPopUpCheck });\r\n                        }}>계속 작성하기</div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    function PreLetter() {\r\n        const [preAuthor, setPreAuthor] = useState(author);\r\n        const [preIsStamp, setPreIsStamp] = useState(isStamp);\r\n        const [stampNum, setStampNum] = useState(stamp);\r\n        const settings = {\r\n            draggable: true,\r\n            swipe: true,\r\n            arrows: false,\r\n            dots: false,\r\n            infinite: false,\r\n            speed: 1250,\r\n            slidesToShow: 5,\r\n            slidesToScroll: 3\r\n        };\r\n\r\n        function changeAuthor(props) {\r\n            dispatch({ type: 'CHANGE_AUTHOR', data: props });\r\n        };\r\n\r\n        function changeStamp() {\r\n            dispatch({ type: 'CHANGE_ISSTAMP', data: preIsStamp });\r\n            dispatch({ type: 'CHANGE_STAMP', data: stampNum });\r\n        };\r\n\r\n        // pre letter stamp select\r\n        function selectStamp(props) {\r\n            let newStampItem = { ...preIsStamp };\r\n            switch (props) {\r\n                case 'stamp_1':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['a'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_2':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['b'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_3':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['c'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_4':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['d'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_5':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['e'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_6':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['f'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_7':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['g'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_8':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['h'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_9':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['i'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_10':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['j'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_11':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['k'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                case 'stamp_12':\r\n                    Object.keys(newStampItem).forEach(key => {\r\n                        newStampItem[key] = false;\r\n                    });\r\n                    newStampItem['l'] = true;\r\n                    setPreIsStamp(newStampItem);\r\n                    break;\r\n                default:\r\n                    break;\r\n            };\r\n        };\r\n\r\n        function filter() {\r\n            let compare_data = text;\r\n            for (let i = 0; i < bad_word.length; i++) {\r\n                for (let j = 0; j < compare_data.length; j++) {\r\n                    if (bad_word[i] === compare_data.substring(j, j + bad_word[i].length)) {\r\n                        compare_data = compare_data.replace(compare_data.substring(j, j + bad_word[i].length), '♡')\r\n                    };\r\n                };\r\n            };\r\n            dispatch({ type: 'CHANGE_TEXT', data: compare_data });\r\n        };\r\n\r\n        useEffect(() => {\r\n            makeLetter();\r\n        }, []);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className={isPreLetterBox ? 'pre_letter_outBox_active' : 'pre_letter_outBox'}>\r\n                    <div className='pre_letter_wrap'>\r\n                        <section className='section_shootingStar'>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                        </section>\r\n                        <div className='send_top_menu' style={{ 'marginBottom': '0.5rem' }}>\r\n                            <img alt='backIMG' src='https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/icon/back.png?raw=true' onClick={() => {\r\n                                changeAuthor(preAuthor);\r\n                                changeStamp();\r\n                                dispatch({ type: 'CHANGE_ISPRELETTERBOX', data: !isPreLetterBox });\r\n                                dispatch({ type: 'CHANGE_ISSENDMAIN', data: !isSendMain });\r\n                            }}></img>\r\n                            <h3>수정하기</h3>\r\n                            <span onClick={() => {\r\n                                changeAuthor(preAuthor);\r\n                                changeStamp();\r\n                                filter();\r\n                                dispatch({ type: 'CHANGE_ISPRELETTERBOX', data: !isPreLetterBox });\r\n                                dispatch({ type: 'CHANGE_ISSENDINGPAGE', data: !isSendingPage });\r\n                            }}>보내기</span>\r\n                        </div>\r\n                        <div className='pre_letter_outContainer'>\r\n                            <textarea style={styleLetter} className='send_pre_textbox' readOnly></textarea>\r\n                        </div>\r\n                        <div className='pre_letter_author_outContainer'>\r\n                            <p className='pre_letter_autho_title'>발신자 명</p>\r\n                            <div className='pre_letter_author_input_div'>\r\n                                <span className='pre_letter_author_input_title'>from.</span>\r\n                                <input className='pre_letter_author_input' type='text' maxLength={10} placeholder={author} onChange={(e) => {\r\n                                    setPreAuthor(e.target.value);\r\n                                }}></input><span className='pre_letter_author_input_length'>{preAuthor.length}/10</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='pre_letter_author_outContainer'>\r\n                            <p className='pre_letter_autho_title'>우표</p>\r\n                            <div className='pre_letter_stamp_outContainer'>\r\n                                <Slider {...settings}>\r\n                                    <div>\r\n                                        <div id='pre_letter_stamp_img_1' className={preIsStamp.a ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                            selectStamp('stamp_1');\r\n                                            setStampNum(0);\r\n                                        }}></div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div id='pre_letter_stamp_img_2' className={preIsStamp.b ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                            selectStamp('stamp_2');\r\n                                            setStampNum(1);\r\n                                        }}></div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div id='pre_letter_stamp_img_3' className={preIsStamp.c ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                            selectStamp('stamp_3');\r\n                                            setStampNum(2);\r\n                                        }}></div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div id='pre_letter_stamp_img_4' className={preIsStamp.d ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                            selectStamp('stamp_4');\r\n                                            setStampNum(3);\r\n                                        }}></div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div id='pre_letter_stamp_img_5' className={preIsStamp.e ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                            selectStamp('stamp_5');\r\n                                            setStampNum(4);\r\n                                        }}></div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div id='pre_letter_stamp_img_6' className={preIsStamp.f ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                            selectStamp('stamp_6');\r\n                                            setStampNum(5);\r\n                                        }}></div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div id='pre_letter_stamp_img_7' className={preIsStamp.g ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                            selectStamp('stamp_7');\r\n                                            setStampNum(6);\r\n                                        }}></div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div id='pre_letter_stamp_img_8' className={preIsStamp.h ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                            selectStamp('stamp_8');\r\n                                            setStampNum(7);\r\n                                        }}></div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div id='pre_letter_stamp_img_9' className={preIsStamp.i ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                            selectStamp('stamp_9');\r\n                                            setStampNum(8);\r\n                                        }}></div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div id='pre_letter_stamp_img_10' className={preIsStamp.j ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                            selectStamp('stamp_10');\r\n                                            setStampNum(9);\r\n                                        }}></div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div id='pre_letter_stamp_img_11' className={preIsStamp.k ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                            selectStamp('stamp_11');\r\n                                            setStampNum(10);\r\n                                        }}></div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div id='pre_letter_stamp_img_12' className={preIsStamp.l ? 'pre_letter_stamp_innerContainer_active' : 'pre_letter_stamp_innerContainer'} onClick={() => {\r\n                                            selectStamp('stamp_12');\r\n                                            setStampNum(11);\r\n                                        }}></div>\r\n                                    </div>\r\n                                </Slider>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    function SendingPage() {\r\n\r\n        async function FinalCheck(letterData) {\r\n            await fetch('https://plater.kr/api/member/external/userid/' + shareUserID, {\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let now = new Date().getTime();\r\n                let distance = Number(data.userOpenDate) - now;\r\n                if (distance >= 0) {\r\n                    fetch('https://plater.kr/api/member/external/lettercount/' + shareUserID, {\r\n                        method: 'GET',\r\n                        mode: 'cors',\r\n                        cache: 'no-cache',\r\n                        credentials: 'same-origin',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        }\r\n                    })\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        if (Number(data) >= 36) {\r\n                            alert('방금 전에 행성이 편지로 가득찼습니다. Pl@ter 페이지로 이동합니다.');\r\n                            // window.location.replace('/main');\r\n                        };\r\n                    })                \r\n                } else {\r\n                    alert('방금 전에 행성이 만료되었습니다. Pl@ter 페이지로 이동합니다.');\r\n                    // window.location.replace('/main');\r\n                };\r\n            });\r\n            await sendLetterFunc(letterData);\r\n        };\r\n\r\n        async function sendLetterFunc(props) {\r\n            fetch('https://plater.kr/api/letter', {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(props)\r\n            })\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    alert('서버가 불안정 하여 편지가 정상적으로 발송되지 않았습니다. 다시 시도해주세요.');\r\n                    dispatch({ type: 'CHANGE_ISSENDINGPAGE', data: !isSendingPage });\r\n                    dispatch({ type: 'CHANGE_ISPRELETTERBOX', data: !isPreLetterBox });\r\n                    dispatch({ type: 'CHANGE_ISSENDMAIN', data: !isSendMain });\r\n                });\r\n        };\r\n\r\n        function checkLetterData() {\r\n            let sticker = [...stickerArray];\r\n            for (let i = 0; i < sticker.length; i++) {\r\n                delete sticker[i].id\r\n            };\r\n            // let postSticker = [...stickerArray];\r\n            // for (let i = 0; i < postSticker.length; i++) {\r\n            //     delete postSticker[i].id\r\n            // };\r\n            // let sticker = [Object.assign({},postSticker)];\r\n            let letterData = {\r\n                'letter': {\r\n                    'userId': String(shareUserID),\r\n                    'letterContent': String(text),\r\n                    'letterFont': String(styleLetter['fontFamily']),\r\n                    'letterTextAlign': String(styleLetter['textAlign']),\r\n                    'letterFontSize': String(styleLetter['fontSize']),\r\n                    'letterFontColor': String(styleLetter['color']),\r\n                    'letterPaper': String(styleLetter['backgroundImage']),\r\n                    'letterWriter': String(author),\r\n                    'letterIcon': String(stamp)                 \r\n                },\r\n                sticker\r\n            };\r\n            FinalCheck(letterData);\r\n            dispatch({ type: 'CHANGE_ISSENDINGEND', data: !isSendingEnd });\r\n            dispatch({ type: 'CHANGE_ISSENDINGPAGE', data: !isSendingPage });\r\n        };\r\n\r\n        useEffect(() => {\r\n            setTimeout(() => {\r\n                checkLetterData();\r\n            }, 3000);\r\n        }, []);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className={isSendingPage ? 'sending_page_outBox_active' : 'sending_page_outBox'}>\r\n                    <div className='sending_page_wrap'>\r\n                        <section className='section_shootingStar'>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                        </section>\r\n                        <div className='sending_page_gif'></div>\r\n                        <h3 className='sending_page_h3'>Loading..</h3>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    function SendingEnd() {\r\n        // useEffect(() => {\r\n        //     let ins = document.createElement('ins');\r\n        //     let scr = document.createElement('script');\r\n        //     ins.className = 'kakao_ad_area';\r\n        //     ins.style = \"display:none; width:100%;\";\r\n        //     scr.async = 'true';\r\n        //     scr.type = \"text/javascript\";\r\n        //     scr.src = \"//t1.daumcdn.net/kas/static/ba.min.js\";\r\n        //     ins.setAttribute('data-ad-width', '320');\r\n        //     ins.setAttribute('data-ad-height', '100');\r\n        //     ins.setAttribute('data-ad-unit', 'DAN-BB4EbobLalrwPI7o');\r\n        //     document.querySelector('.adfit').appendChild(ins);\r\n        //     document.querySelector('.adfit').appendChild(scr);\r\n        // }, [])\r\n        return (\r\n            <React.Fragment>\r\n                <div className={isSendingEnd ? 'sending_end_active' : 'sending_end'}>\r\n                    <div className='sending_end_wrap'>\r\n                        <section className='section_shootingStar'>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                            <span className='shootingStar'></span>\r\n                        </section>\r\n                        <div className='sending_end_img'></div>\r\n                        <p className='sending_end_p'>발송을 완료했어요!</p>\r\n                        <div className='sending_end_div' onClick={() => {\r\n                            window.location.replace('/main');\r\n                        }}>나도 행성 개설하기</div>\r\n                        {/* <div className=\"adfit\"></div> */}\r\n                        <div className='googleAdsense'>\r\n                            <Adsense\r\n                                client={process.env.REACT_APP_GOOGLE_ADSENSE}\r\n                                slot={process.env.REACT_APP_GOOGLE_ADSENSE_SLOT}\r\n                                style={{ display: 'block' }}\r\n                                layout=\"in-article\"\r\n                                format=\"fluid\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    // Make Letter Func\r\n    function makeLetter() {\r\n        let copyStickerArray = stickerArray;\r\n        for (let i = 0; i < copyStickerArray.length; i++) {\r\n            let item = document.createElement('div');\r\n            let stage = document.querySelector('.pre_letter_outContainer');\r\n            item.setAttribute('id', '_' + copyStickerArray[i].id);\r\n            item.setAttribute('class', 'send_item_sticker' + copyStickerArray[i].stickerIcon);\r\n            stage.appendChild(item);\r\n            setTranslate(Math.round(Number(copyStickerArray[i].stickerX)), Math.round((Number(copyStickerArray[i].stickerY))), item);\r\n        };\r\n\r\n        function setTranslate(xPos, yPos, el) {\r\n            el.style.transform = \"translate3d(\" + xPos + \"px, \" + yPos + \"px, 0)\";\r\n        };\r\n        // Enter text\r\n        let copyText = text;\r\n        let enterText = document.querySelector('.send_pre_textbox');\r\n        enterText.value = copyText;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (text === \"\") {\r\n            setCompletion(false);\r\n        } else {\r\n            setCompletion(true);\r\n        };\r\n    }, [text]);\r\n\r\n    // Require INFO\r\n    function requireUserCheckData(props) {\r\n        fetch('https://plater.kr/api/member/external/userid/' + props, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then((userData) => {\r\n                setUserNickName(String(userData.userNickName));\r\n                setOpenUserOpenDate(Number(userData.userOpenDate));\r\n                fetch('https://plater.kr/api/member/external/lettercount/' + props, {\r\n                    method: 'GET',\r\n                    mode: 'cors',\r\n                    cache: 'no-cache',\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                })\r\n                    .then(res => res.json())\r\n                    .then((letterCount) => {\r\n                        setUserLetterCount(Number(letterCount));\r\n                    })\r\n                    .catch((letterCount_error) => {\r\n                        console.log(letterCount_error);\r\n                        alert('서버로부터 행성 개설자의 편지함 정보를 받아오지 못했습니다. 다시 시도해주세요.');\r\n                        window.location.replace('/main');\r\n                    });\r\n            })\r\n            .catch((userDate_error) => {\r\n                console.log(userDate_error);\r\n                alert('서버로부터 행성 개설자 정보를 받아오지 못했습니다. 다시 시도해주세요.');\r\n                window.location.replace('/main');\r\n            });\r\n    };\r\n\r\n    function firstCheck() {\r\n        if (openUserOpenDate !== null && userLetterCount !== null) {\r\n            let now = new Date().getTime();\r\n            let distance = openUserOpenDate - now;\r\n            if (distance >= 0) {\r\n                if (userLetterCount >= 36) {\r\n                    alert('행성이 편지로 가득찼습니다. Pl@ter 페이지로 이동합니다.');\r\n                    // window.location.replace('/main');\r\n                };\r\n            } else {\r\n                alert('행성이 만료되었습니다. Pl@ter 페이지로 이동합니다.');\r\n                // window.location.replace('/main');\r\n            };\r\n        };\r\n    };\r\n\r\n    // ?userID=userID\r\n    const get_query = useCallback(() => {\r\n        const url = document.location.href;\r\n        const qs = url.substring(url.indexOf('?') + 1).split('&');\r\n        const result = {};\r\n        for (let i = 0; i < qs.length; i++) {\r\n            qs[i] = qs[i].split('='); result[qs[i][0]] = decodeURIComponent(qs[i][1]);\r\n        };\r\n        setShareUserID(qs[0][1]);\r\n        if (qs[0][1] !== undefined) {\r\n            requireUserCheckData(qs[0][1]);\r\n        } else {\r\n            alert('정상적인 접근 방법이 아닙니다. Pl@ter 페이지로 이동합니다.');\r\n            window.location.replace('/main');\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        firstCheck();\r\n    }, [openUserOpenDate, userLetterCount])\r\n\r\n    useEffect(() => {\r\n        get_query();\r\n        // Log API\r\n        fetch('https://plater.kr/api/request/log?/web/send', {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(() => {\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        // \r\n    }, [get_query]);\r\n\r\n    function locationData(data, id, X, Y, num) {\r\n        if (id === '') {\r\n        } else {\r\n            if (data.length === 0) {\r\n                data.push({ 'id': id, 'stickerX': Math.round(X), 'stickerY': Math.round(Y), 'stickerIcon': num });\r\n                dispatch({ type: 'CHANGE_STICKER', data: data });\r\n            } else {\r\n                if (data.some((e) => e.id === id)) {\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        if (data[i].id === id) {\r\n                            data[i] = { 'id': id, 'stickerX': Math.round(X), 'stickerY': Math.round(Y), 'stickerIcon': num };\r\n                            dispatch({ type: 'CHANGE_STICKER', data: data });\r\n                        };\r\n                    };\r\n                } else {\r\n                    data.push({ 'id': id, 'stickerX': Math.round(X), 'stickerY': Math.round(Y), 'stickerIcon': num });\r\n                    dispatch({ type: 'CHANGE_STICKER', data: data });\r\n                };\r\n            };\r\n        };\r\n        console.log(data);\r\n    };\r\n\r\n    function remove(props) {\r\n        let newData = stickerArray;\r\n        let item = document.querySelector('#id' + props);\r\n        for (let i = 0; i < newData.length; i++) {\r\n            if (newData[i].id === 'id' + props) {\r\n                newData.splice(i, 1);\r\n                dispatch({ type: 'CHANGE_STICKER', data: newData });\r\n            };\r\n        };\r\n        item.remove();\r\n        console.log(stickerArray);\r\n    };\r\n\r\n    function createEl(props, num) {\r\n        // Creating elements\r\n        let item = document.createElement('div');\r\n        let itemClose = document.createElement('div');\r\n        let stage = document.querySelector('#send_textarea');\r\n        item.setAttribute('id', 'id' + props);\r\n        item.setAttribute('class', 'send_item_sticker' + num);\r\n        itemClose.setAttribute('class', 'send_close');\r\n        itemClose.addEventListener('click', () => { remove(props) });\r\n        stage.appendChild(item);\r\n        let stageClose = document.querySelector('#id' + props);\r\n        stageClose.appendChild(itemClose);\r\n        dispatch({ type: 'CHANGE_STICKER_NUMBER', data: stickerNumber + 1 });\r\n\r\n        // Function to move elements\r\n        let dragItem = document.querySelector(\"#id\" + props);\r\n        let active = false;\r\n        let currentX;\r\n        let currentY;\r\n        let initialX;\r\n        let initialY;\r\n        let xOffset = 0;\r\n        let yOffset = 0;\r\n        dragItem.addEventListener(\"touchstart\", dragStart, false);\r\n        dragItem.addEventListener(\"touchend\", dragEnd, false);\r\n        dragItem.addEventListener(\"touchmove\", drag, false);\r\n        dragItem.addEventListener(\"mousedown\", dragStart, false);\r\n        dragItem.addEventListener(\"mouseup\", dragEnd, false);\r\n        dragItem.addEventListener(\"mousemove\", drag, false);\r\n\r\n        function dragStart(e) {\r\n            if (e.type === \"touchstart\") {\r\n                initialX = e.touches[0].clientX - xOffset;\r\n                initialY = e.touches[0].clientY - yOffset;\r\n            } else {\r\n                initialX = e.clientX - xOffset;\r\n                initialY = e.clientY - yOffset;\r\n            };\r\n            if (e.target === dragItem) {\r\n                active = true;\r\n            };\r\n        };\r\n\r\n        function drag(e) {\r\n            if (active) {\r\n                e.preventDefault();\r\n                if (e.type === \"touchmove\") {\r\n                    currentX = e.touches[0].clientX - initialX;\r\n                    currentY = e.touches[0].clientY - initialY;\r\n                } else {\r\n                    currentX = e.clientX - initialX;\r\n                    currentY = e.clientY - initialY;\r\n                };\r\n                xOffset = currentX;\r\n                yOffset = currentY;\r\n                if (currentX >= 140 || currentY >= 165 || currentX <= -140 || currentY <= -165) {\r\n                    setTranslate(Math.round(currentX), Math.round(currentY), dragItem);\r\n                    dragEnd(e);\r\n                    alert('편지지 안쪽에 스티커를 붙여주세요.');\r\n                } else {\r\n                    setTranslate(Math.round(currentX), Math.round(currentY), dragItem);\r\n                };\r\n            };\r\n        };\r\n\r\n        function setTranslate(xPos, yPos, el) {\r\n            el.style.transform = \"translate3d(\" + xPos + \"px, \" + yPos + \"px, 0)\";\r\n            el.style.position = \"relative\";\r\n        };\r\n\r\n        function dragEnd(e) {\r\n            locationData(stickerArray, e.target.id, currentX, currentY, num);\r\n            console.log(Math.round(currentX), Math.round(currentY));\r\n            active = false;\r\n            dragItem.style.position = \"absolute\";\r\n        };\r\n    };\r\n\r\n    // Letter Option Active\r\n    function activeLetterOption() {\r\n        if (isLetterOption === false) {\r\n            dispatch({ type: 'CHANGE_ISLETTEROPTION', data: true });\r\n            dispatch({ type: 'CHANGE_ISFONTFAMILY', data: true });\r\n        };\r\n    };\r\n\r\n    // Letter Option Inactive\r\n    function inactiveLetterOption() {\r\n        if (isLetterOption === true) {\r\n            dispatch({ type: 'CHANGE_ISLETTEROPTION', data: false });\r\n            dispatch({ type: 'CHANGE_ISFONTFAMILY', data: false });\r\n            dispatch({ type: 'CHANGE_ISRANGE', data: false });\r\n            dispatch({ type: 'CHANGE_ISCOLOR', data: false });\r\n            dispatch({ type: 'CHANGE_ISLETTERPAPER', data: false });\r\n            dispatch({ type: 'CHANGE_ISSTICKER', data: false });\r\n        };\r\n    };\r\n\r\n    // Change Letter Option Menu\r\n    function changeLetterOption(props) {\r\n        switch (props) {\r\n            case 'CHANGE_ISFONTFAMILY':\r\n                dispatch({ type: 'CHANGE_ISFONTFAMILY', data: true });\r\n                dispatch({ type: 'CHANGE_ISRANGE', data: false });\r\n                dispatch({ type: 'CHANGE_ISCOLOR', data: false });\r\n                dispatch({ type: 'CHANGE_ISLETTERPAPER', data: false });\r\n                dispatch({ type: 'CHANGE_ISSTICKER', data: false });\r\n                break;\r\n            case 'CHANGE_ISRANGE':\r\n                dispatch({ type: 'CHANGE_ISFONTFAMILY', data: false });\r\n                dispatch({ type: 'CHANGE_ISRANGE', data: true });\r\n                dispatch({ type: 'CHANGE_ISCOLOR', data: false });\r\n                dispatch({ type: 'CHANGE_ISLETTERPAPER', data: false });\r\n                dispatch({ type: 'CHANGE_ISSTICKER', data: false });\r\n                break;\r\n            case 'CHANGE_ISCOLOR':\r\n                dispatch({ type: 'CHANGE_ISFONTFAMILY', data: false });\r\n                dispatch({ type: 'CHANGE_ISRANGE', data: false });\r\n                dispatch({ type: 'CHANGE_ISCOLOR', data: true });\r\n                dispatch({ type: 'CHANGE_ISLETTERPAPER', data: false });\r\n                dispatch({ type: 'CHANGE_ISSTICKER', data: false });\r\n\r\n                break;\r\n            case 'CHANGE_ISLETTERPAPER':\r\n                dispatch({ type: 'CHANGE_ISFONTFAMILY', data: false });\r\n                dispatch({ type: 'CHANGE_ISRANGE', data: false });\r\n                dispatch({ type: 'CHANGE_ISCOLOR', data: false });\r\n                dispatch({ type: 'CHANGE_ISLETTERPAPER', data: true });\r\n                dispatch({ type: 'CHANGE_ISSTICKER', data: false });\r\n                break;\r\n            case 'CHANGE_ISSTICKER':\r\n                dispatch({ type: 'CHANGE_ISFONTFAMILY', data: false });\r\n                dispatch({ type: 'CHANGE_ISRANGE', data: false });\r\n                dispatch({ type: 'CHANGE_ISCOLOR', data: false });\r\n                dispatch({ type: 'CHANGE_ISLETTERPAPER', data: false });\r\n                dispatch({ type: 'CHANGE_ISSTICKER', data: true });\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n    };\r\n\r\n    // Change FontFamily\r\n    function setFontFamily(props, size) {\r\n        let newStyle = { ...styleLetter };\r\n        newStyle['fontFamily'] = props;\r\n        newStyle['fontSize'] = size;\r\n        setStyleLetter(newStyle);\r\n    };\r\n\r\n    // Change Range\r\n    function setRange(props) {\r\n        let newStyle = { ...styleLetter };\r\n        newStyle['textAlign'] = props;\r\n        setStyleLetter(newStyle);\r\n    };\r\n\r\n    // Change Color\r\n    function setColor(props) {\r\n        let newStyle = { ...styleLetter };\r\n        newStyle['color'] = props;\r\n        setStyleLetter(newStyle);\r\n    };\r\n\r\n    // Change Paper\r\n    function setPaper(props) {\r\n        let newStyle = { ...styleLetter };\r\n        newStyle['backgroundImage'] = props;\r\n        setStyleLetter(newStyle);\r\n    };\r\n\r\n    // Letter Menu Select\r\n    function selectLetterMenu(props) {\r\n        let newLetterMenu = { ...letterMenu };\r\n        switch (props) {\r\n            case 'font':\r\n                Object.keys(newLetterMenu).forEach(key => {\r\n                    newLetterMenu[key] = false;\r\n                });\r\n                newLetterMenu['font'] = true;\r\n                setLetterMenu(newLetterMenu);\r\n                break;\r\n            case 'range':\r\n                Object.keys(newLetterMenu).forEach(key => {\r\n                    newLetterMenu[key] = false;\r\n                });\r\n                newLetterMenu['range'] = true;\r\n                setLetterMenu(newLetterMenu);\r\n                break;\r\n            case 'color':\r\n                Object.keys(newLetterMenu).forEach(key => {\r\n                    newLetterMenu[key] = false;\r\n                });\r\n                newLetterMenu['color'] = true;\r\n                setLetterMenu(newLetterMenu);\r\n                break;\r\n            case 'paper':\r\n                Object.keys(newLetterMenu).forEach(key => {\r\n                    newLetterMenu[key] = false;\r\n                });\r\n                newLetterMenu['paper'] = true;\r\n                setLetterMenu(newLetterMenu);\r\n                break;\r\n            case 'sticker':\r\n                Object.keys(newLetterMenu).forEach(key => {\r\n                    newLetterMenu[key] = false;\r\n                });\r\n                newLetterMenu['sticker'] = true;\r\n                setLetterMenu(newLetterMenu);\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n    };\r\n\r\n    // Font Item Select\r\n    function selectFontItem(props) {\r\n        let newFontItem = { ...fontItem };\r\n        switch (props) {\r\n            case 'fontItem_1':\r\n                Object.keys(newFontItem).forEach(key => {\r\n                    newFontItem[key] = false;\r\n                });\r\n                newFontItem['a'] = true;\r\n                setFontItem(newFontItem);\r\n                break;\r\n            case 'fontItem_2':\r\n                Object.keys(newFontItem).forEach(key => {\r\n                    newFontItem[key] = false;\r\n                });\r\n                newFontItem['b'] = true;\r\n                setFontItem(newFontItem);\r\n                break;\r\n            case 'fontItem_3':\r\n                Object.keys(newFontItem).forEach(key => {\r\n                    newFontItem[key] = false;\r\n                });\r\n                newFontItem['c'] = true;\r\n                setFontItem(newFontItem);\r\n                break;\r\n            case 'fontItem_4':\r\n                Object.keys(newFontItem).forEach(key => {\r\n                    newFontItem[key] = false;\r\n                });\r\n                newFontItem['d'] = true;\r\n                setFontItem(newFontItem);\r\n                break;\r\n            case 'fontItem_5':\r\n                Object.keys(newFontItem).forEach(key => {\r\n                    newFontItem[key] = false;\r\n                });\r\n                newFontItem['e'] = true;\r\n                setFontItem(newFontItem);\r\n                break;\r\n            case 'fontItem_6':\r\n                Object.keys(newFontItem).forEach(key => {\r\n                    newFontItem[key] = false;\r\n                });\r\n                newFontItem['f'] = true;\r\n                setFontItem(newFontItem);\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n    };\r\n\r\n    // Range Item Select\r\n    function selectRangeItem(props) {\r\n        let newRangeItem = { ...rangeItem };\r\n        switch (props) {\r\n            case 'left':\r\n                Object.keys(newRangeItem).forEach(key => {\r\n                    newRangeItem[key] = false;\r\n                });\r\n                newRangeItem['left'] = true;\r\n                setRangeItem(newRangeItem);\r\n                break;\r\n            case 'center':\r\n                Object.keys(newRangeItem).forEach(key => {\r\n                    newRangeItem[key] = false;\r\n                });\r\n                newRangeItem['center'] = true;\r\n                setRangeItem(newRangeItem);\r\n                break;\r\n            case 'right':\r\n                Object.keys(newRangeItem).forEach(key => {\r\n                    newRangeItem[key] = false;\r\n                });\r\n                newRangeItem['right'] = true;\r\n                setRangeItem(newRangeItem);\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n    };\r\n\r\n    // Color Item Select\r\n    function selectColorItem(props) {\r\n        let newColorItem = { ...colorItem };\r\n        switch (props) {\r\n            case 'color_1':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['a'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_2':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['b'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_3':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['c'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_4':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['d'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_5':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['e'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_6':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['f'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_7':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['g'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_8':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['h'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_9':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['i'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            case 'color_10':\r\n                Object.keys(newColorItem).forEach(key => {\r\n                    newColorItem[key] = false;\r\n                });\r\n                newColorItem['j'] = true;\r\n                setColorItem(newColorItem);\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n    };\r\n\r\n    // Paper Item Select\r\n    function selectPaperItem(props) {\r\n        let newPaperItem = { ...paperItem };\r\n        switch (props) {\r\n            case 'paper_1':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['a'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_2':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['b'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_3':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['c'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_4':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['d'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_5':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['e'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_6':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['f'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_7':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['g'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_8':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['h'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_9':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['i'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_10':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['j'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_11':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['k'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_12':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['l'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_13':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['m'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_14':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['n'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_15':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['o'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_16':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['p'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_17':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['q'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_18':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['r'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_19':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['s'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_20':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['t'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_21':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['u'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_22':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['v'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_23':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['w'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_24':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['x'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_25':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['y'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_26':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['z'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_27':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['a1'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_28':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['b1'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_29':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['c1'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_30':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['d1'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_31':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['e1'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_32':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['f1'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            case 'paper_33':\r\n                Object.keys(newPaperItem).forEach(key => {\r\n                    newPaperItem[key] = false;\r\n                });\r\n                newPaperItem['g1'] = true;\r\n                setPaperItem(newPaperItem);\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <SendingEnd></SendingEnd>\r\n            {isSendingPage ? <SendingPage></SendingPage> : ''}\r\n            <PreLetter></PreLetter>\r\n            <SendPopUp></SendPopUp>\r\n            <SendPopUpCancel></SendPopUpCancel>\r\n            <SendPopUpCheck></SendPopUpCheck>\r\n            <div className={isSendMain ? 'send_main_fade' : 'send_main_active'}>\r\n                <section className='section_shootingStar'>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                </section>\r\n                <div className='send_top_menu'>\r\n                    <img alt='backIMG' src='https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/icon/back.png?raw=true' onClick={() => {\r\n                        dispatch({ type: 'CHANGE_ISSENDPOPUPCANCEL', data: !isSendPopUpCancel });\r\n                    }}></img>\r\n                    <h3>To. {userNickName}</h3>\r\n                    <span className={completion ? 'set_top_menu_completion_active' : 'set_top_menu_completion'} onClick={() => {\r\n                        if (text === '') {\r\n                            dispatch({ type: 'CHANGE_ISSENDPOPUPCHECK', data: !isSendPopUpCheck });\r\n                        } else {\r\n                            dispatch({ type: 'CHANGE_ISPRELETTERBOX', data: !isPreLetterBox });\r\n                            inactiveLetterOption();\r\n                            dispatch({ type: 'CHANGE_ISSENDMAIN', data: !isSendMain });\r\n                        };\r\n                    }}>완성하기</span>\r\n                </div>\r\n                <div>\r\n                    <div id=\"send_textarea\">\r\n                        <textarea style={styleLetter} ref={textareaFocus} className=\"send_textbox\" maxLength={240} placeholder='※ 편지를 작성해주세요.&#13;&#10;※ 240자 또는 1쪽 이내' onChange={(e) => {\r\n                            inactiveLetterOption();\r\n                            if (e.target.scrollHeight > 320) {\r\n                                alert('아직 쪽을 넘겨서 작성하면 편지가 올바르게 전달되지 않습니다.');\r\n                                let modifiedText = e.target.value.slice(0, -1);\r\n                                e.target.value = modifiedText;\r\n                            };\r\n                            dispatch({ type: 'CHANGE_TEXTLENGTH', data: e.target.value.length });\r\n                            dispatch({ type: 'CHANGE_TEXT', data: e.target.value });\r\n                        }} onFocus={() => {\r\n                            inactiveLetterOption();\r\n                            // let focusEle = document.activeElement;\r\n                            // if (document.getElementsByClassName('send_textbox')[0] === focusEle) {\r\n                            //     inactiveLetterOption();\r\n                            // }; \r\n                        }}\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n                    <div className='send_textLength'>{textLength}/240</div>\r\n                </div>\r\n                {/*  */}\r\n                <div className='send_option_button_div'>\r\n                    <div className='send_option_button' onClick={() => {\r\n                        activeLetterOption();\r\n                        selectLetterMenu('font');\r\n                    }}></div>\r\n                </div>\r\n                <div className={isLetterOption ? 'send_letter_option_active' : 'send_letter_option'} >\r\n                    <img className='send_letter_menu_close' alt='option_closed' src='https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/etc/send/closed_btn.png?raw=true' onClick={() => {\r\n                        inactiveLetterOption();\r\n                        selectLetterMenu('font');\r\n                    }}></img>\r\n                    <div className='send_letter_option_innerContainer'>\r\n                        <div className='send_letter_option_menu'>\r\n                            <div className={letterMenu.font ? 'send_letter_menu_active' : 'send_letter_menu'} onClick={() => {\r\n                                changeLetterOption('CHANGE_ISFONTFAMILY');\r\n                                selectLetterMenu('font');\r\n                            }}>글꼴</div>\r\n                            <div className={letterMenu.range ? 'send_letter_menu_active' : 'send_letter_menu'} onClick={() => {\r\n                                changeLetterOption('CHANGE_ISRANGE');\r\n                                selectLetterMenu('range');\r\n                            }}>정렬</div>\r\n                            <div className={letterMenu.color ? 'send_letter_menu_active' : 'send_letter_menu'} onClick={() => {\r\n                                changeLetterOption('CHANGE_ISCOLOR');\r\n                                selectLetterMenu('color');\r\n                            }}>색상</div>\r\n                            <div className={letterMenu.paper ? 'send_letter_menu_active' : 'send_letter_menu'} onClick={() => {\r\n                                changeLetterOption('CHANGE_ISLETTERPAPER');\r\n                                selectLetterMenu('paper');\r\n                            }}>편지지</div>\r\n                            <div className={letterMenu.sticker ? 'send_letter_menu_active' : 'send_letter_menu'} onClick={() => {\r\n                                changeLetterOption('CHANGE_ISSTICKER');\r\n                                selectLetterMenu('sticker');\r\n                            }}>스티커</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={isFontFamily ? 'send_font_active' : 'send_font'}>\r\n                        <div className={fontItem.a ? 'send_item_font_active' : 'send_item_font'} style={{ fontFamily: 'SpoqaHanSansNeo-Regular' }} onClick={() => {\r\n                            setFontFamily('SpoqaHanSansNeo-Regular', '0.875rem');\r\n                            selectFontItem('fontItem_1');\r\n                        }}>\r\n                            <div className='send_item_font_title'>Spoqa Han Sans Neo R</div>\r\n                            <div className='send_item_font_content'>안녕, 플래터</div>\r\n                        </div>\r\n                        <div className={fontItem.b ? 'send_item_font_active' : 'send_item_font'} style={{ fontFamily: 'GyeonggiBatang' }} onClick={() => {\r\n                            setFontFamily('GyeonggiBatang', '0.875rem');\r\n                            selectFontItem('fontItem_2');\r\n                        }}>\r\n                            <div className='send_item_font_title'>경기천년바탕 R</div>\r\n                            <div className='send_item_font_content'>안녕, 플래터</div>\r\n                        </div>\r\n                        <div className={fontItem.c ? 'send_item_font_active' : 'send_item_font'} style={{ fontFamily: 'NeoDunggeunmo' }} onClick={() => {\r\n                            setFontFamily('NeoDunggeunmo', '0.8125rem');\r\n                            selectFontItem('fontItem_3');\r\n                        }}>\r\n                            <div className='send_item_font_title'>Neo 둥근모</div>\r\n                            <div className='send_item_font_content'>안녕, 플래터</div>\r\n                        </div>\r\n                        <div className={fontItem.d ? 'send_item_font_active' : 'send_item_font'} style={{ fontFamily: 'Saying_tobe_strong' }} onClick={() => {\r\n                            setFontFamily('Saying_tobe_strong', '1.20rem');\r\n                            selectFontItem('fontItem_4');\r\n                        }}>\r\n                            <div className='send_item_font_title'>힘내라는 말보단</div>\r\n                            <div className='send_item_font_content'>안녕, 플래터</div>\r\n                        </div>\r\n                        <div className={fontItem.e ? 'send_item_font_active' : 'send_item_font'} style={{ fontFamily: 'ROEHOE-CHAN' }} onClick={() => {\r\n                            setFontFamily('ROEHOE-CHAN', '0.98rem');\r\n                            selectFontItem('fontItem_5');\r\n                        }}>\r\n                            <div className='send_item_font_title'>노회찬체</div>\r\n                            <div className='send_item_font_content'>안녕, 플래터</div>\r\n                        </div>\r\n                        <div className={fontItem.f ? 'send_item_font_active' : 'send_item_font'} style={{ fontFamily: 'SBAggroB' }} onClick={() => {\r\n                            setFontFamily('SBAggroB', '0.84rem');\r\n                            selectFontItem('fontItem_6');\r\n                        }}>\r\n                            <div className='send_item_font_title'>어그로체 L</div>\r\n                            <div className='send_item_font_content'>안녕, 플래터</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={isRange ? 'send_range_active' : 'send_range'}>\r\n                        <div className={rangeItem.left ? 'send_item_range_active' : 'send_item_range'} onClick={() => {\r\n                            setRange('left');\r\n                            selectRangeItem('left');\r\n                        }}><div className='send_item_range_left'></div></div>\r\n                        <div className={rangeItem.center ? 'send_item_range_active' : 'send_item_range'} onClick={() => {\r\n                            setRange('center');\r\n                            selectRangeItem('center');\r\n                        }}><div className='send_item_range_center'></div></div>\r\n                        <div className={rangeItem.right ? 'send_item_range_active' : 'send_item_range'} onClick={() => {\r\n                            setRange('right');\r\n                            selectRangeItem('right');\r\n                        }}><div className='send_item_range_right'></div></div>\r\n                    </div>\r\n                    <div className={isColor ? 'send_color_active' : 'send_color'}>\r\n                        <div id='color_1' className={colorItem.a ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(6 18 42)');\r\n                            selectColorItem('color_1');\r\n                        }}></div>\r\n                        <div id='color_2' className={colorItem.b ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(169 19 25)');\r\n                            selectColorItem('color_2');\r\n                        }}></div>\r\n                        <div id='color_3' className={colorItem.c ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(242 202 22)');\r\n                            selectColorItem('color_3');\r\n                        }}></div>\r\n                        <div id='color_4' className={colorItem.d ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(77 168 77)');\r\n                            selectColorItem('color_4');\r\n                        }}></div>\r\n                        <div id='color_5' className={colorItem.e ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(8 160 222)');\r\n                            selectColorItem('color_5');\r\n                        }}></div>\r\n                        <div id='color_6' className={colorItem.f ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(76 76 253)');\r\n                            selectColorItem('color_6');\r\n                        }}></div>\r\n                        <div id='color_7' className={colorItem.g ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(221 79 136)');\r\n                            selectColorItem('color_7');\r\n                        }}></div>\r\n                        <div id='color_8' className={colorItem.h ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(73 36 25)');\r\n                            selectColorItem('color_8');\r\n                        }}></div>\r\n                        <div id='color_9' className={colorItem.i ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(1 124 136)');\r\n                            selectColorItem('color_9');\r\n                        }}></div>\r\n                        <div id='color_10' className={colorItem.j ? 'send_item_color_active' : 'send_item_color'} onClick={() => {\r\n                            setColor('rgb(220 233 243)');\r\n                            selectColorItem('color_10');\r\n                        }}></div>\r\n                    </div>\r\n                    <div className={isLetterPaper ? 'send_paper_active' : 'send_paper'}>\r\n                        <div id='paper_4' className={paperItem.d ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_white.gif?raw=true\\')');\r\n                            selectPaperItem('paper_4');\r\n                        }}><div className='send_item_paper_title'>하얀 편지지</div></div>\r\n                        <div id='paper_7' className={paperItem.g ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_blue.gif?raw=true\\')');\r\n                            selectPaperItem('paper_7');\r\n                        }}><div className='send_item_paper_title'>파랑 편지지</div></div>\r\n                        <div id='paper_33' className={paperItem.g1 ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/papre_green.gif?raw=true\\')');\r\n                            selectPaperItem('paper_33');\r\n                        }}><div className='send_item_paper_title'>초록 편지지</div></div>\r\n                        <div id='paper_17' className={paperItem.q ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_orange.gif?raw=true\\')');\r\n                            selectPaperItem('paper_17');\r\n                        }}><div className='send_item_paper_title'>주황 편지지</div></div>\r\n                        <div id='paper_25' className={paperItem.y ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_red.gif?raw=true\\')');\r\n                            selectPaperItem('paper_25');\r\n                        }}><div className='send_item_paper_title'>붉은 편지지</div></div>\r\n                        <div id='paper_22' className={paperItem.v ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_purple.gif?raw=true\\')');\r\n                            selectPaperItem('paper_22');\r\n                        }}><div className='send_item_paper_title'>보라 편지지</div></div>\r\n                        <div id='paper_16' className={paperItem.p ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_mint.gif?raw=true\\')');\r\n                            selectPaperItem('paper_16');\r\n                        }}><div className='send_item_paper_title'>민트 편지지</div></div>\r\n                        <div id='paper_15' className={paperItem.o ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_magenta.gif?raw=true\\')');\r\n                            selectPaperItem('paper_15');\r\n                        }}><div className='send_item_paper_title'>자홍 편지지</div></div>\r\n                        <div id='paper_32' className={paperItem.f1 ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_yellow.gif?raw=true\\')');\r\n                            selectPaperItem('paper_32');\r\n                        }}><div className='send_item_paper_title'>노란 편지지</div></div>\r\n                        <div id='paper_11' className={paperItem.k ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_flower.gif?raw=true\\')');\r\n                            selectPaperItem('paper_11');\r\n                        }}><div className='send_item_paper_title'>목화 편지지</div></div>\r\n                        <div id='paper_23' className={paperItem.w ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_purple_pastel.gif?raw=true\\')');\r\n                            selectPaperItem('paper_23');\r\n                        }}><div className='send_item_paper_title'>모란 편지지</div></div>\r\n                        <div id='paper_8' className={paperItem.h ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_blue_pastel.gif?raw=true\\')');\r\n                            selectPaperItem('paper_8');\r\n                        }}><div className='send_item_paper_title'>푸른 편지지</div></div>\r\n                        <div id='paper_13' className={paperItem.m ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_green_pastel.gif?raw=true\\')');\r\n                            selectPaperItem('paper_13');\r\n                        }}><div className='send_item_paper_title'>누런 편지지</div></div>\r\n                        <div id='paper_26' className={paperItem.z ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_red_pastel.gif?raw=true\\')');\r\n                            selectPaperItem('paper_26');\r\n                        }}><div className='send_item_paper_title'>분홍 편지지</div></div>\r\n                        <div id='paper_18' className={paperItem.r ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_mint_pastel.gif?raw=true\\')');\r\n                            selectPaperItem('paper_18');\r\n                        }}><div className='send_item_paper_title'>녹색 편지지</div></div>\r\n                        <div id='paper_19' className={paperItem.s ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_pastel.gif?raw=true\\')');\r\n                            selectPaperItem('paper_19');\r\n                        }}><div className='send_item_paper_title'>파스텔샤워 편지지</div></div>\r\n                        <div id='paper_12' className={paperItem.l ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_green_donut.gif?raw=true\\')');\r\n                            selectPaperItem('paper_12');\r\n                        }}><div className='send_item_paper_title'>도넛 편지지</div></div>\r\n                        <div id='paper_28' className={paperItem.b1 ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_stripe.gif?raw=true\\')');\r\n                            selectPaperItem('paper_28');\r\n                        }}><div className='send_item_paper_title'>줄무늬 편지지</div></div>\r\n                        <div id='paper_20' className={paperItem.t ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_pink_cloud.gif?raw=true\\')');\r\n                            selectPaperItem('paper_20');\r\n                        }}><div className='send_item_paper_title'>구름 편지지</div></div>\r\n                        <div id='paper_27' className={paperItem.a1 ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_sprout.gif?raw=true\\')');\r\n                            selectPaperItem('paper_27');\r\n                        }}><div className='send_item_paper_title'>새싹 편지지</div></div>\r\n                        <div id='paper_14' className={paperItem.n ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_little_flower.gif?raw=true\\')');\r\n                            selectPaperItem('paper_14');\r\n                        }}><div className='send_item_paper_title'>들꽃 편지지</div></div>\r\n                        <div id='paper_5' className={paperItem.e ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_birthday.gif?raw=true\\')');\r\n                            selectPaperItem('paper_5');\r\n                        }}><div className='send_item_paper_title'>생일 편지지</div></div>\r\n                        <div id='paper_6' className={paperItem.f ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_birthday_2.gif?raw=true\\')');\r\n                            selectPaperItem('paper_6');\r\n                        }}><div className='send_item_paper_title'>생일 편지지2</div></div>\r\n                        <div id='paper_30' className={paperItem.d1 ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_white_room.gif?raw=true\\')');\r\n                            selectPaperItem('paper_30');\r\n                        }}><div className='send_item_paper_title'>하얀방 편지지</div></div>\r\n                        <div id='paper_9' className={paperItem.i ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_cheese.gif?raw=true\\')');\r\n                            selectPaperItem('paper_9');\r\n                        }}><div className='send_item_paper_title'>치즈 편지지</div></div>\r\n                        <div id='paper_1' className={paperItem.a ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_city.gif?raw=true\\')');\r\n                            selectPaperItem('paper_1');\r\n                        }}><div className='send_item_paper_title'>도시 편지지</div></div>\r\n                        <div id='paper_3' className={paperItem.c ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_space.gif?raw=true\\')');\r\n                            selectPaperItem('paper_3');\r\n                        }}><div className='send_item_paper_title'>우주 편지지</div></div>\r\n                        <div id='paper_10' className={paperItem.j ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_error.gif?raw=true\\')');\r\n                            selectPaperItem('paper_10');\r\n                        }}><div className='send_item_paper_title'>오류 편지지</div></div>\r\n                        <div id='paper_21' className={paperItem.u ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_postit.gif?raw=true\\')');\r\n                            selectPaperItem('paper_21');\r\n                        }}><div className='send_item_paper_title'>쪽지 편지지</div></div>\r\n                        <div id='paper_2' className={paperItem.b ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_curce.gif?raw=true\\')');\r\n                            selectPaperItem('paper_2');\r\n                        }}><div className='send_item_paper_title'>저주 편지지</div></div>\r\n                        <div id='paper_31' className={paperItem.e1 ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_wrinkle.gif?raw=true\\')');\r\n                            selectPaperItem('paper_31');\r\n                        }}><div className='send_item_paper_title'>구겨진 편지지</div></div>\r\n                        <div id='paper_29' className={paperItem.c1 ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_vivid.gif?raw=true\\')');\r\n                            selectPaperItem('paper_29');\r\n                        }}><div className='send_item_paper_title'>비비드 편지지</div></div>\r\n                        <div id='paper_24' className={paperItem.x ? 'send_item_paper_active' : 'send_item_paper'} onClick={() => {\r\n                            setPaper('url(\\'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/paper/paper_rainbow.gif?raw=true\\')');\r\n                            selectPaperItem('paper_24');\r\n                        }}><div className='send_item_paper_title'>무지개 편지지</div></div>\r\n                    </div>\r\n                    <div className={isSticker ? 'send_sticker_active' : 'send_sticker'}>\r\n                        <button className='send_item_sticker_1' onClick={() => { createEl(stickerNumber, 1) }}></button>\r\n                        <button className='send_item_sticker_15' onClick={() => { createEl(stickerNumber, 15) }}></button>\r\n                        <button className='send_item_sticker_12' onClick={() => { createEl(stickerNumber, 12) }}></button>\r\n                        <button className='send_item_sticker_13' onClick={() => { createEl(stickerNumber, 13) }}></button>\r\n                        <button className='send_item_sticker_26' onClick={() => { createEl(stickerNumber, 26) }}></button>\r\n                        <button className='send_item_sticker_30' onClick={() => { createEl(stickerNumber, 30) }}></button>\r\n                        <button className='send_item_sticker_14' onClick={() => { createEl(stickerNumber, 14) }}></button>\r\n                        <button className='send_item_sticker_3' onClick={() => { createEl(stickerNumber, 3) }}></button>\r\n                        <button className='send_item_sticker_42' onClick={() => { createEl(stickerNumber, 42) }}></button>\r\n                        <button className='send_item_sticker_43' onClick={() => { createEl(stickerNumber, 43) }}></button>\r\n                        <button className='send_item_sticker_44' onClick={() => { createEl(stickerNumber, 44) }}></button>\r\n                        <button className='send_item_sticker_45' onClick={() => { createEl(stickerNumber, 45) }}></button>\r\n                        <button className='send_item_sticker_47' onClick={() => { createEl(stickerNumber, 47) }}></button>\r\n                        <button className='send_item_sticker_48' onClick={() => { createEl(stickerNumber, 48) }}></button>\r\n                        <button className='send_item_sticker_49' onClick={() => { createEl(stickerNumber, 49) }}></button>\r\n                        <button className='send_item_sticker_46' onClick={() => { createEl(stickerNumber, 46) }}></button>\r\n                        <button className='send_item_sticker_22' onClick={() => { createEl(stickerNumber, 22) }}></button>\r\n                        <button className='send_item_sticker_23' onClick={() => { createEl(stickerNumber, 23) }}></button>\r\n                        <button className='send_item_sticker_24' onClick={() => { createEl(stickerNumber, 24) }}></button>\r\n                        <button className='send_item_sticker_54' onClick={() => { createEl(stickerNumber, 54) }}></button>\r\n                        <button className='send_item_sticker_6' onClick={() => { createEl(stickerNumber, 6) }}></button>\r\n                        <button className='send_item_sticker_50' onClick={() => { createEl(stickerNumber, 50) }}></button>\r\n                        <button className='send_item_sticker_21' onClick={() => { createEl(stickerNumber, 21) }}></button>\r\n                        <button className='send_item_sticker_0' onClick={() => { createEl(stickerNumber, 0) }}></button>\r\n                        <button className='send_item_sticker_29' onClick={() => { createEl(stickerNumber, 29) }}></button>\r\n                        <button className='send_item_sticker_28' onClick={() => { createEl(stickerNumber, 28) }}></button>\r\n                        <button className='send_item_sticker_2' onClick={() => { createEl(stickerNumber, 2) }}></button>\r\n                        <button className='send_item_sticker_8' onClick={() => { createEl(stickerNumber, 8) }}></button>\r\n                        <button className='send_item_sticker_9' onClick={() => { createEl(stickerNumber, 9) }}></button>\r\n                        <button className='send_item_sticker_10' onClick={() => { createEl(stickerNumber, 10) }}></button>\r\n                        <button className='send_item_sticker_11' onClick={() => { createEl(stickerNumber, 11) }}></button>\r\n                        <button className='send_item_sticker_4' onClick={() => { createEl(stickerNumber, 4) }}></button>\r\n                        <button className='send_item_sticker_34' onClick={() => { createEl(stickerNumber, 34) }}></button>\r\n                        <button className='send_item_sticker_35' onClick={() => { createEl(stickerNumber, 35) }}></button>\r\n                        <button className='send_item_sticker_36' onClick={() => { createEl(stickerNumber, 36) }}></button>\r\n                        <button className='send_item_sticker_37' onClick={() => { createEl(stickerNumber, 37) }}></button>\r\n                        <button className='send_item_sticker_5' onClick={() => { createEl(stickerNumber, 5) }}></button>\r\n                        <button className='send_item_sticker_38' onClick={() => { createEl(stickerNumber, 38) }}></button>\r\n                        <button className='send_item_sticker_39' onClick={() => { createEl(stickerNumber, 39) }}></button>\r\n                        <button className='send_item_sticker_40' onClick={() => { createEl(stickerNumber, 40) }}></button>\r\n                        <button className='send_item_sticker_41' onClick={() => { createEl(stickerNumber, 41) }}></button>\r\n                        <button className='send_item_sticker_20' onClick={() => { createEl(stickerNumber, 20) }}></button>\r\n                        <button className='send_item_sticker_19' onClick={() => { createEl(stickerNumber, 19) }}></button>\r\n                        <button className='send_item_sticker_18' onClick={() => { createEl(stickerNumber, 18) }}></button>\r\n                        <button className='send_item_sticker_17' onClick={() => { createEl(stickerNumber, 17) }}></button>\r\n                        <button className='send_item_sticker_32' onClick={() => { createEl(stickerNumber, 32) }}></button>\r\n                        <button className='send_item_sticker_33' onClick={() => { createEl(stickerNumber, 33) }}></button>\r\n                        <button className='send_item_sticker_53' onClick={() => { createEl(stickerNumber, 53) }}></button>\r\n                        <button className='send_item_sticker_25' onClick={() => { createEl(stickerNumber, 25) }}></button>\r\n                        <button className='send_item_sticker_52' onClick={() => { createEl(stickerNumber, 52) }}></button>\r\n                        <button className='send_item_sticker_16' onClick={() => { createEl(stickerNumber, 16) }}></button>\r\n                        <button className='send_item_sticker_51' onClick={() => { createEl(stickerNumber, 51) }}></button>\r\n                        <button className='send_item_sticker_7' onClick={() => { createEl(stickerNumber, 7) }}></button>\r\n                        <button className='send_item_sticker_31' onClick={() => { createEl(stickerNumber, 31) }}></button>\r\n                        <button className='send_item_sticker_27' onClick={() => { createEl(stickerNumber, 27) }}></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Send;",[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\ModalStory.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\InnerPage.js",["91","92","93"],[],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Slider from \"react-slick\";\r\nimport { Adsense } from '@ctrl/react-adsense';\r\n// import Typewriter from 'typewriter-effect/dist/core';\r\nimport './InnerPage.css';\r\nimport ShareBt from './ShareBt';\r\nimport Restart from './Restart';\r\nimport Refresh from './Refresh';\r\n\r\nfunction InnerPage() {\r\n    const dispatch = useDispatch();\r\n    // For component Letter box\r\n    const [render, setRender] = useState(-1);\r\n    const [slickPage, setSlickPage] = useState(0);\r\n    const [setStyle, setSetStyle] = useState({ 'fontSize': '', 'fontFamily': '', 'color': '', 'textAlign': '', 'backgroundImage': '' });\r\n    const userID = useSelector((state) => state.userID);\r\n    const ShareUserID = useSelector((state) => state.ShareUserID);\r\n    const userData = useSelector((state) => state.userData);\r\n    const letterData = useSelector((state) => state.letterData);\r\n    const isNamePage = useSelector((state) => state.isNamePage);\r\n    const ModalCreateUrl = useSelector((state) => state.ModalCreateUrl);\r\n    const isPopUpCopyLink = useSelector((state) => state.isPopUpCopyLink);\r\n    const isYesName = useSelector((state) => state.isYesName);\r\n    const isRestart = useSelector((state) => state.isRestart);\r\n    const isImagePreload = useSelector((state) => state.isImagePreload);\r\n\r\n    useEffect(() => {\r\n        if (userData.openDate === 0) {\r\n            dispatch({ type: 'CHANGE_ISNAMEPAGE', data: false });\r\n        } else if (userData.openDate !== 0) {\r\n            dispatch({ type: 'CHANGE_ISNAMEPAGE', data: true });\r\n        };\r\n    }, [dispatch, userData.openDate]);\r\n\r\n    // case of a new member\r\n    function SetSignal() {\r\n        const isSendSignal = useSelector((state) => state.isSendSignal);\r\n        const [isPopUpOpenPlanet, setIsPopUpOpenPlanet] = useState(false);\r\n        const [isPopUpOpenPlanetName, setIsPopUpOpenPlanetName] = useState(false);\r\n        const [stringUserNickname, setStringUserNickname] = useState(String(userData.nickname));\r\n        const [lengthUserNickname, setLengthUserNickname] = useState(Number(userData.nickname.length));\r\n        const [startMonth, setStartMonth] = useState(null);\r\n        const [startHours, setStartHours] = useState(null);\r\n        const [endMonth, setEndMonth] = useState(null);\r\n        const [endHours, setEndHours] = useState(null);\r\n\r\n        // popUp: open planet No Name\r\n        function PopUpOpenPlanetNoName() {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className={isPopUpOpenPlanetName ? \"ispopupopenplanetnoname\" : \"ispopupopenplanetnoname_fade\"}>\r\n                        <div className='ispopupopenplanetnoname_outContainer'>\r\n                            <p className='ispopupopenplanetnoname_title'>행성 이름이 비어있습니다.</p>\r\n                            <p className='ispopupopenplanetnoname_p'>이름이 없는 행성은 조금 울적할지도 몰라요.</p>\r\n                            <div className='ispopupopenplanetnoname_innerBox'>\r\n                                <div className='ispopupopenplanetnoname_button_cancel' onClick={() => {\r\n                                    setIsPopUpOpenPlanetName(!isPopUpOpenPlanetName);\r\n                                }}>돌아가기</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        };\r\n\r\n        // popUp: open planet\r\n        function PopUpOpenPlanet() {\r\n            function RequestShareUserID(userID) {\r\n                fetch('https://plater.kr/api/member/userid/' + userID, {\r\n                    method: 'GET',\r\n                    mode: 'cors',\r\n                    cache: 'no-cache',\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                })\r\n                    .then(res => res.json())\r\n                    .then((userData) => {\r\n                        dispatch({ type: 'CHANGE_SHAREUSERID', data: String(userData) });\r\n                    })\r\n                    .catch((userDate_error) => {\r\n                        console.log(userDate_error);\r\n                        alert('공유 가능한 userID를 정상적으로 받아오지 못했습니다. 공유 버튼을 다시 눌러주세요.');\r\n                    });\r\n            };\r\n\r\n            return (\r\n                <React.Fragment>\r\n                    <div className={isPopUpOpenPlanet ? \"ispopupopenplanet\" : \"ispopupopenplanet_fade\"}>\r\n                        <div className='ispopupopenplanet_outContainer'>\r\n                            <p className='ispopupopenplanet_title'>{stringUserNickname}(이)란 행성을</p>\r\n                            <p className='ispopupopenplanet_title'>개설할까요?</p>\r\n                            <p className='ispopupopenplanet_p'>행성의 이름과</p>\r\n                            <p className='ispopupopenplanet_p'>시간을 확인해주세요.</p>\r\n                            <div className='ispopupopenplanet_innerBox'>\r\n                                <div className='ispopupopenplanet_button_signOut' onClick={() => { setIsPopUpOpenPlanet(!isPopUpOpenPlanet); }}>취소</div>\r\n                                <div className='ispopupopenplanet_button_cancel' onClick={() => {\r\n                                    setIsPopUpOpenPlanet(!isPopUpOpenPlanet);\r\n                                    sendSignal_confirm();\r\n                                    RequestShareUserID(userID);\r\n                                }}>개설하기</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        };\r\n\r\n        function settingStartMonth() {\r\n            setInterval(function () {\r\n                let now = new Date();\r\n                let months = now.getMonth() + 1;\r\n                let days = now.getDate();\r\n                setStartMonth(months + '-' + days);\r\n            }, 300);\r\n        };\r\n\r\n        function settingStartHours() {\r\n            setInterval(function () {\r\n                let now = new Date();\r\n                let hours = now.getHours();\r\n                let minutes = now.getMinutes();\r\n                let seconds = now.getSeconds();\r\n                setStartHours(hours + ':' + minutes + ':' + seconds);\r\n            }, 300);\r\n        };\r\n\r\n        function settingEndtMonth() {\r\n            setInterval(function () {\r\n                let now = new Date();\r\n                now.setDate(now.getDate() + 10)\r\n                let months = now.getMonth() + 1;\r\n                let days = now.getDate();\r\n                setEndMonth(months + '-' + days);\r\n            }, 300);\r\n        };\r\n\r\n        function settingEndHours() {\r\n            setInterval(function () {\r\n                let now = new Date();\r\n                let hours = now.getHours();\r\n                let minutes = now.getMinutes();\r\n                let seconds = now.getSeconds();\r\n                setEndHours(hours + ':' + minutes + ':' + seconds);\r\n            }, 300);\r\n        };\r\n\r\n        function showCreateSendSingalPage() {\r\n            dispatch({ type: 'CHANGE_ISSENDSIGNAL', data: !isSendSignal });\r\n            settingStartMonth();\r\n            settingStartHours();\r\n            settingEndtMonth();\r\n            settingEndHours();\r\n        };\r\n\r\n        function fadeCreateSendSingalPage() {\r\n            const originalUserNickname = String(userData.nickname);\r\n            const originalUserNicknameLength = Number(userData.nickname.length);\r\n            setStringUserNickname(originalUserNickname);\r\n            setLengthUserNickname(originalUserNicknameLength);\r\n            dispatch({ type: 'CHANGE_ISSENDSIGNAL', data: !isSendSignal });\r\n        };\r\n\r\n        function sendSignal_confirm() {\r\n            fetch('https://plater.kr/api/member/opendate', {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(userID)\r\n            })\r\n                .then(() => {\r\n                    const now = new Date();\r\n                    now.setDate(now.getDate() + 10);\r\n                    const finalDate = Number(now.getTime());\r\n                    dispatch({ type: 'CHANGE_OPENDATE', data: finalDate });\r\n                    fetch('https://plater.kr/api/member/' + userID + '/', {\r\n                        method: 'PATCH',\r\n                        mode: 'cors',\r\n                        cache: 'no-cache',\r\n                        credentials: 'same-origin',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify(String(stringUserNickname))\r\n                    })\r\n                        .then(() => {\r\n                            dispatch({ type: 'CHANGE_USERNICKNAME', data: stringUserNickname });\r\n                            dispatch({ type: 'CHANGE_ISSENDSIGNAL', data: !isSendSignal });\r\n                            dispatch({ type: 'CHANGE_MODALCREATEURL', data: !ModalCreateUrl });\r\n                            dispatch({ type: 'CHANGE_ISYESNAME', data: true });\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error);\r\n                            alert('서버가 불안정 하여 행성 개설에 실패했습니다. 다시 시도해주세요.');\r\n                            fadeCreateSendSingalPage();\r\n                        })\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    alert('서버가 불안정 하여 행성 개설에 실패했습니다. 다시 시도해주세요.');\r\n                    fadeCreateSendSingalPage();\r\n                });\r\n        };\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <PopUpOpenPlanet></PopUpOpenPlanet>\r\n                <PopUpOpenPlanetNoName></PopUpOpenPlanetNoName>\r\n                <div className='noname_outContainer'>\r\n                    <p>아직 신호를 보내지</p>\r\n                    <p>않았습니다.</p>\r\n                    <div className='noname_sendSignal' onClick={showCreateSendSingalPage}>신호 보내기</div>\r\n                    <div className={isSendSignal ? \"noname_sendSignal_outContainer\" : \"noname_sendSignal_outContainer_fade\"}>\r\n                        <div className='noname_sendSignal_innerTitle'>\r\n                            <img alt='back_icon' className='noname_sendSignal_innerTitle_backIcon' src='https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/icon/back.png?raw=true' onClick={fadeCreateSendSingalPage}></img>\r\n                            <p className='noname_sendSignal_innerTitle_p'>안녕하세요.\r\n                                <br></br>\r\n                                제 이름은...\r\n                            </p>\r\n                        </div>\r\n                        <div className='noname_sendSignal_innerName'>\r\n                            <p className='noname_sendSignal_innerName_p'>행성의 이름</p>\r\n                            <input id='input_userName' maxLength={10} onChange={(e) => {\r\n                                setLengthUserNickname(e.target.value.length);\r\n                                setStringUserNickname(e.target.value);\r\n                            }} value={stringUserNickname}></input><span className='inputUserNameLength'>{lengthUserNickname}/10</span>\r\n                        </div>\r\n                        {/* <div className='noname_sendSignal_line'></div> */}\r\n                        <div className='noname_sendSignal_innerTime'>\r\n                            <p className='noname_sendSignal_innerTime_p'>시작 & 마감</p>\r\n                            <h6 className='noname_sendSignal_innerTime_h6'>10일 동안 편지를 받을 수 있습니다.</h6>\r\n                        </div>\r\n                        <div className='noname_sendSignal_innerTime_view'>\r\n                            <div className='noname_sendSignal_innerTime_view_start'>\r\n                                <div className='noname_sendSignal_innerTime_view_bolt_div'>\r\n                                    <div className='noname_sendSignal_innerTime_view_bolt_1'></div>\r\n                                    <div className='noname_sendSignal_innerTime_view_bolt_2'></div>\r\n                                </div>\r\n                                <p className='noname_sendSignal_innerTime_view_p'>Start</p>\r\n                                <p className='noname_sendSignal_innerTime_view_month'>{startMonth}</p>\r\n                                <p className='noname_sendSignal_innerTime_view_hours'>{startHours}</p>\r\n                            </div>\r\n                            <div className='noname_sendSignal_innerTime_view_pause'></div>\r\n                            <div className='noname_sendSignal_innerTime_view_end'>\r\n                                <div className='noname_sendSignal_innerTime_view_bolt_div'>\r\n                                    <div className='noname_sendSignal_innerTime_view_bolt_1'></div>\r\n                                    <div className='noname_sendSignal_innerTime_view_bolt_2'></div>\r\n                                </div>\r\n                                <p className='noname_sendSignal_innerTime_view_p'>End</p>\r\n                                <p className='noname_sendSignal_innerTime_view_month'>{endMonth}</p>\r\n                                <p className='noname_sendSignal_innerTime_view_hours'>{endHours}</p>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className='noname_sendSignal_line'></div> */}\r\n                        <div className='noname_sendSignal_innerNotice'>\r\n                            {/* <div className='noname_sendSignal_innerNotice_innerbox'>\r\n                                <p className='noname_sendSignal_innerNotice_p'>알림 설정</p>\r\n                                <h6 className='noname_sendSignal_innerNotice_h6'>카카오톡을 통해 D-Day 알림을 받습니다.</h6>\r\n                            </div>\r\n                            <div>\r\n                                <img alt='button_notice' className='noname_sendSignal_innerNotice_button' src='https://cdn-icons-png.flaticon.com/512/5720/5720465.png' onClick={() => { alert('아직 서비스 준비 중입니다.') }}></img>\r\n                            </div> */}\r\n                        </div>\r\n                        <div className='noname_sendSignal_startDiv'>\r\n                            <div className='noname_sendSignal_startDiv_button' onClick={\r\n                                () => {\r\n                                    if (lengthUserNickname === 0) {\r\n                                        setIsPopUpOpenPlanetName(!isPopUpOpenPlanetName);\r\n                                    } else {\r\n                                        setIsPopUpOpenPlanet(!isPopUpOpenPlanet);\r\n                                    };\r\n                                }}>시작하기</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    // notify after receiver creation\r\n    function CreateNameURL() {\r\n\r\n        function urlCopy() {\r\n            let Dummy_Tag = document.createElement(\"input\");\r\n            let Current_URL = 'https://angelo-s-library-2.netlify.app/send?userID=' + ShareUserID;\r\n            document.body.appendChild(Dummy_Tag);\r\n            Dummy_Tag.value = Current_URL;\r\n            Dummy_Tag.select();\r\n            document.execCommand(\"copy\");\r\n            document.body.removeChild(Dummy_Tag);\r\n            dispatch({ type: 'CHANGE_MODALCREATEURL', data: !ModalCreateUrl });\r\n            dispatch({ type: 'CHANGE_ISPOPUPCOPYLINK', data: !isPopUpCopyLink });\r\n        };\r\n\r\n        function PopUpCopyLink() {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className={isPopUpCopyLink ? \"isPopupCopyLink\" : \"isPopupCopyLink_fade\"}>\r\n                        <div className='isPopupCopyLink_outContainer'>\r\n                            <p className='isPopupCopyLink_title'>신호 복사 완료!</p>\r\n                            <p className='isPopupCopyLink_p'>링크가 복사 되었어요.</p>\r\n                            <div className='isPopupCopyLink_button_signOut' onClick={() => { dispatch({ type: 'CHANGE_ISPOPUPCOPYLINK', data: !isPopUpCopyLink }); }}>확인</div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        };\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <PopUpCopyLink></PopUpCopyLink>\r\n                <div className={ModalCreateUrl ? \"yesNameUrl\" : \"yesNameUrl_fade\"}>\r\n                    <div className='yesNameUrl_outContainer'>\r\n                        <p className='yesNameUrl_title'>행성 개설 완료!</p>\r\n                        <p className='yesNameUrl_p'>행성 개설이 완료되었습니다.</p>\r\n                        <p className='yesNameUrl_p'>신호를 공유해 편지를 받아보세요.</p>\r\n                        <div className='yesNameUrl_innerBox'>\r\n                            <div className='yesNameUrl_button_signOut' onClick={() => { dispatch({ type: 'CHANGE_MODALCREATEURL', data: !ModalCreateUrl }); }}>확인</div>\r\n                            <div className='yesNameUrl_button_cancel' onClick={urlCopy}>신호 복사하기</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    // case of an old member\r\n    function ShowMemberInf() {\r\n        const [Dday, setDday] = useState(Number(userData.openDate));\r\n        const setDDay = useCallback(() => {\r\n            let count = setInterval(function () {\r\n                let now = new Date().getTime();\r\n                let distance = Dday - now;\r\n                let days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n                let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n                let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n                let seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n                setDday(days + ' 일 ' + hours + ' : ' + minutes + ' : ' + seconds);\r\n                if (distance < 0) {\r\n                    clearInterval(count);\r\n                    dispatch({ type: 'CHANGE_ISSHAREBT', data: false });\r\n                    dispatch({ type: 'CHANGE_ISSHARE', data: false });\r\n                    dispatch({ type: 'CHANGE_ISRESTART', data: true });\r\n                    dispatch({ type: 'CHANGE_ISYESNAME', data: false });\r\n                    setDday(\"만료된 행성\");\r\n                };\r\n            }, 0);\r\n        }, [Dday]);\r\n\r\n        useEffect(() => {\r\n            setDDay();\r\n        }, []);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className='yesname_outContainer'>\r\n                    <h3><span>{userData.nickname}</span></h3>\r\n                    <div className={isYesName ? '' : 'yesname_outContainer_div_fade'}>\r\n                        <Refresh></Refresh>\r\n                        <h4>남은 시간</h4>\r\n                    </div>\r\n                    <h4 className={isYesName ? '' : 'h4_new'} >{Dday}</h4>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    function LetterBox() {\r\n        const isNotYetLetter = useSelector((state) => state.isNotYetLetter);\r\n        const isLetterBlockConfirm = useSelector((state) => state.isLetterBlockConfirm);\r\n        const isLetter = useSelector((state) => state.isLetter);\r\n        const [list, setList] = useState([<span key={1} style={{ color: \"white\" }}>Loading...</span>]);\r\n        const [list2, setList2] = useState([<span key={2} style={{ color: \"white\" }}>Loading...</span>]);\r\n        const [list3, setList3] = useState([<span key={3} style={{ color: \"white\" }}>Loading...</span>]);\r\n        const [list4, setList4] = useState([<span key={4} style={{ color: \"white\" }}>Loading...</span>]);\r\n\r\n        function setSlickPageNum(i) {\r\n            if (i <= 8) {\r\n                setSlickPage(0);\r\n            } else if (i >= 9 && i <= 17) {\r\n                setSlickPage(1);\r\n            } else if (i >= 18 && i <= 26) {\r\n                setSlickPage(2);\r\n            } else if (i >= 27 && i <= 35) {\r\n                setSlickPage(3);\r\n            };\r\n        };\r\n\r\n        function LetterBlockConfirm() {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className={isLetterBlockConfirm ? \"isLetterBlockConfirm\" : \"isLetterBlockConfirm_fade\"}>\r\n                        <div className='isLetterBlockConfirm_outContainer'>\r\n                            <p className='isLetterBlockConfirm_title'>이 편지를</p>\r\n                            <p className='isLetterBlockConfirm_title'>차단하겠습니까?</p>\r\n                            <p className='isLetterBlockConfirm_p'>차단된 편지는 다시 읽을 수 없고</p>\r\n                            <p className='isLetterBlockConfirm_p'>서비스질 개선에 사용됩니다.</p>\r\n                            <div className='isLetterBlockConfirm_innerBox'>\r\n                                <div className='isLetterBlockConfirm_button_signOut' onClick={() => {\r\n                                    dispatch({ type: 'CHANGE_ISLETTER', data: false });\r\n                                    dispatch({ type: 'CHANGE_ISLETTERBLOCKCONFIRM', data: false });\r\n                                }}>취소</div>\r\n                                <div className='isLetterBlockConfirm_button_cancel' onClick={() => {\r\n                                    letterBlcok(render);\r\n                                    dispatch({ type: 'CHANGE_ISLETTERBLOCKCONFIRM', data: false });\r\n                                }}>차단하기</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        };\r\n\r\n        function shareLetterBlock(i) {\r\n            fetch('https://plater.kr/api/letter/block/' + String(letterData[i].letterId), {\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    alert('편지 차단이 정상적으로 진행되지 않았습니다. 다시 시도해주세요.');\r\n                });\r\n        };\r\n\r\n        function letterBlcok(i) {\r\n            const copyLetter = [...letterData];\r\n            copyLetter[i].letterIcon = 'block';\r\n            dispatch({ type: 'CHANGE_LETTERDATA', data: copyLetter });\r\n            dispatch({ type: 'CHANGE_ISLETTER', data: false });\r\n            setRender(-1);\r\n            shareLetterBlock(i);\r\n        };\r\n\r\n        function resetLetterStyle() {\r\n            let newStyle = { ...setStyle };\r\n            newStyle['fontFamily'] = '';\r\n            newStyle['textAlign'] = '';\r\n            newStyle['fontSize'] = '';\r\n            newStyle['color'] = '';\r\n            newStyle['backgroundImage'] = '';\r\n            setSetStyle(newStyle);\r\n        };\r\n\r\n        async function changeLetterStyle(i, newLetterData) {\r\n            let newStyle = { ...setStyle };\r\n            newStyle['fontFamily'] = newLetterData[i].letterFont;\r\n            newStyle['textAlign'] = newLetterData[i].letterTextAlign;\r\n            newStyle['fontSize'] = newLetterData[i].letterFontSize;\r\n            newStyle['color'] = newLetterData[i].letterFontColor;\r\n            newStyle['backgroundImage'] = newLetterData[i].letterPaper;\r\n            setSetStyle(newStyle);\r\n        };\r\n\r\n        // function changeIcon(i, newLetterData) {\r\n        //     const copyLetter = [...newLetterData];\r\n        //     copyLetter[i].letterReadYn = true;\r\n        //     dispatch({ type: 'CHANGE_LETTERDATA', data: copyLetter });\r\n        //     setRender(i);\r\n        // };\r\n\r\n        function enterDesc(i, checkTyping, newLetterData) {\r\n            if (checkTyping === false) {\r\n                let copyText = [newLetterData[i].letterContent];\r\n                let enterText = document.querySelector('.textbox');\r\n                let typingBool = false;\r\n                let typingIdx = 0;\r\n                let liIndex = 0;\r\n                setTimeout(() => {\r\n                    let arrayData = copyText[Object.keys(copyText)[liIndex]];\r\n                    let arraySplitData = arrayData.split('');\r\n                    let liLength = copyText.length;\r\n                    if (typingBool === false) {\r\n                        typingBool = true;\r\n                        var tyInt = setInterval(typing, 150);\r\n                    } function typing() {\r\n                        if (typingIdx < arrayData.length + 1) {\r\n                            enterText.value = arrayData.slice(undefined, typingIdx);\r\n                            typingIdx++;\r\n                        } else {\r\n                            if (liIndex < liLength - 1) {\r\n                                liIndex++;\r\n                                typingIdx = 0;\r\n                                typingBool = false;\r\n                                arrayData = copyText[Object.keys(copyText)[liIndex]]\r\n                                arraySplitData = arrayData.split('');\r\n                                clearInterval(tyInt);\r\n                                setTimeout(function () {\r\n                                    tyInt = setInterval(typing, 150);\r\n                                }, 250);\r\n                            } else if (liIndex === liLength - 1) {\r\n                                clearInterval(tyInt);\r\n                                copyText.splice(0, 1);\r\n                                typingBool = false;\r\n                                typingIdx = 0;\r\n                                liIndex = 0;\r\n                            };\r\n                        };\r\n                    };\r\n                }, 250);\r\n                // let copyText = letterData[i].letterContent;\r\n                // let content = document.querySelector('.textbox');\r\n                // new Typewriter(content, {\r\n                //     strings: copyText,\r\n                //     autoStart: true\r\n                // });\r\n            } else {\r\n                let copyText = newLetterData[i].letterContent;\r\n                let enterText = document.querySelector('.textbox');\r\n                enterText.value = copyText;\r\n            };\r\n        };\r\n\r\n        function enterAuthor(i, newLetterData) {\r\n            let copyAuthor = `${newLetterData[i].letterWriter}`;\r\n            let enterAuthor = document.querySelector('.author');\r\n            enterAuthor.value = copyAuthor;\r\n        };\r\n\r\n        function attach(i, checkTyping, newLetterData) {\r\n            function setTranslate(xPos, yPos, el) {\r\n                el.style.transform = \"translate3d(\" + xPos + \"px, \" + yPos + \"px, 0)\";\r\n            };\r\n            let copyStrickerArray = newLetterData[i].sticker;\r\n            for (let i = 0; i < copyStrickerArray.length; i++) {\r\n                let item = document.createElement('div');\r\n                let stage = document.querySelector('.letter_textarea');\r\n                item.setAttribute('id', '_' + copyStrickerArray[i].stickerId);\r\n                item.setAttribute('class', 'item' + copyStrickerArray[i].stickerIcon);\r\n                stage.appendChild(item);\r\n                setTranslate(Math.round(Number(copyStrickerArray[i].stickerX)), Math.round((Number(copyStrickerArray[i].stickerY))), item);\r\n            };\r\n            enterDesc(i, checkTyping, newLetterData);\r\n            enterAuthor(i, newLetterData);\r\n        };\r\n\r\n        // function attachRemove(i) {\r\n        //     let removeText = '';\r\n        //     let enterRemove = document.querySelector('.letter_textarea');\r\n        //     enterRemove.value = removeText;\r\n        //     let copyStrickerArray = letterData[i].sticker;\r\n        //     for (let i = 0; i < copyStrickerArray.length; i++) {\r\n        //       document.getElementById('_' + copyStrickerArray[i].letterId).remove();\r\n        //     };\r\n        //   };\r\n\r\n        async function openLetter(i) {\r\n            setRender(i);\r\n            dispatch({ type: 'CHANGE_ISSHAREBT', data: false });\r\n            let now = new Date().getTime();\r\n            let distance = userData.openDate - now;\r\n            if (distance <= 0) {\r\n                dispatch({ type: 'CHANGE_ISLETTER', data: true });\r\n                setSlickPageNum(i);\r\n                await RequestThisLetterData(i);\r\n            } else {\r\n                dispatch({ type: 'CHANGE_ISNOTYETLETTER', data: true });\r\n            };\r\n        };\r\n\r\n        async function RequestThisLetterData(i) {\r\n            let newEachLetter = null;\r\n            if (letterData[i].userId === '') {\r\n                let eachLetter = {};\r\n                await fetch('https://plater.kr/api/letter/' + String(letterData[i].letterId), {\r\n                    method: 'GET',\r\n                    mode: 'cors',\r\n                    cache: 'no-cache',\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                })\r\n                    .then(res => res.json())\r\n                    .then((data) => {\r\n                        newEachLetter = Object.assign(eachLetter, data);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error);\r\n                        alert('편지 내 스티커 정보를 정상적으로 받아오지 못했습니다. 다시 편지를 열어주세요.');\r\n                    });\r\n                await stickerSum(i, newEachLetter);\r\n            };\r\n            checkLoad(i, letterData);\r\n        };\r\n\r\n        async function stickerSum(i, newEachLetter) {\r\n            const newLetterData = [...letterData];\r\n            const originalCheckTyping = letterData[i].letterReadYn;\r\n            // const finalEachLetter = {};\r\n            await fetch('https://plater.kr/api/sticker/letterid/' + String(letterData[i].letterId), {\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    newEachLetter.sticker = data;\r\n                    // let sticker = Object.assign({}, data);\r\n                    // Object.assign(newEachLetter, { sticker });\r\n                    newLetterData[i] = newEachLetter;\r\n                    dispatch({ type: 'CHANGE_LETTERDATA', data: newLetterData });\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    alert('편지 내 스티커 정보를 정상적으로 받아오지 못했습니다. 다시 편지를 열어주세요.');\r\n                });\r\n            await checkLoad(i, newLetterData, originalCheckTyping);\r\n        };\r\n\r\n        async function checkLoad(i, newLetterData, originalCheckTyping) {\r\n            let src = newLetterData[i].letterPaper.replace(/^url\\(['\"](.+)['\"]\\)/, '$1');\r\n            let image = new Image();\r\n            image.addEventListener('load', async function () {\r\n                dispatch({ type: 'CHANGE_ISIMAGEPRELOAD', data: !isImagePreload });\r\n                let checkTyping = originalCheckTyping;\r\n                // changeIcon(i, newLetterData);\r\n                await changeLetterStyle(i, newLetterData);\r\n                setTimeout(() => {\r\n                    attach(i, checkTyping, newLetterData);\r\n                }, 100);\r\n            });\r\n            image.src = src;\r\n        };\r\n\r\n        let settings = {\r\n            initialSlide: slickPage,\r\n            draggable: false,\r\n            swipe: true,\r\n            arrows: false,\r\n            dots: true,\r\n            infinite: true,\r\n            speed: 1250,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1\r\n        };\r\n\r\n        useEffect(() => {\r\n            const list = [];\r\n            const list2 = [];\r\n            const list3 = [];\r\n            const list4 = [];\r\n\r\n            if (letterData.length === 0) {\r\n                setList(<span><div className='letterEmptyIcon'></div><span>아직 편지가</span><br></br><br></br><span>도착하지 않았어요.</span></span>);\r\n                setList2(<span><div className='letterEmptyIcon'></div><span>아직 편지가</span><br></br><br></br><span>도착하지 않았어요.</span></span>);\r\n                setList3(<span><div className='letterEmptyIcon'></div><span>아직 편지가</span><br></br><br></br><span>도착하지 않았어요.</span></span>);\r\n                setList4(<span><div className='letterEmptyIcon'></div><span>아직 편지가</span><br></br><br></br><span>도착하지 않았어요.</span></span>);\r\n            } else if (letterData.length <= 9) {\r\n                for (let i = 0; i < letterData.length; i++) {\r\n                    let li = letterData[i];\r\n                    list.push(React.Children.toArray(<button key={li.letterId} data-id={li.letterId} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(i) }}><div className={li.letterReadYn ? 'new_letter_icon_open' : 'new_letter_icon'}></div></button>));\r\n                    setList(list);\r\n                    setList2(<span><div className='letterEmptyIcon'></div><span>아직 편지가</span><br></br><br></br><span>도착하지 않았어요.</span></span>);\r\n                    setList3(<span><div className='letterEmptyIcon'></div><span>아직 편지가</span><br></br><br></br><span>도착하지 않았어요.</span></span>);\r\n                    setList4(<span><div className='letterEmptyIcon'></div><span>아직 편지가</span><br></br><br></br><span>도착하지 않았어요.</span></span>);\r\n                };\r\n            } else if (letterData.length <= 18) {\r\n                for (let i = 0; i < 9; i++) {\r\n                    let li = letterData[i];\r\n                    list.push(React.Children.toArray(<button key={li.letterId} data-id={li.letterId} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(i) }}><div className={li.letterReadYn ? 'new_letter_icon_open' : 'new_letter_icon'}></div></button>));\r\n                    setList(list);\r\n                };\r\n                for (let i = 9; i < letterData.length; i++) {\r\n                    let li = letterData[i];\r\n                    list2.push(React.Children.toArray(<button key={li.letterId} data-id={li.letterId} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(i) }}><div className={li.letterReadYn ? 'new_letter_icon_open' : 'new_letter_icon'}></div></button>));\r\n                    setList2(list2);\r\n                    setList3(<span><div className='letterEmptyIcon'></div><span>아직 편지가</span><br></br><br></br><span>도착하지 않았어요.</span></span>);\r\n                    setList4(<span><div className='letterEmptyIcon'></div><span>아직 편지가</span><br></br><br></br><span>도착하지 않았어요.</span></span>);\r\n                };\r\n            } else if (letterData.length <= 27) {\r\n                for (let i = 0; i < 9; i++) {\r\n                    let li = letterData[i];\r\n                    list.push(React.Children.toArray(<button key={li.letterId} data-id={li.letterId} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(i) }}><div className={li.letterReadYn ? 'new_letter_icon_open' : 'new_letter_icon'}></div></button>));\r\n                    setList(list);\r\n                };\r\n                for (let i = 9; i < 18; i++) {\r\n                    let li = letterData[i];\r\n                    list2.push(React.Children.toArray(<button key={li.letterId} data-id={li.letterId} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(i) }}><div className={li.letterReadYn ? 'new_letter_icon_open' : 'new_letter_icon'}></div></button>));\r\n                    setList2(list2);\r\n                };\r\n                for (let i = 18; i < letterData.length; i++) {\r\n                    let li = letterData[i];\r\n                    list3.push(React.Children.toArray(<button key={li.letterId} data-id={li.letterId} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(i) }}><div className={li.letterReadYn ? 'new_letter_icon_open' : 'new_letter_icon'}></div></button>));\r\n                    setList3(list3);\r\n                    setList4(<span><div className='letterEmptyIcon'></div><span>아직 편지가</span><br></br><br></br><span>도착하지 않았어요.</span></span>);\r\n                };\r\n            } else if (letterData.length <= 36) {\r\n                for (let i = 0; i < 9; i++) {\r\n                    let li = letterData[i];\r\n                    list.push(React.Children.toArray(<button key={li.letterId} data-id={li.letterId} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(i) }}><div className={li.letterReadYn ? 'new_letter_icon_open' : 'new_letter_icon'}></div></button>));\r\n                    setList(list);\r\n                };\r\n                for (let i = 9; i < 18; i++) {\r\n                    let li = letterData[i];\r\n                    list2.push(React.Children.toArray(<button key={li.letterId} data-id={li.letterId} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(i) }}><div className={li.letterReadYn ? 'new_letter_icon_open' : 'new_letter_icon'}></div></button>));\r\n                    setList2(list2);\r\n                };\r\n                for (let i = 18; i < 27; i++) {\r\n                    let li = letterData[i];\r\n                    list3.push(React.Children.toArray(<button key={li.letterId} data-id={li.letterId} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(i) }}><div className={li.letterReadYn ? 'new_letter_icon_open' : 'new_letter_icon'}></div></button>));\r\n                    setList3(list3);\r\n                };\r\n                for (let i = 27; i < letterData.length; i++) {\r\n                    let li = letterData[i];\r\n                    list4.push(React.Children.toArray(<button key={li.letterId} data-id={li.letterId} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(i) }}><div className={li.letterReadYn ? 'new_letter_icon_open' : 'new_letter_icon'}></div></button>));\r\n                    setList4(list4);\r\n                };\r\n            } else {\r\n            };\r\n        }, []);\r\n\r\n        function Letter() {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className={isLetter ? 'letter_outContainer' : 'letter_outContainer_fade'}>\r\n                        <div className='letter_textarea_top'>\r\n                            <div className='letter_textarea_author_title'>From.</div>\r\n                            <input type='text' className='author' value={''} readOnly></input>\r\n                            <div className='letter_icon_box'>\r\n                                <div className='letter_block' onClick={() => {\r\n                                    // letterBlcok(render);\r\n                                    dispatch({ type: 'CHANGE_ISLETTERBLOCKCONFIRM', data: true });\r\n                                    dispatch({ type: 'CHANGE_ISIMAGEPRELOAD', data: !isImagePreload });\r\n                                    resetLetterStyle();\r\n                                }}></div>\r\n                                <div className='letter_close' onClick={() => {\r\n                                    // openLetter(render);\r\n                                    // setTimeout(() => {\r\n                                    //     dispatch({ type: 'CHANGE_ISLETTER', data: false });\r\n                                    // }, 500);\r\n                                    dispatch({ type: 'CHANGE_ISLETTER', data: false });\r\n                                    dispatch({ type: 'CHANGE_ISIMAGEPRELOAD', data: !isImagePreload });\r\n                                    resetLetterStyle();\r\n                                }}></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"letter_textarea\">\r\n                            {/* <div style={setStyle} className=\"textbox\" value={''} readOnly>\r\n                            </div> */}\r\n                            <textarea style={setStyle} className=\"textbox\" value={''} readOnly>\r\n                            </textarea>\r\n                            <span className={isImagePreload ? 'preloading' : 'preloading_fade'}>편지를 불러오고 있습니다...</span>\r\n                        </div>\r\n                        <div className='googleAdsense'>\r\n                            <Adsense\r\n                                client={process.env.REACT_APP_GOOGLE_ADSENSE}\r\n                                slot={process.env.REACT_APP_GOOGLE_ADSENSE_SLOT}\r\n                                style={{ display: 'block' }}\r\n                                layout=\"in-article\"\r\n                                format=\"fluid\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        };\r\n\r\n        function NotYetLetter() {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className={isNotYetLetter ? \"isNotYetLetter\" : \"isNotYetLetter_fade\"}>\r\n                        <div className='isNotYetLetter_outContainer'>\r\n                            <p className='isNotYetLetter_title'>지구에서 편지가</p>\r\n                            <p className='isNotYetLetter_title'>오고 있습니다.</p>\r\n                            <p className='isNotYetLetter_p'>남은 시간이 모두 지나면</p>\r\n                            <p className='isNotYetLetter_p'>열어 볼 수 있어요.</p>\r\n                            <div className='isNotYetLetter_button_signOut' onClick={() => {\r\n                                dispatch({ type: 'CHANGE_ISNOTYETLETTER', data: false });\r\n                            }}>확인</div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        };\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <NotYetLetter></NotYetLetter>\r\n                <LetterBlockConfirm></LetterBlockConfirm>\r\n                <Letter></Letter>\r\n                <div className='letterBox_outContainer'>\r\n                    <Slider {...settings}>\r\n                        <div className='letterBox_innerContainer'>\r\n                            <div className='letterBox_innerContainer_div'>{list}\r\n                            </div>\r\n                        </div>\r\n                        <div className='letterBox_innerContainer'>\r\n                            <div className='letterBox_innerContainer_div'>{list2}\r\n                            </div>\r\n                        </div>\r\n                        <div className='letterBox_innerContainer'>\r\n                            <div className='letterBox_innerContainer_div'>{list3}\r\n                            </div>\r\n                        </div>\r\n                        <div className='letterBox_innerContainer'>\r\n                            <div className='letterBox_innerContainer_div'>{list4}\r\n                            </div>\r\n                        </div>\r\n                    </Slider>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ShareBt></ShareBt>\r\n            {isNamePage ? <ShowMemberInf></ShowMemberInf> : <SetSignal></SetSignal>}\r\n            {isRestart ? <Restart></Restart> : <span></span>}\r\n            {isNamePage ? <LetterBox></LetterBox> : <span></span>}\r\n            <CreateNameURL></CreateNameURL>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default InnerPage;","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Menu.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\ShareBt.js",["94"],[],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './ShareBt.css';\r\n\r\nfunction ShareBt() {\r\n    const dispatch = useDispatch();\r\n    const userData = useSelector((state) => state.userData);\r\n    const isShare = useSelector((state) => state.isShare);\r\n    const isShareBt = useSelector((state) => state.isShareBt);\r\n    const userID = useSelector((state) => state.userID);\r\n    const ShareUserID = useSelector((state) => state.ShareUserID);\r\n    const isPopUpCopyLink = useSelector((state) => state.isPopUpCopyLink);\r\n\r\n    useEffect(() => {\r\n        if (userData.openDate !== 0) {\r\n            dispatch({ type: 'CHANGE_ISSHARE', data: !isShare });\r\n        };\r\n    }, [dispatch, userData.openDate]);\r\n\r\n    const shareBasicURL = 'https://angelo-s-library-2.netlify.app/send?userID=' + ShareUserID;\r\n    const basicURL = 'https://angelo-s-library-2.netlify.app/main';\r\n    const image_share = 'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/logo/logo.png?raw=true';\r\n    const title = 'PL@TER - 기다려지는 소식';\r\n\r\n    // function of to share throught the kakaotalk message\r\n    function kakaoShare() {\r\n        const KakaoJS = process.env.REACT_APP_JAVASCRIPT_KEY\r\n        if (!window.Kakao.isInitialized()) {\r\n            window.Kakao.init(KakaoJS);\r\n        };\r\n        window.Kakao.Share.sendDefault({\r\n            objectType: 'feed',\r\n            content: {\r\n                title: 'PL@TER',\r\n                description: 'PL@TER-기다려지는 소식',\r\n                imageUrl: image_share,\r\n                link: {\r\n                    mobileWebUrl: shareBasicURL,\r\n                    webUrl: shareBasicURL,\r\n                },\r\n            },\r\n            buttons: [\r\n                {\r\n                    title: 'PL@TER-편지 보내기',\r\n                    link: {\r\n                        mobileWebUrl: shareBasicURL,\r\n                        webUrl: shareBasicURL,\r\n                    },\r\n                },\r\n                {\r\n                    title: 'PL@TER-놀러가기',\r\n                    link: {\r\n                        mobileWebUrl: basicURL,\r\n                        webUrl: basicURL,\r\n                    },\r\n                },\r\n            ],\r\n            installTalk: true,\r\n        });\r\n    };\r\n\r\n    // function of to share throught the twitter\r\n    function shareTwitter() {\r\n        let url = encodeURIComponent(shareBasicURL);\r\n        window.open(`https://twitter.com/intent/tweet?url=${url}&text=${title}`, '소소한 프로젝트', 'width=400, height=400');\r\n    };\r\n\r\n    // function of to share throught the facebook\r\n    function shareFacebook() {\r\n        window.open('https://www.facebook.com/sharer/sharer.php?u='\r\n            + encodeURIComponent(shareBasicURL)\r\n            + '&t=' + encodeURIComponent(title),\r\n            'facebooksharedialog',\r\n            'menubar=no, toolbar=no, resizable=yes, scrollbars=yes, height=400, width=400');\r\n    };\r\n\r\n    function RequestShareUserID(userID) {\r\n        fetch('https://plater.kr/api/member/userid/' + userID, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then((userData) => {\r\n                dispatch({ type: 'CHANGE_SHAREUSERID', data: String(userData) });\r\n            })\r\n            .catch((userDate_error) => {\r\n                console.log(userDate_error);\r\n                alert('공유 가능한 userID를 정상적으로 받아오지 못했습니다. 공유 버튼을 다시 눌러주세요.');\r\n            });\r\n    };\r\n\r\n    function urlCopy() {\r\n        let Dummy_Tag = document.createElement(\"input\");\r\n        let Current_URL = 'https://angelo-s-library-2.netlify.app/send?userID=' + ShareUserID;\r\n        document.body.appendChild(Dummy_Tag);\r\n        Dummy_Tag.value = Current_URL;\r\n        Dummy_Tag.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(Dummy_Tag);\r\n        dispatch({ type: 'CHANGE_ISPOPUPCOPYLINK', data: !isPopUpCopyLink });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={isShare ? 'shareButton_outContainer_active' : 'shareButton_outContainer'} onClick={() => {\r\n                RequestShareUserID(userID);\r\n                dispatch({ type: 'CHANGE_ISSHAREBT', data: !isShareBt });\r\n            }}>\r\n                <img className='shareButton_share' alt='share' src='https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/icon/share.png?raw=true'></img>\r\n            </div>\r\n            <div className='shareButton_innerContainer'>\r\n                <img className={isShareBt ? 'shareButton_share_btn_url_active' : 'shareButton_share_btn'} alt='url' src='https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/icon/copy_link.png?raw=true' onClick={urlCopy}></img>\r\n                <img className={isShareBt ? 'shareButton_share_btn_kakao_active' : 'shareButton_share_btn'} alt='kakao' src='https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/icon/kakao.png?raw=true' onClick={kakaoShare}></img>\r\n                <img className={isShareBt ? 'shareButton_share_btn_facebook_active' : 'shareButton_share_btn'} alt='facebook' src='https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/icon/facebook.png?raw=true' onClick={shareFacebook}></img>\r\n                <img className={isShareBt ? 'shareButton_share_btn_twitter_active' : 'shareButton_share_btn'} alt='twitter' src='https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/icon/twitter.png?raw=true' onClick={shareTwitter}></img>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ShareBt;","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Restart.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Refresh.js",["95"],[],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './Refresh.css';\r\n\r\nfunction Refresh() {\r\n    const dispatch = useDispatch();\r\n    const navigater = useNavigate();\r\n    // const userID = useSelector((state) => state.userID);\r\n    const [refresh, setRefresh] = useState(false);\r\n\r\n    function RequestLetterDataArray() {\r\n        fetch('https://plater.kr/api/letter/userid/pEMui3Dz3Pj1eCaIqVj8zgMSJSM3DMSJSM3D', {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                dispatch({ type: 'CHANGE_LETTERDATA', data: data });\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n                alert('정상적으로 사용자 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={refresh ? \"refresh_active\" : \"refresh\"} onClick={() => {\r\n                setRefresh(!refresh);\r\n                setTimeout(() => {\r\n                    setRefresh(!refresh);\r\n                    dispatch({ type: 'CHANGE_LETTERDATA', data: [] });\r\n                    RequestLetterDataArray();\r\n                }, 2000);\r\n            }}></div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Refresh;",{"ruleId":"96","severity":1,"message":"97","line":52,"column":6,"nodeType":"98","endLine":52,"endColumn":25,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":35,"column":6,"nodeType":"98","endLine":35,"endColumn":16,"suggestions":"101"},{"ruleId":"96","severity":1,"message":"102","line":142,"column":8,"nodeType":"98","endLine":142,"endColumn":10,"suggestions":"103"},{"ruleId":"96","severity":1,"message":"104","line":529,"column":12,"nodeType":"98","endLine":529,"endColumn":14,"suggestions":"105"},{"ruleId":"96","severity":1,"message":"106","line":700,"column":8,"nodeType":"98","endLine":700,"endColumn":43,"suggestions":"107"},{"ruleId":"96","severity":1,"message":"108","line":358,"column":12,"nodeType":"98","endLine":358,"endColumn":14,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":484,"column":25,"nodeType":"112","messageId":"113","endLine":484,"endColumn":39},{"ruleId":"96","severity":1,"message":"114","line":728,"column":12,"nodeType":"98","endLine":728,"endColumn":14,"suggestions":"115"},{"ruleId":"96","severity":1,"message":"116","line":18,"column":8,"nodeType":"98","endLine":18,"endColumn":37,"suggestions":"117"},{"ruleId":"110","severity":1,"message":"118","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":21},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'isFirstInfo'. Either include them or remove the dependency array.","ArrayExpression",["119"],"React Hook useEffect has a missing dependency: 'isStory'. Either include it or remove the dependency array.",["120"],"React Hook useEffect has missing dependencies: 'RequestUserData', 'dispatch', 'name', 'nameErro', and 'navigater'. Either include them or remove the dependency array.",["121"],"React Hook useEffect has a missing dependency: 'checkLetterData'. Either include it or remove the dependency array.",["122"],"React Hook useEffect has a missing dependency: 'firstCheck'. Either include it or remove the dependency array.",["123"],"React Hook useEffect has a missing dependency: 'setDDay'. Either include it or remove the dependency array.",["124"],"no-unused-vars","'arraySplitData' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'openLetter'. Either include it or remove the dependency array.",["125"],"React Hook useEffect has a missing dependency: 'isShare'. Either include it or remove the dependency array.",["126"],"'useSelector' is defined but never used.",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [dispatch, isFirstInfo, navigater, userID]",{"range":"143","text":"144"},"Update the dependencies array to be: [dispatch, isStory]",{"range":"145","text":"146"},"Update the dependencies array to be: [RequestUserData, dispatch, name, nameErro, navigater]",{"range":"147","text":"148"},"Update the dependencies array to be: [checkLetterData]",{"range":"149","text":"150"},"Update the dependencies array to be: [firstCheck, openUserOpenDate, userLetterCount]",{"range":"151","text":"152"},"Update the dependencies array to be: [setDDay]",{"range":"153","text":"154"},"Update the dependencies array to be: [openLetter]",{"range":"155","text":"156"},"Update the dependencies array to be: [dispatch, isShare, userData.openDate]",{"range":"157","text":"158"},[1869,1888],"[dispatch, isFirstInfo, navigater, userID]",[1058,1068],"[dispatch, isStory]",[5720,5722],"[RequestUserData, dispatch, name, nameErro, navigater]",[25430,25432],"[checkLetterData]",[32639,32674],"[firstCheck, openUserOpenDate, userLetterCount]",[18680,18682],"[setDDay]",[38155,38157],"[openLetter]",[725,754],"[dispatch, isShare, userData.openDate]"]