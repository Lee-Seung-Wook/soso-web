[{"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\index.js":"1","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\App.js":"2","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\reportWebVitals.js":"3","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\store\\store.js":"4","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Main.js":"5","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Login.js":"6","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Redirect.js":"7","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Redirect2.js":"8","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Send.js":"9","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\ModalStory.js":"10","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\InnerPage.js":"11","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Menu.js":"12","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\ShareBt.js":"13","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Restart.js":"14","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Refresh.js":"15"},{"size":768,"mtime":1680264173141,"results":"16","hashOfConfig":"17"},{"size":2855,"mtime":1681564839417,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1669628232649,"results":"19","hashOfConfig":"17"},{"size":8016,"mtime":1680264230725,"results":"20","hashOfConfig":"17"},{"size":2988,"mtime":1681005802497,"results":"21","hashOfConfig":"17"},{"size":51926,"mtime":1681005787315,"results":"22","hashOfConfig":"17"},{"size":6522,"mtime":1681563965680,"results":"23","hashOfConfig":"17"},{"size":1683,"mtime":1681006159554,"results":"24","hashOfConfig":"17"},{"size":96565,"mtime":1681615734711,"results":"25","hashOfConfig":"17"},{"size":4786,"mtime":1681005822394,"results":"26","hashOfConfig":"17"},{"size":46191,"mtime":1681616100797,"results":"27","hashOfConfig":"17"},{"size":71221,"mtime":1681005813473,"results":"28","hashOfConfig":"17"},{"size":5919,"mtime":1681006407375,"results":"29","hashOfConfig":"17"},{"size":1019,"mtime":1681006321867,"results":"30","hashOfConfig":"17"},{"size":2111,"mtime":1681615820940,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1y7gww7",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\index.js",[],[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\App.js",["82"],[],"import React, { useEffect } from 'react';\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport './App.css';\nimport Main from './components/Main';\nimport Login from './components/Login';\nimport Redirect from './components/Redirect';\nimport Redirect2 from './components/Redirect2';\nimport Send from './components/Send';\n\n// set PORT=33381 && => package.json Script for Start\n\nfunction App() {\n  const navigater = useNavigate();\n  const dispatch = useDispatch();\n  const userID = useSelector((state) => state.userID);\n  const isFirstInfo = useSelector((state) => state.isFirstInfo);\n\n  // 'vh' 자동 조정을 위한 기능(1)\n  let vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n  \n  function FirstInfo() {\n    return (\n      <React.Fragment>\n        <div className={isFirstInfo ? \"isFirstIngo_wrap\" : \"isFirstIngo_fade\"}>\n          <div className='isFirstIngo_outContainer'>\n            <p className='isFirstIngo_title'>모바일로 접속해 주세요.</p>\n            <p className='isFirstIngo_p'>PL@TER는 모바일에 최적화 되어 있어요.</p>\n            <p className='isFirstIngo_p'>PC 등으로 접속 시 오류가 발생할 수 있어요.</p>\n            <div className='isFirstIngo_button_confirm' onClick={() => { dispatch({ type: 'CHANGE_ISFIRSTINFO', data: !isFirstInfo }); }}>확인</div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  useEffect(() => {\n    // 화면 높이 자동 조절 기능(2)\n    window.addEventListener(\"resize\", () => {\n      let vh = window.innerHeight * 0.01;\n      document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n    });\n    // 사용자 기기 확인 기능\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n    } else {\n      dispatch({ type: 'CHANGE_ISFIRSTINFO', data: !isFirstInfo });\n    };\n    if (userID === null) {\n      navigater('/login');\n    } else {\n    };\n  }, [navigater, userID])\n\n  return (\n    <React.Fragment>\n      <div className='all_background_img'></div>\n      <section className='section_shootingStar'>\n        <span className='shootingStar'></span>\n        <span className='shootingStar'></span>\n        <span className='shootingStar'></span>\n        <span className='shootingStar'></span>\n      </section>\n      <FirstInfo></FirstInfo>\n      <Routes>\n        <Route path=\"/\" element={<Main />}></Route>\n        <Route path=\"/*\" element={<Main />}></Route>\n        <Route path=\"/login\" element={<Login />}></Route>\n        <Route path=\"/redirect\" element={<Redirect />}></Route>\n        <Route path=\"/redirect2\" element={<Redirect2 />}></Route>\n        <Route path=\"/send\" element={<Send />}></Route>\n      </Routes>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\reportWebVitals.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\store\\store.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Main.js",["83"],[],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport './Main.css';\r\nimport ModalStory from './ModalStory';\r\nimport Menu from './Menu';\r\nimport InnerPage from './InnerPage';\r\n\r\nfunction Main() {\r\n  const [render1, setRender1] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const isStory = useSelector((state) => state.isStory);\r\n\r\n  // (랜더링 직후) 사용자 쿠키 확인 기능 + 서버로 log 정보 보내는 기능\r\n  useEffect(() => {\r\n    const cookieData = document.cookie.split(';');\r\n    for (let i = 0; i < cookieData.length; i++) {\r\n      if (cookieData[i].indexOf('pl@ter') > -1) {\r\n        dispatch({ type: 'CHANGE_ISSTORY', data: !isStory });\r\n      } else break;\r\n    };\r\n    fetch(`${process.env.REACT_APP_REGISTER_LOG}main`, {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(() => {\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }, [dispatch]);\r\n\r\n  // 쿠키 삭제 기능\r\n  function delCookie() {\r\n    alert('사용자의 쿠키 중 pl@ter를 삭제했습니다.');\r\n    const expires = new Date();\r\n    expires.setDate(expires.getDate() - 1);\r\n    const expiresDate = expires.toUTCString();\r\n    let setCookie = '';\r\n    setCookie += 'pl@ter=190301;';\r\n    setCookie += 'Expires=' + expiresDate;\r\n    document.cookie = setCookie;\r\n  };\r\n\r\n  // 편지 읽을 수 있도록 시간 조정 기능\r\n  function settingTime() {\r\n    alert('사용자의 openDate를 11일 전으로 설정했습니다.');\r\n    const now = new Date();\r\n    now.setDate(now.getDate() - 11);\r\n    dispatch({ type: 'CHANGE_OPENDATE', data: Number(now.getTime()) });\r\n    setRender1(render1 + 1);\r\n  };\r\n\r\n  return (\r\n    <div className='main_background'>\r\n      <ModalStory></ModalStory>\r\n      <Menu></Menu>\r\n      <InnerPage></InnerPage>\r\n      <NavLink end to=\"/send?userID=fpLNLOhMU4cElWo6FpMSJSM2BLMSJSM2FQMSJSM3DMSJSM3D\" onClick={() => {\r\n      }}><img style={{ width: \"10%\", position: \"absolute\", top: \"50%\", left: \"85%\" }} alt='login' src='https://cdn-icons-png.flaticon.com/512/9072/9072392.png'></img></NavLink>\r\n      <img onClick={settingTime} style={{ width: \"10%\", position: \"absolute\", top: \"60%\", left: \"85%\" }} alt='cookie' src='https://cdn-icons-png.flaticon.com/512/896/896266.png'></img>\r\n      <img onClick={delCookie} style={{ width: \"10%\", position: \"absolute\", top: \"80%\", left: \"85%\" }} alt='cookie' src='https://cdn-icons-png.flaticon.com/512/1330/1330387.png'></img>\r\n      <NavLink end to=\"/login\" onClick={() => {\r\n        dispatch({ type: 'CHANGE_USERID', data: null });\r\n      }}><img style={{ width: \"10%\", position: \"absolute\", top: \"70%\", left: \"85%\" }} alt='login' src='https://cdn-icons-png.flaticon.com/512/295/295128.png'></img></NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Login.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Redirect.js",["84"],[],"import React, { useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport './Redirect.css';\r\n\r\nfunction Redirect() {\r\n    const navigater = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const urlParams = new URL(window.location.href).searchParams;\r\n    const name = urlParams.get('code');\r\n    const urlParamsErro = new URL(window.location.href).searchParams;\r\n    const nameErro = urlParamsErro.get('error_description');\r\n\r\n    // console.log 삭제 필요.\r\n\r\n    // 받은 편지 배열 요청 기능\r\n    function RequestLetterArray(userId) {\r\n        fetch(`${process.env.REACT_APP_LETTER_ARRAY}${userId}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error();\r\n                };\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                if (data.length > 37) {\r\n                    for (let i = 0; data.length - 36; i++) {\r\n                        data.pop();\r\n                    };\r\n                    dispatch({ type: 'CHANGE_LETTERDATA', data: data });\r\n                } else {\r\n                    dispatch({ type: 'CHANGE_LETTERDATA', data: data });\r\n                };\r\n            })\r\n            .catch((error) => {\r\n                alert('정상적으로 사용자 편지 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            });\r\n    };\r\n\r\n    // 사용자 정보 요청 기능\r\n    function RequestUserData(userId) {\r\n        fetch(`${process.env.REACT_APP_USER_DATA}${userId}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error();\r\n                };\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                dispatch({ type: 'CHANGE_USERNICKNAME', data: String(data.userNickName) });\r\n                dispatch({ type: 'CHANGE_OPENDATE', data: Number(data.userOpenDate) });\r\n                RequestLetterArray(userId);\r\n            })\r\n            .catch((error) => {\r\n                alert('정상적으로 사용자 데이터를 응답 받지 못했습니다. 다시 로그인 해주세요.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            });\r\n    };\r\n\r\n    // (랜더링 직후) 사용자 로그인 기능\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (nameErro === 'User denied access') {\r\n                alert('로그인에 실패하였습니다.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            };\r\n            const code = { code: name };\r\n            const queryStringBody = Object.keys(code)\r\n                .map(k => encodeURIComponent(k) + \"=\" + encodeURI(code[k]))\r\n                .join(\"&\");\r\n            fetch(`${process.env.REACT_APP_KAKAO_LOGIN}`, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n                },\r\n                body: queryStringBody\r\n            })\r\n                .then(res => {\r\n                    if (!res.ok) {\r\n                        throw new Error();\r\n                    };\r\n                    return res.json();\r\n                })\r\n                .then((data) => {\r\n                    fetch(`${process.env.REACT_APP_USERID}`, {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        cache: 'no-cache',\r\n                        credentials: 'same-origin',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify(data)\r\n                    })\r\n                        .then(res => {\r\n                            if (!res.ok) {\r\n                                throw new Error();\r\n                            };\r\n                            return res.json();\r\n                        })\r\n                        .then((data) => {\r\n                            // \r\n                            console.log(data);\r\n                            // \r\n                            dispatch({ type: 'CHANGE_USERID', data: data });\r\n                            RequestUserData(data);\r\n                            navigater('/main');\r\n                        })\r\n                        .catch((error) => {\r\n                            alert('서버가 불안정 하여 사용자 아이디를 받아오지 못했습니다.');\r\n                            dispatch({ type: 'CHANGE_USERID', data: null });\r\n                            navigater('/login');\r\n                        })\r\n                })\r\n                .catch((error) => {\r\n                    alert('서버가 불안정 하여 로그인에 실패했습니다.');\r\n                    dispatch({ type: 'CHANGE_USERID', data: null });\r\n                    navigater('/login');\r\n                });\r\n        }, 500);\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='redirect_outContainer'>\r\n                <section className='section_shootingStar'>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                    <span className='shootingStar'></span>\r\n                </section>\r\n                <div className='redirect_gif'></div>\r\n                <h3 className='redirect_h3'>로그인 중입니다...</h3>\r\n                <h4 className='redirect_h4'>[리빙포인트] 달에는 토끼가 떡을 만들고 있다.</h4>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Redirect;","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Redirect2.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Send.js",["85","86"],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\ModalStory.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\InnerPage.js",["87","88","89"],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Menu.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\ShareBt.js",["90"],[],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './ShareBt.css';\r\n\r\nfunction ShareBt() {\r\n    const dispatch = useDispatch();\r\n    const userData = useSelector((state) => state.userData);\r\n    const isShare = useSelector((state) => state.isShare);\r\n    const isShareBt = useSelector((state) => state.isShareBt);\r\n    const userID = useSelector((state) => state.userID);\r\n    const ShareUserID = useSelector((state) => state.ShareUserID);\r\n    const isPopUpCopyLink = useSelector((state) => state.isPopUpCopyLink);\r\n\r\n    useEffect(() => {\r\n        if (userData.openDate !== 0) {\r\n            dispatch({ type: 'CHANGE_ISSHARE', data: !isShare });\r\n        };\r\n    }, [dispatch, userData.openDate]);\r\n\r\n    const shareBasicURL = `${process.env.REACT_APP_BASIC_URL2}userID=${ShareUserID}`;\r\n    const basicURL = `${process.env.REACT_APP_BASIC_URL}`;\r\n    const image_share = 'https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/logo/logo.png?raw=true';\r\n    const title = 'PL@TER - 기다려지는 소식';\r\n\r\n    // 카카오톡 공유 기능\r\n    function kakaoShare() {\r\n        const KakaoJS = process.env.REACT_APP_JAVASCRIPT_KEY\r\n        if (!window.Kakao.isInitialized()) {\r\n            window.Kakao.init(KakaoJS);\r\n        };\r\n        window.Kakao.Share.sendDefault({\r\n            objectType: 'feed',\r\n            content: {\r\n                title: 'PL@TER',\r\n                description: 'PL@TER-기다려지는 소식',\r\n                imageUrl: image_share,\r\n                link: {\r\n                    mobileWebUrl: shareBasicURL,\r\n                    webUrl: shareBasicURL,\r\n                },\r\n            },\r\n            buttons: [\r\n                {\r\n                    title: '편지 보내기',\r\n                    link: {\r\n                        mobileWebUrl: shareBasicURL,\r\n                        webUrl: shareBasicURL,\r\n                    },\r\n                },\r\n                {\r\n                    title: '행성 만들기',\r\n                    link: {\r\n                        mobileWebUrl: basicURL,\r\n                        webUrl: basicURL,\r\n                    },\r\n                },\r\n            ],\r\n            installTalk: true,\r\n        });\r\n    };\r\n\r\n    // 트위터 공유 기능\r\n    function shareTwitter() {\r\n        let url = encodeURIComponent(shareBasicURL);\r\n        window.open(`https://twitter.com/intent/tweet?url=${url}&text=${title}`, '소소한 프로젝트', 'width=400, height=400');\r\n    };\r\n\r\n    // 페이스북 공유 기능\r\n    function shareFacebook() {\r\n        window.open('https://www.facebook.com/sharer/sharer.php?u='\r\n            + encodeURIComponent(shareBasicURL)\r\n            + '&t=' + encodeURIComponent(title),\r\n            'facebooksharedialog',\r\n            'menubar=no, toolbar=no, resizable=yes, scrollbars=yes, height=400, width=400');\r\n    };\r\n\r\n    // 공유 가능 사용자 아이디 발급 기능\r\n    function RequestShareUserID(userID) {\r\n        fetch(`${process.env.REACT_APP_SHARE_USERID}${userID}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error();\r\n                };\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                dispatch({ type: 'CHANGE_SHAREUSERID', data: String(data) });\r\n            })\r\n            .catch((error) => {\r\n                alert('공유 가능한 사용자 주소를 정상적으로 받아오지 못했습니다. 공유 버튼을 다시 눌러주세요.');\r\n            });\r\n    };\r\n\r\n    // 공유 URL 복사 기능\r\n    function urlCopy() {\r\n        let Dummy_Tag = document.createElement(\"input\");\r\n        let Current_URL = `${process.env.REACT_APP_BASIC_URL2}userID=${ShareUserID}`;\r\n        document.body.appendChild(Dummy_Tag);\r\n        Dummy_Tag.value = Current_URL;\r\n        Dummy_Tag.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(Dummy_Tag);\r\n        dispatch({ type: 'CHANGE_ISPOPUPCOPYLINK', data: !isPopUpCopyLink });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={isShare ? 'shareButton_outContainer_active' : 'shareButton_outContainer'} onClick={() => {\r\n                RequestShareUserID(userID);\r\n                dispatch({ type: 'CHANGE_ISSHAREBT', data: !isShareBt });\r\n            }}>\r\n                <img className='shareButton_share' alt='share' src='https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/icon/share.png?raw=true'></img>\r\n            </div>\r\n            <div className='shareButton_innerContainer'>\r\n                <img className={isShareBt ? 'shareButton_share_btn_url_active' : 'shareButton_share_btn'} alt='url' src='https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/icon/copy_link.png?raw=true' onClick={urlCopy}></img>\r\n                <img className={isShareBt ? 'shareButton_share_btn_kakao_active' : 'shareButton_share_btn'} alt='kakao' src='https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/icon/kakao.png?raw=true' onClick={kakaoShare}></img>\r\n                <img className={isShareBt ? 'shareButton_share_btn_facebook_active' : 'shareButton_share_btn'} alt='facebook' src='https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/icon/facebook.png?raw=true' onClick={shareFacebook}></img>\r\n                <img className={isShareBt ? 'shareButton_share_btn_twitter_active' : 'shareButton_share_btn'} alt='twitter' src='https://github.com/Lee-Seung-Wook/Angelo-s_Library/blob/main/lib/icon/twitter.png?raw=true' onClick={shareTwitter}></img>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ShareBt;","C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Restart.js",[],[],"C:\\Users\\blue_\\OneDrive\\바탕 화면\\GitHub\\soso-web\\main\\src\\components\\Refresh.js",[],[],{"ruleId":"91","severity":1,"message":"92","line":53,"column":6,"nodeType":"93","endLine":53,"endColumn":25,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":35,"column":6,"nodeType":"93","endLine":35,"endColumn":16,"suggestions":"96"},{"ruleId":"91","severity":1,"message":"97","line":144,"column":8,"nodeType":"93","endLine":144,"endColumn":10,"suggestions":"98"},{"ruleId":"91","severity":1,"message":"99","line":579,"column":12,"nodeType":"93","endLine":579,"endColumn":14,"suggestions":"100"},{"ruleId":"91","severity":1,"message":"101","line":742,"column":8,"nodeType":"93","endLine":742,"endColumn":43,"suggestions":"102"},{"ruleId":"91","severity":1,"message":"103","line":398,"column":12,"nodeType":"93","endLine":398,"endColumn":14,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":529,"column":25,"nodeType":"107","messageId":"108","endLine":529,"endColumn":39},{"ruleId":"91","severity":1,"message":"109","line":776,"column":12,"nodeType":"93","endLine":776,"endColumn":14,"suggestions":"110"},{"ruleId":"91","severity":1,"message":"111","line":18,"column":8,"nodeType":"93","endLine":18,"endColumn":37,"suggestions":"112"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'isFirstInfo'. Either include them or remove the dependency array.","ArrayExpression",["113"],"React Hook useEffect has a missing dependency: 'isStory'. Either include it or remove the dependency array.",["114"],"React Hook useEffect has missing dependencies: 'RequestUserData', 'dispatch', 'name', 'nameErro', and 'navigater'. Either include them or remove the dependency array.",["115"],"React Hook useEffect has a missing dependency: 'checkLetterData'. Either include it or remove the dependency array.",["116"],"React Hook useEffect has a missing dependency: 'firstCheck'. Either include it or remove the dependency array.",["117"],"React Hook useEffect has a missing dependency: 'setDDay'. Either include it or remove the dependency array.",["118"],"no-unused-vars","'arraySplitData' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'openLetter'. Either include it or remove the dependency array.",["119"],"React Hook useEffect has a missing dependency: 'isShare'. Either include it or remove the dependency array.",["120"],{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [dispatch, isFirstInfo, navigater, userID]",{"range":"137","text":"138"},"Update the dependencies array to be: [dispatch, isStory]",{"range":"139","text":"140"},"Update the dependencies array to be: [RequestUserData, dispatch, name, nameErro, navigater]",{"range":"141","text":"142"},"Update the dependencies array to be: [checkLetterData]",{"range":"143","text":"144"},"Update the dependencies array to be: [firstCheck, openUserOpenDate, userLetterCount]",{"range":"145","text":"146"},"Update the dependencies array to be: [setDDay]",{"range":"147","text":"148"},"Update the dependencies array to be: [openLetter]",{"range":"149","text":"150"},"Update the dependencies array to be: [dispatch, isShare, userData.openDate]",{"range":"151","text":"152"},[1900,1919],"[dispatch, isFirstInfo, navigater, userID]",[1075,1085],"[dispatch, isStory]",[5463,5465],"[RequestUserData, dispatch, name, nameErro, navigater]",[27883,27885],"[checkLetterData]",[34507,34542],"[firstCheck, openUserOpenDate, userLetterCount]",[19780,19782],"[setDDay]",[39189,39191],"[openLetter]",[725,754],"[dispatch, isShare, userData.openDate]"]