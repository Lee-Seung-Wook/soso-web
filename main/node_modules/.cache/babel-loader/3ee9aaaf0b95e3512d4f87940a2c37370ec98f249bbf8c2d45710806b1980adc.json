{"ast":null,"code":"import React,{useEffect}from'react';import{Routes,Route,useNavigate}from\"react-router-dom\";import{useSelector}from'react-redux';import'./App.css';import Main from'./components/Main';import Login from'./components/Login';import Redirect from'./components/Redirect';import Redirect2 from'./components/Redirect2';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var navigater=useNavigate();var userID=useSelector(function(state){return state.userID;});var userData=useSelector(function(state){return state.userData;});useEffect(function(){// Check user device.\nif(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)){}else{alert(\"모바일 환경에 최적화 되어 있습니다.\");};if(userID===null){navigater('/login');}else{};},[navigater,userID]);return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Main,{})}),/*#__PURE__*/_jsx(Route,{path:\"/*\",element:/*#__PURE__*/_jsx(Main,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"/redirect\",element:/*#__PURE__*/_jsx(Redirect,{})}),/*#__PURE__*/_jsx(Route,{path:\"/redirect2\",element:/*#__PURE__*/_jsx(Redirect2,{})})]})});}export default App;","map":{"version":3,"names":["React","useEffect","Routes","Route","useNavigate","useSelector","Main","Login","Redirect","Redirect2","App","navigater","userID","state","userData","test","navigator","userAgent","alert"],"sources":["C:/Users/blue_/Desktop/GitHub/soso-web/WebContent/web/main/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport './App.css';\nimport Main from './components/Main';\nimport Login from './components/Login';\nimport Redirect from './components/Redirect';\nimport Redirect2 from './components/Redirect2';\n\nfunction App() {\n\n  const navigater = useNavigate();\n  const userID = useSelector((state) => state.userID);\n  const userData = useSelector((state) => state.userData);\n\n  useEffect(() => {\n    // Check user device.\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n    } else {\n      alert(\"모바일 환경에 최적화 되어 있습니다.\");\n    };\n    if (userID === null) {\n      navigater('/login');\n    } else {\n    };\n  }, [navigater, userID])\n\n  return (\n    <React.Fragment>\n      <Routes>\n        <Route path=\"/\" element={<Main />}></Route>\n        <Route path=\"/*\" element={<Main />}></Route>\n        <Route path=\"/login\" element={<Login />}></Route>\n        <Route path=\"/redirect\" element={<Redirect />}></Route>\n        <Route path=\"/redirect2\" element={<Redirect2 />}></Route>\n      </Routes>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,MAAM,CAAEC,KAAK,CAAEC,WAAW,KAAQ,kBAAkB,CAC7D,OAASC,WAAW,KAAQ,aAAa,CACzC,MAAO,WAAW,CAClB,MAAOC,KAAI,KAAM,mBAAmB,CACpC,MAAOC,MAAK,KAAM,oBAAoB,CACtC,MAAOC,SAAQ,KAAM,uBAAuB,CAC5C,MAAOC,UAAS,KAAM,wBAAwB,CAAC,wFAE/C,QAASC,IAAG,EAAG,CAEb,GAAMC,UAAS,CAAGP,WAAW,EAAE,CAC/B,GAAMQ,OAAM,CAAGP,WAAW,CAAC,SAACQ,KAAK,QAAKA,MAAK,CAACD,MAAM,GAAC,CACnD,GAAME,SAAQ,CAAGT,WAAW,CAAC,SAACQ,KAAK,QAAKA,MAAK,CAACC,QAAQ,GAAC,CAEvDb,SAAS,CAAC,UAAM,CACd;AACA,GAAI,gEAAgE,CAACc,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,CAAE,CAChG,CAAC,IAAM,CACLC,KAAK,CAAC,sBAAsB,CAAC,CAC/B,CAAC,CACD,GAAIN,MAAM,GAAK,IAAI,CAAE,CACnBD,SAAS,CAAC,QAAQ,CAAC,CACrB,CAAC,IAAM,CACP,CAAC,CACH,CAAC,CAAE,CAACA,SAAS,CAAEC,MAAM,CAAC,CAAC,CAEvB,mBACE,KAAC,KAAK,CAAC,QAAQ,wBACb,MAAC,MAAM,yBACL,KAAC,KAAK,EAAC,IAAI,CAAC,GAAG,CAAC,OAAO,cAAE,KAAC,IAAI,IAAI,EAAS,cAC3C,KAAC,KAAK,EAAC,IAAI,CAAC,IAAI,CAAC,OAAO,cAAE,KAAC,IAAI,IAAI,EAAS,cAC5C,KAAC,KAAK,EAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,cAAE,KAAC,KAAK,IAAI,EAAS,cACjD,KAAC,KAAK,EAAC,IAAI,CAAC,WAAW,CAAC,OAAO,cAAE,KAAC,QAAQ,IAAI,EAAS,cACvD,KAAC,KAAK,EAAC,IAAI,CAAC,YAAY,CAAC,OAAO,cAAE,KAAC,SAAS,IAAI,EAAS,GAClD,EACM,CAErB,CAEA,cAAeF,IAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}