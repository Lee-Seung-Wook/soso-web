{"ast":null,"code":"import React,{useEffect}from'react';import{useNavigate}from\"react-router-dom\";import{useDispatch}from'react-redux';import'./Redirect.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Redirect(){var navigater=useNavigate();var dispatch=useDispatch();var urlParams=new URL(window.location.href).searchParams;var name=urlParams.get('code');var urlParamsErro=new URL(window.location.href).searchParams;var nameErro=urlParamsErro.get('error_description');// function requestToken() {\n//     const body = {\n//         grant_type: \"authorization_code\",\n//         client_id: process.env.REACT_APP_REST_API_KEY,\n//         redirect_uri: \"\",\n//         code: name\n//     };\n//     const queryStringBody = Object.keys(body)\n//         .map(k => encodeURIComponent(k) + \"=\" + encodeURI(body[k]))\n//         .join(\"&\");\n//     fetch(\"https://kauth.kakao.com/oauth/token\", {\n//         method: \"POST\",\n//         headers: {\n//             'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n//         },\n//         body: queryStringBody\n//     })\n//         .then(res => res.json())\n//         .then((data) => {\n//             console.log(data);\n//             console.log(data.access_token);\n//             usertoken = data.access_token;\n//         });\n// };\nfunction RequestUserData(userId){fetch('https://plater.kr/api/memberbyuserid/',{method:'POST',mode:'cors',cache:'no-cache',credentials:'same-origin',headers:{'Content-Type':'application/json'},body:JSON.stringify(userId)}).then(function(res){return res.json();}).then(function(userData){console.log(userData);}).catch(function(userDate_error){console.log(userDate_error);});};useEffect(function(){setTimeout(function(){if(nameErro==='User denied access'){alert('로그인에 실패하였습니다.');dispatch({type:'CHANGE_USERID',data:null});navigater('/login');};var code={code:name};console.log(code);var queryStringBody=Object.keys(code).map(function(k){return encodeURIComponent(k)+\"=\"+encodeURI(code[k]);}).join(\"&\");fetch('https://plater.kr/api/kakao',{method:'POST',mode:'cors',cache:'no-cache',credentials:'same-origin',headers:{'content-type':'application/x-www-form-urlencoded;charset=utf-8'},body:queryStringBody}).then(function(res){return res.json();}).then(function(data){console.log('암호화된 ID: '+data);fetch('https://plater.kr/api/member',{method:'POST',mode:'cors',cache:'no-cache',credentials:'same-origin',headers:{'Content-Type':'application/json'// 'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n},body:JSON.stringify(data)}).then(function(plus_res){return plus_res.json();}).then(function(plus_data){console.log('비암호화된 ID: '+plus_data);dispatch({type:'CHANGE_USERID',data:plus_data});RequestUserData(plus_data);navigater('/main');}).catch(function(plus_error){console.log('비암호화된 ID 오류: '+plus_error);alert('서버가 불안정 하여 비암호화된 사용자 ID를 받아오지 못했습니다.');dispatch({type:'CHANGE_USERID',data:null});navigater('/login');});}).catch(function(error){console.log('암호화된 ID 오류: '+error);alert('서버가 불안정 하여 로그인에 실패했습니다.');dispatch({type:'CHANGE_USERID',data:null});navigater('/login');});},2000);},[]);// }, [name, nameErro, navigater, dispatch]);\nreturn/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"redirect_outContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"redirect_gif\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"redirect_h3\",children:\"\\uB85C\\uADF8\\uC778 \\uC911\\uC785\\uB2C8\\uB2E4...\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"redirect_h4\",children:\"[\\uB9AC\\uBE59\\uD3EC\\uC778\\uD2B8] \\uB2EC\\uC5D0\\uB294 \\uD1A0\\uB07C\\uAC00 \\uB5A1\\uC744 \\uB9CC\\uB4E4\\uACE0 \\uC788\\uB2E4.\"})]})});};export default Redirect;","map":{"version":3,"names":["React","useEffect","useNavigate","useDispatch","Redirect","navigater","dispatch","urlParams","URL","window","location","href","searchParams","name","get","urlParamsErro","nameErro","RequestUserData","userId","fetch","method","mode","cache","credentials","headers","body","JSON","stringify","then","res","json","userData","console","log","catch","userDate_error","setTimeout","alert","type","data","code","queryStringBody","Object","keys","map","k","encodeURIComponent","encodeURI","join","plus_res","plus_data","plus_error","error"],"sources":["C:/Users/blue_/Desktop/GitHub/soso-web/WebContent/web/main/src/components/Redirect.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport './Redirect.css';\r\n\r\nfunction Redirect() {\r\n    const navigater = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const urlParams = new URL(window.location.href).searchParams;\r\n    const name = urlParams.get('code');\r\n    const urlParamsErro = new URL(window.location.href).searchParams;\r\n    const nameErro = urlParamsErro.get('error_description');\r\n\r\n    // function requestToken() {\r\n    //     const body = {\r\n    //         grant_type: \"authorization_code\",\r\n    //         client_id: process.env.REACT_APP_REST_API_KEY,\r\n    //         redirect_uri: \"\",\r\n    //         code: name\r\n    //     };\r\n    //     const queryStringBody = Object.keys(body)\r\n    //         .map(k => encodeURIComponent(k) + \"=\" + encodeURI(body[k]))\r\n    //         .join(\"&\");\r\n    //     fetch(\"https://kauth.kakao.com/oauth/token\", {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n    //         },\r\n    //         body: queryStringBody\r\n    //     })\r\n    //         .then(res => res.json())\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //             console.log(data.access_token);\r\n    //             usertoken = data.access_token;\r\n    //         });\r\n    // };\r\n\r\n    function RequestUserData(userId) {\r\n        fetch('https://plater.kr/api/memberbyuserid/', {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(userId)\r\n        })\r\n            .then(res => res.json())\r\n            .then((userData) => {\r\n                console.log(userData);\r\n            })\r\n            .catch((userDate_error) => {\r\n                console.log(userDate_error);\r\n            })\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (nameErro === 'User denied access') {\r\n                alert('로그인에 실패하였습니다.');\r\n                dispatch({ type: 'CHANGE_USERID', data: null });\r\n                navigater('/login');\r\n            };\r\n            const code = { code: name };\r\n            console.log(code);\r\n            const queryStringBody = Object.keys(code)\r\n                .map(k => encodeURIComponent(k) + \"=\" + encodeURI(code[k]))\r\n                .join(\"&\");\r\n            fetch('https://plater.kr/api/kakao', {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n                },\r\n                body: queryStringBody\r\n            })\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    console.log('암호화된 ID: ' + data);\r\n                    fetch('https://plater.kr/api/member', {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        cache: 'no-cache',\r\n                        credentials: 'same-origin',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            // 'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n                        },\r\n                        body: JSON.stringify(data)\r\n                    })\r\n                        .then(plus_res => plus_res.json())\r\n                        .then((plus_data) => {\r\n                            console.log('비암호화된 ID: ' + plus_data);\r\n                            dispatch({ type: 'CHANGE_USERID', data: plus_data });\r\n                            RequestUserData(plus_data);\r\n                            navigater('/main');\r\n                        })\r\n                        .catch((plus_error) => {\r\n                            console.log('비암호화된 ID 오류: ' + plus_error);\r\n                            alert('서버가 불안정 하여 비암호화된 사용자 ID를 받아오지 못했습니다.');\r\n                            dispatch({ type: 'CHANGE_USERID', data: null });\r\n                            navigater('/login');\r\n                        })\r\n                })\r\n                .catch((error) => {\r\n                    console.log('암호화된 ID 오류: ' + error);\r\n                    alert('서버가 불안정 하여 로그인에 실패했습니다.');\r\n                    dispatch({ type: 'CHANGE_USERID', data: null });\r\n                    navigater('/login');\r\n                });\r\n        }, 2000);\r\n    }, []);\r\n    // }, [name, nameErro, navigater, dispatch]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='redirect_outContainer'>\r\n                <div className='redirect_gif'></div>\r\n                <h3 className='redirect_h3'>로그인 중입니다...</h3>\r\n                <h4 className='redirect_h4'>[리빙포인트] 달에는 토끼가 떡을 만들고 있다.</h4>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Redirect;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}