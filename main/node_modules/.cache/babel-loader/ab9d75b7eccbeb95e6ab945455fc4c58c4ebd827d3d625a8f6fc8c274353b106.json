{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blue_\\\\Desktop\\\\GitHub\\\\soso-web\\\\WebContent\\\\web\\\\main\\\\src\\\\components\\\\ShowMemberInf.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport './ShowMemberInf.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShowMemberInf() {\n  _s();\n  const userData = useSelector(state => state.userData);\n  const [Dday, setDday] = useState(Number(userData.openDate));\n  const setDDay = useCallback(() => {\n    let count = setInterval(function () {\n      let now = new Date().getTime();\n      let distance = Dday - now;\n      let days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      let hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      let minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n      let seconds = Math.floor(distance % (1000 * 60) / 1000);\n      setDday(days + '일 ' + hours + '시간 ' + minutes + '분 ' + seconds + '초');\n      if (distance < 0) {\n        clearInterval(count);\n        setDday(\"편지를 열어보세요.\");\n      }\n      ;\n    }, 0);\n  }, [Dday]);\n  useEffect(() => {\n    setDDay();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"yesname_outContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\uC791\\uC740\\uBCC4-\", userData.nickname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\uB0A8\\uC740 \\uC2DC\\uAC04\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: Dday\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(ShowMemberInf, \"M5AwcFmLzenVfBWeWjlAGAywByE=\", false, function () {\n  return [useSelector];\n});\n_c = ShowMemberInf;\n;\nexport default ShowMemberInf;\nvar _c;\n$RefreshReg$(_c, \"ShowMemberInf\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useSelector","ShowMemberInf","userData","state","Dday","setDday","Number","openDate","setDDay","count","setInterval","now","Date","getTime","distance","days","Math","floor","hours","minutes","seconds","clearInterval","nickname"],"sources":["C:/Users/blue_/Desktop/GitHub/soso-web/WebContent/web/main/src/components/ShowMemberInf.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './ShowMemberInf.css';\r\n\r\nfunction ShowMemberInf() {\r\n    const userData = useSelector((state) => state.userData);\r\n    const [Dday, setDday] = useState(Number(userData.openDate));\r\n\r\n    const setDDay = useCallback(() => {\r\n        let count = setInterval(function () {\r\n            let now = new Date().getTime();\r\n            let distance = Dday - now;\r\n            let days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n            let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n            let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n            let seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n            setDday(days + '일 ' + hours + '시간 ' + minutes + '분 ' + seconds + '초');\r\n            if (distance < 0) {\r\n                clearInterval(count);\r\n                setDday(\"편지를 열어보세요.\");\r\n            };\r\n        }, 0);\r\n    }, [Dday]);\r\n\r\n    useEffect(() => {\r\n        setDDay();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='yesname_outContainer'>\r\n            <h3>작은별-{userData.nickname}</h3>\r\n            <h4>남은 시간</h4>\r\n            <h4>{Dday}</h4>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShowMemberInf;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,qBAAqB;AAAC;AAE7B,SAASC,aAAa,GAAG;EAAA;EACrB,MAAMC,QAAQ,GAAGF,WAAW,CAAEG,KAAK,IAAKA,KAAK,CAACD,QAAQ,CAAC;EACvD,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAACO,MAAM,CAACJ,QAAQ,CAACK,QAAQ,CAAC,CAAC;EAE3D,MAAMC,OAAO,GAAGX,WAAW,CAAC,MAAM;IAC9B,IAAIY,KAAK,GAAGC,WAAW,CAAC,YAAY;MAChC,IAAIC,GAAG,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;MAC9B,IAAIC,QAAQ,GAAGV,IAAI,GAAGO,GAAG;MACzB,IAAII,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;MACvD,IAAII,KAAK,GAAGF,IAAI,CAACC,KAAK,CAAEH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;MAC7E,IAAIK,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;MACrE,IAAIM,OAAO,GAAGJ,IAAI,CAACC,KAAK,CAAEH,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,IAAI,CAAC;MACzDT,OAAO,CAACU,IAAI,GAAG,IAAI,GAAGG,KAAK,GAAG,KAAK,GAAGC,OAAO,GAAG,IAAI,GAAGC,OAAO,GAAG,GAAG,CAAC;MACrE,IAAIN,QAAQ,GAAG,CAAC,EAAE;QACdO,aAAa,CAACZ,KAAK,CAAC;QACpBJ,OAAO,CAAC,YAAY,CAAC;MACzB;MAAC;IACL,CAAC,EAAE,CAAC,CAAC;EACT,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC;EAEVN,SAAS,CAAC,MAAM;IACZU,OAAO,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAK,SAAS,EAAC,sBAAsB;IAAA,wBACjC;MAAA,kCAASN,QAAQ,CAACoB,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAChC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACd;MAAA,UAAKlB;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACb;AAEd;AAAC,GA/BQH,aAAa;EAAA,QACDD,WAAW;AAAA;AAAA,KADvBC,aAAa;AA+BrB;AAED,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}