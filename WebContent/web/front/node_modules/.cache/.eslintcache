[{"C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\index.js":"1","C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\App.js":"2","C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\reportWebVitals.js":"3","C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\components\\Login.js":"4","C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\components\\Redirect.js":"5","C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\components\\ModalStory.js":"6","C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\components\\Menu.js":"7","C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\components\\NameOfPlanet.js":"8","C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\components\\Redirect2.js":"9","C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\index.js":"10","C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\reportWebVitals.js":"11","C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\App.js":"12","C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\components\\Redirect2.js":"13","C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\components\\Redirect.js":"14","C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\components\\Login.js":"15","C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\components\\ModalStory.js":"16","C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\components\\Menu.js":"17","C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\components\\NameOfPlanet.js":"18"},{"size":630,"mtime":1667129361012,"results":"19","hashOfConfig":"20"},{"size":4577,"mtime":1666973788162,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1662728789139,"results":"22","hashOfConfig":"20"},{"size":6398,"mtime":1666878707228,"results":"23","hashOfConfig":"20"},{"size":1876,"mtime":1666354690875,"results":"24","hashOfConfig":"20"},{"size":3393,"mtime":1666510004789,"results":"25","hashOfConfig":"20"},{"size":5827,"mtime":1666604151178,"results":"26","hashOfConfig":"20"},{"size":26653,"mtime":1666973795111,"results":"27","hashOfConfig":"20"},{"size":740,"mtime":1666513398167,"results":"28","hashOfConfig":"20"},{"size":630,"mtime":1667129361012,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1662728789139,"results":"31","hashOfConfig":"30"},{"size":4577,"mtime":1667315314377,"results":"32","hashOfConfig":"30"},{"size":740,"mtime":1666513398167,"results":"33","hashOfConfig":"30"},{"size":1876,"mtime":1666354690875,"results":"34","hashOfConfig":"30"},{"size":6398,"mtime":1666878707228,"results":"35","hashOfConfig":"30"},{"size":3393,"mtime":1666510004789,"results":"36","hashOfConfig":"30"},{"size":5827,"mtime":1666604151178,"results":"37","hashOfConfig":"30"},{"size":26653,"mtime":1666973795111,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18k6k54",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"14hvvbj",{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"71"},"C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\index.js",[],[],"C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\App.js",[],[],"C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\components\\Login.js",[],[],"C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\components\\Redirect.js",[],[],"C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\components\\ModalStory.js",[],[],"C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\components\\Menu.js",[],[],"C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\components\\NameOfPlanet.js",["96","97"],[],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport Slider from \"react-slick\";\r\nimport './NameOfPlanet.css';\r\n\r\nfunction NameOfPlanet(props) {\r\n\r\n    const [checkOpenDate, setCheckOpenDate] = useState(true);\r\n    const [renderPage, setRenderPage] = useState(0);\r\n    const [yesNameUrl, setYesNameUrl] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (props.props.userData.openDate === null) {\r\n            setCheckOpenDate(true);\r\n        } else if (props.props.userData.openDate !== null) {\r\n            setCheckOpenDate(false);\r\n        };\r\n    }, [props.props.userData.openDate]);\r\n\r\n\r\n    function ShareButton(props) {\r\n\r\n        const [checkMainButton, setCheckMainButton] = useState(false);\r\n        const [checkShare, setCheckShare] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (props.props.props.props.userData.openDate !== null) {\r\n                setCheckMainButton(true);\r\n            };\r\n        }, [props.props.props.props.userData.openDate]);\r\n\r\n        const basicURL = 'https://angelo-s-library-2.netlify.app/';\r\n        const image_share = 'https://cdn-icons-png.flaticon.com/512/1111/1111905.png';\r\n        const title = 'Planetter - 기다려지는 소식';\r\n\r\n        // function of to share throught the kakaotalk message\r\n        function kakaoShare() {\r\n            const KakaoJS = process.env.REACT_APP_JAVASCRIPT_KEY\r\n            if (!window.Kakao.isInitialized()) {\r\n                window.Kakao.init(KakaoJS);\r\n            };\r\n            window.Kakao.Share.sendDefault({\r\n                objectType: 'feed',\r\n                content: {\r\n                    title: 'Planetter',\r\n                    description: 'Planetter-기다려지는 소식',\r\n                    imageUrl: image_share,\r\n                    link: {\r\n                        mobileWebUrl: basicURL,\r\n                        webUrl: basicURL,\r\n                    },\r\n                },\r\n                buttons: [\r\n                    {\r\n                        title: 'Planetter-편지 보내기',\r\n                        link: {\r\n                            mobileWebUrl: basicURL,\r\n                            webUrl: basicURL,\r\n                        },\r\n                    },\r\n                    {\r\n                        title: 'Planetter-놀러가기',\r\n                        link: {\r\n                            mobileWebUrl: basicURL,\r\n                            webUrl: basicURL,\r\n                        },\r\n                    },\r\n                ],\r\n                installTalk: true,\r\n            });\r\n        };\r\n\r\n        // function of to share throught the twitter\r\n        function shareTwitter() {\r\n            let url = encodeURIComponent(basicURL);\r\n            window.open(`https://twitter.com/intent/tweet?url=${url}&text=${title}`, '소소한 프로젝트', 'width=400, height=400');\r\n        };\r\n\r\n        // function of to share throught the facebook\r\n        function shareFacebook() {\r\n            window.open('https://www.facebook.com/sharer/sharer.php?u='\r\n                + encodeURIComponent(basicURL)\r\n                + '&t=' + encodeURIComponent(title),\r\n                'facebooksharedialog',\r\n                'menubar=no, toolbar=no, resizable=yes, scrollbars=yes, height=400, width=400');\r\n        };\r\n\r\n        function urlCopy() {\r\n            var Dummy_Tag = document.createElement(\"input\");\r\n            var Current_URL = window.location.href;\r\n            document.body.appendChild(Dummy_Tag);\r\n            Dummy_Tag.value = Current_URL;\r\n            Dummy_Tag.select();\r\n            document.execCommand(\"copy\");\r\n            document.body.removeChild(Dummy_Tag);\r\n            alert(\"링크가 복사되었습니다.\\nThe link has been copied.\");\r\n        };\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className={checkMainButton ? 'shareButton_outContainer_active' : 'shareButton_outContainer'} onClick={() => { setCheckShare(!checkShare) }}>\r\n                    <img className='shareButton_share' alt='share' src='https://cdn-icons-png.flaticon.com/512/929/929539.png'></img>\r\n                </div>\r\n                <div className='shareButton_innerContainer'>\r\n                    <img className={checkShare ? 'shareButton_share_btn_url_active' : 'shareButton_share_btn'} alt='url' src='https://cdn-icons-png.flaticon.com/512/4050/4050374.png' onClick={urlCopy}></img>\r\n                    <img className={checkShare ? 'shareButton_share_btn_kakao_active' : 'shareButton_share_btn'} alt='kakao' src='https://cdn-icons-png.flaticon.com/512/3669/3669990.png' onClick={kakaoShare}></img>\r\n                    <img className={checkShare ? 'shareButton_share_btn_facebook_active' : 'shareButton_share_btn'} alt='facebook' src='https://cdn-icons-png.flaticon.com/512/2168/2168281.png' onClick={shareFacebook}></img>\r\n                    <img className={checkShare ? 'shareButton_share_btn_twitter_active' : 'shareButton_share_btn'} alt='twitter' src='https://cdn-icons-png.flaticon.com/512/2168/2168336.png' onClick={shareTwitter}></img>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    function YesNameUrl() {\r\n\r\n        function urlCopy() {\r\n            var Dummy_Tag = document.createElement(\"input\");\r\n            var Current_URL = window.location.href;\r\n            document.body.appendChild(Dummy_Tag);\r\n            Dummy_Tag.value = Current_URL;\r\n            Dummy_Tag.select();\r\n            document.execCommand(\"copy\");\r\n            document.body.removeChild(Dummy_Tag);\r\n            alert(\"링크가 복사되었습니다.\\nThe link has been copied.\");\r\n            setYesNameUrl(!yesNameUrl);\r\n        };\r\n\r\n        return (\r\n            <div className={yesNameUrl ? \"yesNameUrl\" : \"yesNameUrl_fade\"}>\r\n                <div className='yesNameUrl_outContainer'>\r\n                    <img alt='close' className='yesNameUrl_img' src='https://cdn-icons-png.flaticon.com/512/463/463612.png' onClick={() => { setYesNameUrl(!yesNameUrl) }}></img>\r\n                    <p className='yesNameUrl_title'>행성 개설 완료!</p>\r\n                    <p className='yesNameUrl_p'>신호를 공유해 편지를 받아보세요!</p>\r\n                    <div className='yesNameUrl_button' onClick={urlCopy}>링크 복사</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    function NoName(props) {\r\n\r\n        const [viewSend, setViewSend] = useState(true);\r\n        const [changeUserNickname, setChangeUserNickname] = useState(String(props.props.props.props.userData.nickname));\r\n        const [inputUserNameLength, setInputUserNameLength] = useState(Number(props.props.props.props.userData.nickname.length));\r\n        const [startMonth, setStartMonth] = useState(null);\r\n        const [startHours, setStartHours] = useState(null);\r\n        const [endMonth, setEndMonth] = useState(null);\r\n        const [endHours, setEndHours] = useState(null);\r\n        const [startDate, setStartDate] = useState(null);\r\n\r\n        function settingStartDate() {\r\n            const now = new Date();\r\n            now.setDate(now.getDate() + 10);\r\n            setStartDate(now.getTime());\r\n        };\r\n\r\n        function settingStartMonth() {\r\n            setInterval(function () {\r\n                let now = new Date();\r\n                let months = now.getMonth() + 1;\r\n                let days = now.getDate();\r\n                setStartMonth(months + '-' + days);\r\n            }, 1000);\r\n        };\r\n\r\n        function settingStartHours() {\r\n            setInterval(function () {\r\n                let now = new Date();\r\n                let hours = now.getHours();\r\n                let minutes = now.getMinutes();\r\n                let seconds = now.getSeconds();\r\n                setStartHours(hours + ':' + minutes + ':' + seconds);\r\n            }, 1000);\r\n        };\r\n\r\n        function settingEndtMonth() {\r\n            setInterval(function () {\r\n                let now = new Date();\r\n                now.setDate(now.getDate() + 10)\r\n                let months = now.getMonth() + 1;\r\n                let days = now.getDate();\r\n                setEndMonth(months + '-' + days);\r\n            }, 1000);\r\n        };\r\n\r\n        function settingEndHours() {\r\n            setInterval(function () {\r\n                let now = new Date();\r\n                let hours = now.getHours();\r\n                let minutes = now.getMinutes();\r\n                let seconds = now.getSeconds();\r\n                setEndHours(hours + ':' + minutes + ':' + seconds);\r\n            }, 1000);\r\n        };\r\n\r\n        function showSettingPage() {\r\n            setViewSend(!viewSend);\r\n            settingStartDate();\r\n            settingStartMonth();\r\n            settingStartHours();\r\n            settingEndtMonth();\r\n            settingEndHours();\r\n        };\r\n\r\n        function nonshowSettingPage() {\r\n            const originalUserNickname = String(props.props.props.props.userData.nickname);\r\n            const originalUserNicknameLength = Number(props.props.props.props.userData.nickname.length);\r\n            setChangeUserNickname(originalUserNickname);\r\n            setInputUserNameLength(originalUserNicknameLength);\r\n            setViewSend(!viewSend);\r\n        };\r\n\r\n        function settingUserData() {\r\n            if (window.confirm(`${changeUserNickname}(이)란 이름으로 행성을 개설할까요?`)) {\r\n                let newUserData = props.props.props.props.userData;\r\n                newUserData['nickname'] = changeUserNickname;\r\n                newUserData['openDate'] = startDate;\r\n                props.props.props.props.setUserData(newUserData);\r\n                setViewSend(!viewSend);\r\n                setYesNameUrl(!yesNameUrl);\r\n                setRenderPage(renderPage + 1);\r\n            };\r\n        };\r\n\r\n        return (\r\n            <div className='noname_outContainer'>\r\n                <h3>아직 신호를 보내지 않았습니다.</h3>\r\n                <div className='noname_sendSignal' onClick={showSettingPage}>신호 보내기</div>\r\n                <div className={viewSend ? \"noname_sendSignal_outContainer_fade\" : \"noname_sendSignal_outContainer\"}>\r\n                    <div className='noname_sendSignal_innerTitle'>\r\n                        <img alt='back_icon' className='noname_sendSignal_innerTitle_backIcon' src='https://cdn-icons-png.flaticon.com/512/8287/8287941.png' onClick={nonshowSettingPage}></img>\r\n                        <p className='noname_sendSignal_innerTitle_p'>안녕, 잘 지내?\r\n                            <br></br>\r\n                            나는…\r\n                        </p>\r\n                    </div>\r\n                    <div className='noname_sendSignal_innerName'>\r\n                        <p className='noname_sendSignal_innerName_p'>행성의 이름</p>\r\n                        <input id='input_userName' maxLength={10} onChange={(e) => {\r\n                            setInputUserNameLength(e.target.value.length)\r\n                            setChangeUserNickname(e.target.value)\r\n                        }} value={changeUserNickname}></input><span className='inputUserNameLength'>{inputUserNameLength}/10</span>\r\n                    </div>\r\n                    <div className='noname_sendSignal_line'></div>\r\n                    <div className='noname_sendSignal_innerTime'>\r\n                        <p className='noname_sendSignal_innerTime_p'>시작 - 마감</p>\r\n                        <h6 className='noname_sendSignal_innerTime_h6'>Planetter는 10일의 시간을 제공합니다.</h6>\r\n                    </div>\r\n                    <div className='noname_sendSignal_innerTime_view'>\r\n                        <div className='noname_sendSignal_innerTime_view_start'>\r\n                            <p className='noname_sendSignal_innerTime_view_p'>시작</p>\r\n                            <p className='noname_sendSignal_innerTime_view_month'>{startMonth}</p>\r\n                            <p className='noname_sendSignal_innerTime_view_hours'>{startHours}</p>\r\n                        </div>\r\n                        <div className='noname_sendSignal_innerTime_view_pause'>~</div>\r\n                        <div className='noname_sendSignal_innerTime_view_end'>\r\n                            <p className='noname_sendSignal_innerTime_view_p'>마감</p>\r\n                            <p className='noname_sendSignal_innerTime_view_month'>{endMonth}</p>\r\n                            <p className='noname_sendSignal_innerTime_view_hours'>{endHours}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='noname_sendSignal_line'></div>\r\n                    <div className='noname_sendSignal_innerNotice'>\r\n                        <div className='noname_sendSignal_innerNotice_innerbox'>\r\n                            <p className='noname_sendSignal_innerNotice_p'>알림 설정</p>\r\n                            <h6 className='noname_sendSignal_innerNotice_h6'>카카오톡을 통해 D-Day 알림을 받습니다.</h6>\r\n                        </div>\r\n                        <div>\r\n                            <img alt='button_notice' className='noname_sendSignal_innerNotice_button' src='https://cdn-icons-png.flaticon.com/512/5720/5720465.png' onClick={() => { alert('아직 서비스 준비 중입니다.') }}></img>\r\n                        </div>\r\n                    </div>\r\n                    <div className='noname_sendSignal_startDiv'>\r\n                        <div className='noname_sendSignal_startDiv_button' onClick={settingUserData}>시작하기</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    function YesName(props) {\r\n\r\n        const [Dday, setDday] = useState(Number(props.props.props.props.userData.openDate));\r\n\r\n        const setDDay = useCallback(() => {\r\n            let count = setInterval(function () {\r\n                // Get today's date and time\r\n                let now = new Date().getTime();\r\n                // Find the distance between now and the count down date\r\n                let distance = Dday - now;\r\n                // Time calculations for days, hours, minutes and seconds\r\n                let days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n                let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n                let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n                let seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n                // Output the result in an element with id=\"Dday\"\r\n                setDday(days + '일 ' + hours + '시간 ' + minutes + '분 ' + seconds + '초');\r\n                // If the count down is over, write some text\r\n                if (distance < 0) {\r\n                    clearInterval(count);\r\n                    setDday(\"편지를 열어보세요.\");\r\n                };\r\n            }, 0);\r\n        }, [Dday]);\r\n\r\n        useEffect(() => {\r\n            setDDay();\r\n        }, []);\r\n\r\n        return (\r\n            <div className='yesname_outContainer'>\r\n                <h3>P-{props.props.props.props.userData.nickname}</h3>\r\n                <h4>남은 시간</h4>\r\n                <h4>{Dday}</h4>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    function Letter(props) {\r\n\r\n        return (\r\n            <div>\r\n                {/* <div onClick={() => { props.props.setLetterModal(!props.props.letterModal) }}>\r\n                    <div className={\"modallettermodal\" + props.props.props.props.props.props.letterData[props.props.letterId - 1].fontColor}>\r\n                        <h1 className=\"modal_titlelettermodal\">{\"From: \" + props.props.props.props.props.props.letterData[props.props.letterId - 1].author}</h1>\r\n                        <span className={'abcdefg' + props.props.props.props.props.props.letterData[props.props.letterId - 1].fontFamily}>\r\n                            <article className={\"modal_desclettermodal\" + props.props.props.props.props.props.letterData[props.props.letterId - 1].fontColor}>\r\n                                {\"Letter Description: \" + props.props.props.props.props.props.letterData[props.props.letterId - 1].desc}\r\n                                <br></br>\r\n                                {\"Letter Font Color: \" + props.props.props.props.props.props.letterData[props.props.letterId - 1].fontColor}\r\n                                <br></br>\r\n                                {\"Letter Font Family: \" + props.props.props.props.props.props.letterData[props.props.letterId - 1].fontFamily}\r\n                            </article>\r\n                        </span>\r\n                        <h3 className=\"modal_authorlettermodal\"></h3>\r\n                        <div className=\"modal_closelettermodal\" onClick={() => { props.props.setLetterModal(!props.props.letterModal) }}></div>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    function LetterBox(props) {\r\n\r\n        const [renderPage, setRenderPage] = useState(0);\r\n        const [letterModal, setLetterModal] = useState(false);\r\n        const [letterId, setLetterId] = useState(null);\r\n        const [list, setList] = useState([<span key={1} style={{ color: \"white\" }}>Loading...</span>]);\r\n        const [list2, setList2] = useState([<span key={2} style={{ color: \"white\" }}>Loading...</span>]);\r\n        const [list3, setList3] = useState([<span key={3} style={{ color: \"white\" }}>Loading...</span>]);\r\n        const [list4, setList4] = useState([<span key={4} style={{ color: \"white\" }}>Loading...</span>]);\r\n\r\n        function openLetter(letterData, i) {\r\n            let now = new Date().getTime();\r\n            let distance = props.props.props.props.userData.openDate - now;\r\n            if (distance < 0) {\r\n                alert('편지를 읽다')\r\n                if (i === 6 || i === 14 || i === 22 || i === 30) {\r\n                    let props = letterData;\r\n                    let propsObj = {\r\n                        \"num\": letterData[i].num, \"desc\": letterData[i].desc, \"fontColor\": letterData[i].fontColor, \"fontFamily\": letterData[i].fontFamily, \"letterIcon\": \"open1\", \"openOrNot\": \"true\", \"author\": letterData[i].author\r\n                    };\r\n                    props[i] = propsObj;\r\n                    setLetterModal(!letterModal);\r\n                    setLetterId(Number(letterData[i].num));\r\n                    setRenderPage(renderPage + 1);\r\n                } else if (i === 7 || i === 15 || i === 23 || i === 31) {\r\n                    let props = letterData;\r\n                    let propsObj = {\r\n                        \"num\": letterData[i].num, \"desc\": letterData[i].desc, \"fontColor\": letterData[i].fontColor, \"fontFamily\": letterData[i].fontFamily, \"letterIcon\": \"open2\", \"openOrNot\": \"true\", \"author\": letterData[i].author\r\n                    };\r\n                    props[i] = propsObj;\r\n                    setLetterModal(!letterModal);\r\n                    setLetterId(Number(letterData[i].num));\r\n                    setRenderPage(renderPage + 1);\r\n                } else if (-1 < i < 6 || 7 < i < 14 || 15 < i < 22 || 23 < i < 30) {\r\n                    let props = letterData;\r\n                    let propsObj = {\r\n                        \"num\": letterData[i].num, \"desc\": letterData[i].desc, \"fontColor\": letterData[i].fontColor, \"fontFamily\": letterData[i].fontFamily, \"letterIcon\": \"open\", \"openOrNot\": \"true\", \"author\": letterData[i].author\r\n                    };\r\n                    props[i] = propsObj;\r\n                    setLetterModal(!letterModal);\r\n                    setLetterId(Number(letterData[i].num));\r\n                    setRenderPage(renderPage + 1);\r\n                };\r\n            } else {\r\n                alert('아직 못 읽어요.');\r\n            };\r\n        };\r\n\r\n        let settings = {\r\n            draggable: false,\r\n            swipe: false,\r\n            arrows: true,\r\n            dots: true,\r\n            infinite: false,\r\n            speed: 1250,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1\r\n        };\r\n\r\n        useEffect(() => {\r\n            const list = [];\r\n            const list2 = [];\r\n            const list3 = [];\r\n            const list4 = [];\r\n\r\n            if (props.props.props.props.letterData.length === 0) {\r\n                setList(<span style={{ color: \"black\" }}>Nothing...</span>)\r\n                setList2(<span style={{ color: \"black\" }}>Nothing...</span>)\r\n                setList3(<span style={{ color: \"black\" }}>Nothing...</span>)\r\n                setList4(<span style={{ color: \"black\" }}>Nothing...</span>)\r\n            } else if (props.props.props.props.letterData.length <= 8) {\r\n                for (let i = 0; i < props.props.props.props.letterData.length; i++) {\r\n                    let li = props.props.props.props.letterData[i]\r\n                    list.push(React.Children.toArray(<button key={li.num} data-id={li.num} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(props.props.props.props.letterData, i) }}></button>))\r\n                    setList(list)\r\n                }\r\n            } else if (props.props.props.props.letterData.length <= 16) {\r\n                for (let i = 0; i < 8; i++) {\r\n                    let li = props.props.props.props.letterData[i]\r\n                    list.push(React.Children.toArray(<button key={li.num} data-id={li.num} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(props.props.props.props.letterData, i) }}></button>))\r\n                    setList(list)\r\n                }\r\n\r\n                for (let i = 8; i < props.props.props.props.letterData.length; i++) {\r\n                    let li = props.props.props.props.letterData[i]\r\n                    list2.push(React.Children.toArray(<button key={li.num} data-id={li.num} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(props.props.props.props.letterData, i) }}></button>))\r\n                    setList2(list2)\r\n                }\r\n            } else if (props.props.props.props.letterData.length <= 24) {\r\n                for (let i = 0; i < 8; i++) {\r\n                    let li = props.props.props.props.letterData[i]\r\n                    list.push(React.Children.toArray(<button key={li.num} data-id={li.num} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(props.props.props.props.letterData, i) }}></button>))\r\n                    setList(list)\r\n                }\r\n\r\n                for (let i = 8; i < 16; i++) {\r\n                    let li = props.props.props.props.letterData[i]\r\n                    list2.push(React.Children.toArray(<button key={li.num} data-id={li.num} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(props.props.props.props.letterData, i) }}></button>))\r\n                    setList2(list2)\r\n                }\r\n                for (let i = 16; i < props.props.props.props.letterData.length; i++) {\r\n                    let li = props.props.props.props.letterData[i]\r\n                    list3.push(React.Children.toArray(<button key={li.num} data-id={li.num} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(props.props.props.props.letterData, i) }}></button>))\r\n                    setList3(list3)\r\n                }\r\n\r\n            } else if (props.props.props.props.letterData.length <= 32) {\r\n                for (let i = 0; i < 8; i++) {\r\n                    let li = props.props.props.props.letterData[i]\r\n                    list.push(React.Children.toArray(<button key={li.num} data-id={li.num} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(props.props.props.props.letterData, i) }}></button>))\r\n                    setList(list)\r\n                }\r\n\r\n                for (let i = 8; i < 16; i++) {\r\n                    let li = props.props.props.props.letterData[i]\r\n                    list2.push(React.Children.toArray(<button key={li.num} data-id={li.num} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(props.props.props.props.letterData, i) }}></button>))\r\n                    setList2(list2)\r\n\r\n                }\r\n                for (let i = 16; i < 24; i++) {\r\n                    let li = props.props.props.props.letterData[i]\r\n                    list3.push(React.Children.toArray(<button key={li.num} data-id={li.num} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(props.props.props.props.letterData, i) }}></button>))\r\n                    setList3(list3)\r\n\r\n                }\r\n                for (let i = 24; i < props.props.props.props.letterData.length; i++) {\r\n                    let li = props.props.props.props.letterData[i]\r\n                    list4.push(React.Children.toArray(<button key={li.num} data-id={li.num} className={\"letter\" + li.letterIcon} onClick={() => { openLetter(props.props.props.props.letterData, i) }}></button>))\r\n                    setList4(list4)\r\n\r\n                }\r\n            } else {\r\n                console.log(\"I'm full\")\r\n            }\r\n        }, [props.props.props.props.letterData, renderPage])\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {letterModal && <Letter props={{ props, letterModal, setLetterModal, letterId }}></Letter>}\r\n                <div className='letterBox_outContainer'>\r\n                    <Slider {...settings}>\r\n                        <div className='letterBox_innerContainer'>\r\n                            <div className='letterBox_innerContainer_div'>{list}\r\n                            </div>\r\n                        </div>\r\n                        <div className='letterBox_innerContainer'>\r\n                            <div className='letterBox_innerContainer_div'>{list2}\r\n                            </div>\r\n                        </div>\r\n                        <div className='letterBox_innerContainer'>\r\n                            <div className='letterBox_innerContainer_div'>{list3}\r\n                            </div>\r\n                        </div>\r\n                        <div className='letterBox_innerContainer'>\r\n                            <div className='letterBox_innerContainer_div'>{list4}\r\n                            </div>\r\n                        </div>\r\n                    </Slider>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ShareButton props={{ props }}></ShareButton>\r\n            {checkOpenDate ? <NoName props={{ props }}></NoName> : <YesName props={{ props }}></YesName>}\r\n            {checkOpenDate ? '' : <LetterBox props={{ props }}></LetterBox>}\r\n            <YesNameUrl></YesNameUrl>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NameOfPlanet;","C:\\Users\\blue_\\Desktop\\Coding\\project\\planetter\\src\\components\\Redirect2.js",[],[],"C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\index.js",[],[],[],"C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\reportWebVitals.js",[],[],"C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\App.js",[],[],"C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\components\\Redirect2.js",[],[],"C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\components\\Redirect.js",[],[],"C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\components\\Login.js",[],[],"C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\components\\ModalStory.js",[],[],"C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\components\\Menu.js",[],[],"C:\\Users\\blue_\\Desktop\\GitHub\\soso-web\\WebContent\\web\\front\\src\\components\\NameOfPlanet.js",["98","99"],[],{"ruleId":"100","severity":1,"message":"101","line":306,"column":12,"nodeType":"102","endLine":306,"endColumn":14,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":475,"column":12,"nodeType":"102","endLine":475,"endColumn":60,"suggestions":"105"},{"ruleId":"100","severity":1,"message":"101","line":306,"column":12,"nodeType":"102","endLine":306,"endColumn":14,"suggestions":"106"},{"ruleId":"100","severity":1,"message":"104","line":475,"column":12,"nodeType":"102","endLine":475,"endColumn":60,"suggestions":"107"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setDDay'. Either include it or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has a missing dependency: 'openLetter'. Either include it or remove the dependency array.",["109"],["110"],["111"],{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"112","fix":"116"},{"desc":"114","fix":"117"},"Update the dependencies array to be: [setDDay]",{"range":"118","text":"119"},"Update the dependencies array to be: [openLetter, props.props.props.props.letterData, renderPage]",{"range":"120","text":"121"},{"range":"122","text":"119"},{"range":"123","text":"121"},[14608,14610],"[setDDay]",[24568,24616],"[openLetter, props.props.props.props.letterData, renderPage]",[14608,14610],[24568,24616]]