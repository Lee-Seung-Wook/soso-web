{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blue_\\\\Desktop\\\\Coding\\\\project\\\\planetter\\\\src\\\\components\\\\NameOfPlanet.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './NameOfPlanet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NameOfPlanet(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [checkOpenDate, setCheckOpenDate] = useState(true);\n  useEffect(() => {\n    if (props.props.props.props.userData.openDate === null) {\n      setCheckOpenDate(true);\n    } else if (props.props.props.props.userData.openDate !== null) {\n      setCheckOpenDate(false);\n    }\n\n    ;\n  }, [props.props.props.props.userData.openDate]);\n\n  function NoName() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noname_outContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC544\\uC9C1 \\uC2E0\\uD638\\uB97C \\uBCF4\\uB0B4\\uC9C0 \\uC54A\\uC558\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n\n  function YesName(props) {\n    _s();\n\n    const [Dday, setDday] = useState(Number(props.props.props.props.props.props.userData.openDate));\n\n    function setDDay() {\n      let count = setInterval(function () {\n        // Get today's date and time\n        let now = new Date().getTime(); // Find the distance between now and the count down date\n\n        let distance = Dday - now; // Time calculations for days, hours, minutes and seconds\n\n        let days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        let hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n        let minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        let seconds = Math.floor(distance % (1000 * 60) / 1000); // Output the result in an element with id=\"Dday\"\n\n        setDday(days + '일 ' + hours + '시간 ' + minutes + '분 ' + seconds + '초'); // If the count down is over, write some text\n\n        if (distance < 0) {\n          clearInterval(count);\n          setDday(\"편지를 열어보세요.\");\n        }\n      }, 0);\n    }\n\n    ;\n    useEffect(() => {\n      setDDay();\n    }, [props.props.props.props.props.props.userData.openDate]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"yesname_outContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"P-\", props.props.props.props.props.props.userData.nickname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uB0A8\\uC740 \\uC2DC\\uAC04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: Dday\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s(YesName, \"NxgeTJy4LaSt5xBHjFOj/1uk4FM=\");\n\n  ;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: checkOpenDate ? /*#__PURE__*/_jsxDEV(NoName, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(YesName, {\n      props: {\n        props\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 50\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(NameOfPlanet, \"bStAQL8UCoBnVKHyzUf1V95KzBw=\");\n\n_c = NameOfPlanet;\nexport default NameOfPlanet;\n\nvar _c;\n\n$RefreshReg$(_c, \"NameOfPlanet\");","map":{"version":3,"names":["React","useEffect","useState","NameOfPlanet","props","checkOpenDate","setCheckOpenDate","userData","openDate","NoName","YesName","Dday","setDday","Number","setDDay","count","setInterval","now","Date","getTime","distance","days","Math","floor","hours","minutes","seconds","clearInterval","nickname"],"sources":["C:/Users/blue_/Desktop/Coding/project/planetter/src/components/NameOfPlanet.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './NameOfPlanet.css';\r\n\r\nfunction NameOfPlanet(props) {\r\n\r\n    const [checkOpenDate, setCheckOpenDate] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (props.props.props.props.userData.openDate === null) {\r\n            setCheckOpenDate(true);\r\n        } else if (props.props.props.props.userData.openDate !== null) {\r\n            setCheckOpenDate(false);\r\n        };\r\n    }, [props.props.props.props.userData.openDate]);\r\n\r\n    function NoName() {\r\n        return (\r\n            <div className='noname_outContainer'>\r\n                <h3>아직 신호를 보내지 않았습니다.</h3>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    function YesName(props) {\r\n\r\n        const [Dday, setDday] = useState(Number(props.props.props.props.props.props.userData.openDate));\r\n\r\n        function setDDay() {\r\n            let count = setInterval(function () {\r\n                // Get today's date and time\r\n                let now = new Date().getTime();\r\n                // Find the distance between now and the count down date\r\n                let distance = Dday - now;\r\n                // Time calculations for days, hours, minutes and seconds\r\n                let days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n                let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n                let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n                let seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n                // Output the result in an element with id=\"Dday\"\r\n                setDday(days + '일 ' + hours + '시간 ' + minutes + '분 ' + seconds + '초');\r\n                // If the count down is over, write some text\r\n                if (distance < 0) {\r\n                    clearInterval(count);\r\n                    setDday(\"편지를 열어보세요.\");\r\n                }\r\n            }, 0);\r\n        };\r\n\r\n        useEffect(() => {\r\n            setDDay();\r\n        }, [props.props.props.props.props.props.userData.openDate]);\r\n\r\n        return (\r\n            <div className='yesname_outContainer'>\r\n                <h3>P-{props.props.props.props.props.props.userData.nickname}</h3>\r\n                <h4>남은 시간</h4>\r\n                <h4>{Dday}</h4>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {checkOpenDate ? <NoName></NoName> : <YesName props={{ props }}></YesName>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default NameOfPlanet;"],"mappings":"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"},"metadata":{},"sourceType":"module"}